{"version":3,"file":"static/js/291.4c9fc5c5.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/PencilIcon.js","utils/formatters.ts","components/common/StatusBadge.tsx","../node_modules/@heroicons/react/24/outline/esm/TruckIcon.js","../node_modules/@heroicons/react/24/outline/esm/ClockIcon.js","../node_modules/@heroicons/react/24/outline/esm/XCircleIcon.js","components/common/ImageGallery.tsx","pages/ProductDetailsPage.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction PencilIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PencilIcon);\nexport default ForwardRef;","/**\r\n * Formatters\r\n * \r\n * This file contains utility functions for formatting data.\r\n */\r\n\r\n/**\r\n * Format a date string to a human-readable format\r\n */\r\nexport const formatDate = (dateString: string, options: Intl.DateTimeFormatOptions = {}): string => {\r\n  if (!dateString) return '-';\r\n  \r\n  try {\r\n    const date = new Date(dateString);\r\n    \r\n    // Default options\r\n    const defaultOptions: Intl.DateTimeFormatOptions = {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      ...options\r\n    };\r\n    \r\n    return new Intl.DateTimeFormat('en-US', defaultOptions).format(date);\r\n  } catch (error) {\r\n    console.error('Error formatting date:', error);\r\n    return dateString;\r\n  }\r\n};\r\n\r\n/**\r\n * Format a date string to include time\r\n */\r\nexport const formatDateTime = (dateString: string): string => {\r\n  return formatDate(dateString, {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  });\r\n};\r\n\r\n/**\r\n * Format a number as currency\r\n */\r\nexport const formatCurrency = (\r\n  amount: number,\r\n  currency: string = 'USD',\r\n  locale: string = 'en-US'\r\n): string => {\r\n  try {\r\n    return new Intl.NumberFormat(locale, {\r\n      style: 'currency',\r\n      currency,\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2\r\n    }).format(amount);\r\n  } catch (error) {\r\n    console.error('Error formatting currency:', error);\r\n    return `${currency} ${amount.toFixed(2)}`;\r\n  }\r\n};\r\n\r\n/**\r\n * Format a number with commas\r\n */\r\nexport const formatNumber = (\r\n  number: number,\r\n  options: Intl.NumberFormatOptions = {}\r\n): string => {\r\n  try {\r\n    return new Intl.NumberFormat('en-US', options).format(number);\r\n  } catch (error) {\r\n    console.error('Error formatting number:', error);\r\n    return number.toString();\r\n  }\r\n};\r\n\r\n/**\r\n * Format a phone number\r\n */\r\nexport const formatPhoneNumber = (phoneNumber: string): string => {\r\n  if (!phoneNumber) return '-';\r\n  \r\n  // Remove all non-numeric characters\r\n  const cleaned = phoneNumber.replace(/\\D/g, '');\r\n  \r\n  // Format based on length\r\n  if (cleaned.length === 10) {\r\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;\r\n  } else if (cleaned.length === 11 && cleaned.startsWith('1')) {\r\n    return `+1 (${cleaned.slice(1, 4)}) ${cleaned.slice(4, 7)}-${cleaned.slice(7)}`;\r\n  }\r\n  \r\n  // If it doesn't match expected formats, return as is\r\n  return phoneNumber;\r\n};\r\n\r\n/**\r\n * Truncate text with ellipsis\r\n */\r\nexport const truncateText = (text: string, maxLength: number): string => {\r\n  if (!text) return '';\r\n  if (text.length <= maxLength) return text;\r\n  \r\n  return `${text.slice(0, maxLength)}...`;\r\n};\r\n\r\n/**\r\n * Format file size\r\n */\r\nexport const formatFileSize = (bytes: number): string => {\r\n  if (bytes === 0) return '0 Bytes';\r\n  \r\n  const k = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  \r\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\r\n};\r\n\r\n/**\r\n * Format a duration in milliseconds to a human-readable format\r\n */\r\nexport const formatDuration = (milliseconds: number): string => {\r\n  const seconds = Math.floor(milliseconds / 1000);\r\n  const minutes = Math.floor(seconds / 60);\r\n  const hours = Math.floor(minutes / 60);\r\n  const days = Math.floor(hours / 24);\r\n  \r\n  if (days > 0) {\r\n    return `${days} day${days > 1 ? 's' : ''}`;\r\n  } else if (hours > 0) {\r\n    return `${hours} hour${hours > 1 ? 's' : ''}`;\r\n  } else if (minutes > 0) {\r\n    return `${minutes} minute${minutes > 1 ? 's' : ''}`;\r\n  } else {\r\n    return `${seconds} second${seconds !== 1 ? 's' : ''}`;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport {\r\n  CheckCircleIcon,\r\n  XCircleIcon,\r\n  ClockIcon,\r\n  TruckIcon,\r\n  ExclamationCircleIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nexport type StatusType = 'user' | 'supplier' | 'order' | 'verification' | 'category';\r\n\r\ninterface StatusBadgeProps {\r\n  status: string;\r\n  type?: StatusType;\r\n  className?: string;\r\n}\r\n\r\nconst StatusBadge: React.FC<StatusBadgeProps> = ({\r\n  status,\r\n  type: _type = 'user',\r\n  className = ''\r\n}) => {\r\n  // Handle undefined or null status\r\n  if (!status) {\r\n    return (\r\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 ${className}`}>\r\n        Unknown\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const statusKey = status.toLowerCase();\r\n  let colorClass = '';\r\n  let icon = null;\r\n  \r\n  // Common statuses across entity types\r\n  if (statusKey === 'active' || statusKey === 'verified' || statusKey === 'completed') {\r\n    colorClass = 'bg-green-100 text-green-800';\r\n    icon = <CheckCircleIcon className=\"w-4 h-4 mr-1\" />;\r\n  } else if (statusKey === 'pending' || statusKey === 'processing') {\r\n    colorClass = 'bg-blue-100 text-blue-800';\r\n    icon = <ClockIcon className=\"w-4 h-4 mr-1\" />;\r\n  } else if (statusKey === 'banned' || statusKey === 'rejected') {\r\n    colorClass = 'bg-red-100 text-red-800';\r\n    icon = <XCircleIcon className=\"w-4 h-4 mr-1\" />;\r\n  } else if (statusKey === 'shipped') {\r\n    colorClass = 'bg-purple-100 text-purple-800';\r\n    icon = <TruckIcon className=\"w-4 h-4 mr-1\" />;\r\n  } else if (statusKey === 'warning') {\r\n    colorClass = 'bg-yellow-100 text-yellow-800';\r\n    icon = <ExclamationCircleIcon className=\"w-4 h-4 mr-1\" />;\r\n  } else {\r\n    colorClass = 'bg-gray-100 text-gray-800';\r\n  }\r\n  \r\n  // Format the status text (capitalize first letter)\r\n  const formattedStatus = status ? status.charAt(0).toUpperCase() + status.slice(1) : 'Unknown';\r\n  \r\n  return (\r\n    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${colorClass} ${className}`}>\r\n      {icon}\r\n      {formattedStatus}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default StatusBadge;\r\n","import * as React from \"react\";\nfunction TruckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8.25 18.75a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m3 0h6m-9 0H3.375a1.125 1.125 0 0 1-1.125-1.125V14.25m17.25 4.5a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m3 0h1.125c.621 0 1.129-.504 1.09-1.124a17.902 17.902 0 0 0-3.213-9.193 2.056 2.056 0 0 0-1.58-.86H14.25M16.5 18.75h-2.25m0-11.177v-.958c0-.568-.422-1.048-.987-1.106a48.554 48.554 0 0 0-10.026 0 1.106 1.106 0 0 0-.987 1.106v7.635m12-6.677v6.677m0 4.5v-4.5m0 0h-12\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TruckIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClockIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction XCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(XCircleIcon);\nexport default ForwardRef;","/**\r\n * Image Gallery Component\r\n *\r\n * A reusable component for displaying product images with carousel functionality\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport { ChevronLeftIcon, ChevronRightIcon, PhotoIcon } from '@heroicons/react/24/outline';\r\n\r\ninterface ImageGalleryProps {\r\n  images: string[];\r\n  productName: string;\r\n  className?: string;\r\n}\r\n\r\nconst ImageGallery: React.FC<ImageGalleryProps> = ({\r\n  images,\r\n  productName,\r\n  className = ''\r\n}) => {\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  const hasImages = images && images.length > 0;\r\n  const hasMultipleImages = hasImages && images.length > 1;\r\n\r\n  const goToPrevious = () => {\r\n    setCurrentImageIndex((prevIndex) => \r\n      prevIndex === 0 ? images.length - 1 : prevIndex - 1\r\n    );\r\n  };\r\n\r\n  const goToNext = () => {\r\n    setCurrentImageIndex((prevIndex) => \r\n      prevIndex === images.length - 1 ? 0 : prevIndex + 1\r\n    );\r\n  };\r\n\r\n  const goToImage = (index: number) => {\r\n    setCurrentImageIndex(index);\r\n  };\r\n\r\n  if (!hasImages) {\r\n    return (\r\n      <div className={`bg-gray-200 rounded-lg flex items-center justify-center ${className}`}>\r\n        <div className=\"text-center\">\r\n          <PhotoIcon className=\"mx-auto h-16 w-16 text-gray-400\" />\r\n          <p className=\"mt-2 text-sm text-gray-500\">No images available</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`space-y-4 ${className}`}>\r\n      {/* Main Image Display */}\r\n      <div className=\"relative bg-gray-100 rounded-lg overflow-hidden aspect-square\">\r\n        <img\r\n          src={images[currentImageIndex]}\r\n          alt={`${productName} - Image ${currentImageIndex + 1}`}\r\n          className=\"w-full h-full object-cover\"\r\n        />\r\n        \r\n        {/* Navigation Arrows */}\r\n        {hasMultipleImages && (\r\n          <>\r\n            <button\r\n              onClick={goToPrevious}\r\n              className=\"absolute left-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-70 transition-opacity\"\r\n              aria-label=\"Previous image\"\r\n            >\r\n              <ChevronLeftIcon className=\"h-5 w-5\" />\r\n            </button>\r\n            <button\r\n              onClick={goToNext}\r\n              className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-70 transition-opacity\"\r\n              aria-label=\"Next image\"\r\n            >\r\n              <ChevronRightIcon className=\"h-5 w-5\" />\r\n            </button>\r\n          </>\r\n        )}\r\n\r\n        {/* Image Counter */}\r\n        {hasMultipleImages && (\r\n          <div className=\"absolute bottom-2 right-2 bg-black bg-opacity-50 text-white px-2 py-1 rounded text-sm\">\r\n            {currentImageIndex + 1} / {images.length}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Thumbnail Navigation */}\r\n      {hasMultipleImages && (\r\n        <div className=\"flex space-x-2 overflow-x-auto pb-2\">\r\n          {images.map((image, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => goToImage(index)}\r\n              className={`flex-shrink-0 w-16 h-16 rounded-lg overflow-hidden border-2 transition-colors ${\r\n                index === currentImageIndex\r\n                  ? 'border-blue-500'\r\n                  : 'border-gray-200 hover:border-gray-300'\r\n              }`}\r\n            >\r\n              <img\r\n                src={image}\r\n                alt={`${productName} thumbnail ${index + 1}`}\r\n                className=\"w-full h-full object-cover\"\r\n              />\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","/**\r\n * Product Details Page\r\n *\r\n * This page displays comprehensive product information including images,\r\n * details, attributes, and variants.\r\n */\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport PageHeader from '../components/layout/PageHeader';\r\nimport Card from '../components/common/Card';\r\nimport StatusBadge from '../components/common/StatusBadge';\r\nimport Button from '../components/common/Button';\r\nimport LoadingSpinner from '../components/common/LoadingSpinner';\r\n\r\nimport ImageGallery from '../components/common/ImageGallery';\r\n\r\nimport useNotification from '../hooks/useNotification';\r\n\r\nimport { useProducts } from '../features/products';\r\nimport { formatCurrency } from '../utils/formatters';\r\nimport { ROUTES } from '../constants/routes';\r\nimport {\r\n  ArrowLeftIcon,\r\n  PencilIcon,\r\n  CubeIcon,\r\n  TagIcon,\r\n  ClipboardDocumentListIcon\r\n} from '@heroicons/react/24/outline';\r\nimport type { Product } from '../features/products';\r\n\r\nconst ProductDetailsPage: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n  const { showError } = useNotification();\r\n  const { getProductById } = useProducts({ initialFetch: false });\r\n\r\n  // Product state\r\n  const [product, setProduct] = useState<Product | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Use refs to store stable references to functions\r\n  const showErrorRef = useRef(showError);\r\n  const navigateRef = useRef(navigate);\r\n\r\n  // Update refs when functions change\r\n  useEffect(() => {\r\n    showErrorRef.current = showError;\r\n    navigateRef.current = navigate;\r\n  }, [showError, navigate]);\r\n\r\n  // Load product data\r\n  useEffect(() => {\r\n    if (!id) {\r\n      showErrorRef.current('No product ID provided');\r\n      navigateRef.current(ROUTES.SUPPLIERS);\r\n      return;\r\n    }\r\n\r\n    const fetchProduct = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const productData = await getProductById(id);\r\n        setProduct(productData);\r\n      } catch (error) {\r\n        console.error('Error fetching product:', error);\r\n        showErrorRef.current('Failed to load product details');\r\n        navigateRef.current(ROUTES.SUPPLIERS);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProduct();\r\n  }, [id, getProductById]);\r\n\r\n\r\n\r\n  const getStatusBadgeStatus = (status: string): string => {\r\n    switch (status) {\r\n      case 'active':\r\n        return 'active';\r\n      case 'inactive':\r\n        return 'pending';\r\n      case 'out_of_stock':\r\n        return 'rejected';\r\n      default:\r\n        return 'pending';\r\n    }\r\n  };\r\n\r\n  const getStockStatus = (stock: number, minimumStock: number, status: string) => {\r\n    if (status === 'out_of_stock' || stock === 0) {\r\n      return { text: 'Out of Stock', color: 'text-red-600' };\r\n    } else if (stock <= minimumStock) {\r\n      return { text: 'Low Stock', color: 'text-yellow-600' };\r\n    } else {\r\n      return { text: 'In Stock', color: 'text-green-600' };\r\n    }\r\n  };\r\n\r\n\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        <LoadingSpinner size=\"lg\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!product) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <CubeIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n        <h3 className=\"mt-2 text-sm font-medium text-gray-900\">Product not found</h3>\r\n        <p className=\"mt-1 text-sm text-gray-500\">\r\n          The product you're looking for doesn't exist or has been removed.\r\n        </p>\r\n        <div className=\"mt-6\">\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => navigateRef.current(ROUTES.SUPPLIERS)}\r\n            icon={<ArrowLeftIcon className=\"w-4 h-4\" />}\r\n          >\r\n            Back to Suppliers\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const stockStatus = getStockStatus(product.stock, product.minimumStock, product.status || 'active');\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <PageHeader\r\n        title={product.name}\r\n        description=\"Complete product information and details\"\r\n        breadcrumbs={[\r\n          { label: 'Suppliers', path: ROUTES.SUPPLIERS },\r\n          { label: product.name }\r\n        ]}\r\n        actions={\r\n          <div className=\"flex space-x-3\">\r\n            <Button\r\n              onClick={() => navigateRef.current(ROUTES.getEditProductRoute(product.id))}\r\n              icon={<PencilIcon className=\"w-4 h-4\" />}\r\n              variant=\"primary\"\r\n            >\r\n              Edit Product\r\n            </Button>\r\n            <Button\r\n              onClick={() => navigateRef.current(-1)}\r\n              icon={<ArrowLeftIcon className=\"w-4 h-4\" />}\r\n              variant=\"outline\"\r\n            >\r\n              Go Back\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n\r\n      {/* Product Details View */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Product Images */}\r\n        <Card>\r\n          <ImageGallery\r\n            images={product.images || (product.image ? [product.image] : [])}\r\n            productName={product.name}\r\n            className=\"h-96\"\r\n          />\r\n        </Card>\r\n\r\n        {/* Product Information */}\r\n        <Card>\r\n          <div className=\"space-y-6\">\r\n            {/* Product Name */}\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">{product.name}</h1>\r\n              <p className=\"text-sm text-gray-500 mt-1\">SKU: {product.sku}</p>\r\n            </div>\r\n\r\n            {/* Product Price */}\r\n            <div>\r\n              <span className=\"text-3xl font-bold text-gray-900\">{formatCurrency(product.price)}</span>\r\n            </div>\r\n\r\n            {/* Product Description */}\r\n            {product.description && (\r\n              <div>\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Description</h3>\r\n                <p className=\"text-gray-700\">{product.description}</p>\r\n              </div>\r\n            )}\r\n\r\n            {/* Stock Information */}\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-gray-500\">Minimum Stock Level</h4>\r\n                <p className=\"text-lg font-semibold text-gray-900\">{product.minimumStock}</p>\r\n              </div>\r\n              <div>\r\n                <h4 className=\"text-sm font-medium text-gray-500\">In Stock Now</h4>\r\n                <div>\r\n                  <p className=\"text-lg font-semibold text-gray-900\">{product.stock}</p>\r\n                  <p className={`text-sm ${stockStatus.color}`}>{stockStatus.text}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Status and Category */}\r\n            <div className=\"flex items-center space-x-3\">\r\n              <StatusBadge status={getStatusBadgeStatus(product.status || 'active')} type=\"supplier\" />\r\n              <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\r\n                {product.category}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Product Attributes Section */}\r\n      {product.attributes && product.attributes.length > 0 && (\r\n        <Card>\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <TagIcon className=\"h-5 w-5 text-gray-400\" />\r\n              <h2 className=\"text-lg font-medium text-gray-900\">Product Attributes</h2>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {product.attributes.map((attribute) => (\r\n                <div key={attribute.id} className=\"bg-gray-50 rounded-lg p-4\">\r\n                  <dt className=\"text-sm font-medium text-gray-500\">{attribute.name}</dt>\r\n                  <dd className=\"mt-1 text-sm text-gray-900\">\r\n                    {attribute.type === 'boolean'\r\n                      ? (attribute.value === 'true' ? 'Yes' : 'No')\r\n                      : `${attribute.value}${attribute.unit ? ` ${attribute.unit}` : ''}`\r\n                    }\r\n                  </dd>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Product Variants Section */}\r\n      {product.variants && product.variants.length > 0 && (\r\n        <Card>\r\n          <div className=\"space-y-4\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <ClipboardDocumentListIcon className=\"h-5 w-5 text-gray-400\" />\r\n              <h2 className=\"text-lg font-medium text-gray-900\">Product Variants</h2>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {product.variants.map((variant) => (\r\n                <div key={variant.id} className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                  <div className=\"flex items-start space-x-3\">\r\n                    {variant.image ? (\r\n                      <img\r\n                        src={variant.image}\r\n                        alt={variant.name}\r\n                        className=\"h-16 w-16 rounded-lg object-cover\"\r\n                      />\r\n                    ) : (\r\n                      <div className=\"h-16 w-16 bg-gray-200 rounded-lg flex items-center justify-center\">\r\n                        <CubeIcon className=\"h-6 w-6 text-gray-400\" />\r\n                      </div>\r\n                    )}\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <h3 className=\"text-sm font-medium text-gray-900\">{variant.name}</h3>\r\n                      {variant.sku && <p className=\"text-xs text-gray-500 font-mono\">{variant.sku}</p>}\r\n                      <p className=\"text-sm font-semibold text-gray-900 mt-1\">\r\n                        {formatCurrency(variant.price)}\r\n                      </p>\r\n                      <p className=\"text-xs text-gray-600\">Stock: {variant.stock}</p>\r\n\r\n                      {/* Variant Attributes */}\r\n                      {variant.attributes && (\r\n                        <div className=\"mt-2 space-y-1\">\r\n                          {Object.entries(variant.attributes).map(([key, value]) => (\r\n                            <div key={key} className=\"flex justify-between text-xs\">\r\n                              <span className=\"text-gray-500 capitalize\">{key}:</span>\r\n                              <span className=\"text-gray-900\">{String(value)}</span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductDetailsPage;\r\n"],"names":["PencilIcon","_ref","svgRef","title","titleId","props","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","formatDate","dateString","options","arguments","length","undefined","date","Date","defaultOptions","year","month","day","Intl","DateTimeFormat","format","error","console","formatCurrency","amount","currency","locale","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","toFixed","formatFileSize","bytes","i","Math","floor","log","parseFloat","pow","status","type","_type","className","_jsx","children","statusKey","toLowerCase","colorClass","icon","CheckCircleIcon","ClockIcon","XCircleIcon","TruckIcon","ExclamationCircleIcon","formattedStatus","charAt","toUpperCase","slice","_jsxs","images","productName","currentImageIndex","setCurrentImageIndex","useState","hasImages","hasMultipleImages","src","alt","_Fragment","onClick","goToPrevious","prevIndex","ChevronLeftIcon","goToNext","ChevronRightIcon","map","image","index","goToImage","PhotoIcon","ProductDetailsPage","useParams","navigate","useNavigate","showError","useNotification","getProductById","useProducts","initialFetch","product","setProduct","isLoading","setIsLoading","showErrorRef","useRef","navigateRef","useEffect","current","ROUTES","SUPPLIERS","async","productData","fetchProduct","LoadingSpinner","size","CubeIcon","Button","variant","ArrowLeftIcon","stockStatus","stock","minimumStock","text","color","getStockStatus","PageHeader","name","description","breadcrumbs","label","path","actions","getEditProductRoute","Card","ImageGallery","sku","price","StatusBadge","getStatusBadgeStatus","category","attributes","TagIcon","attribute","value","unit","variants","ClipboardDocumentListIcon","entries","key","String"],"sourceRoot":""}