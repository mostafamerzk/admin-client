{"version":3,"file":"static/js/895.8079d193.chunk.js","mappings":"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","sources":["components/common/FormField.tsx","utils/validation.ts","../node_modules/@heroicons/react/24/outline/esm/PlusIcon.js","../node_modules/@heroicons/react/24/outline/esm/ArrowUpIcon.js","../node_modules/@heroicons/react/24/outline/esm/ArrowDownIcon.js","components/common/MultipleImageUpload.tsx","components/common/DynamicArrayField.tsx","components/common/ProductEditForm.tsx","pages/EditProductPage.tsx","../node_modules/@heroicons/react/24/outline/esm/CheckIcon.js"],"sourcesContent":["import React from 'react';\r\n\r\ninterface FormFieldProps {\r\n  label: string;\r\n  name: string;\r\n  type?: string;\r\n  value: any;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => void;\r\n  error?: string | undefined;\r\n  required?: boolean;\r\n  placeholder?: string;\r\n  options?: { value: string; label: string }[];\r\n  className?: string;\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n}\r\n\r\nconst FormField: React.FC<FormFieldProps> = ({\r\n  label,\r\n  name,\r\n  type = 'text',\r\n  value,\r\n  onChange,\r\n  error,\r\n  required = false,\r\n  placeholder = '',\r\n  options = [],\r\n  className = '',\r\n  disabled = false,\r\n  loading = false\r\n}) => {\r\n  const inputClasses = `mt-1 block w-full rounded-md shadow-sm sm:text-sm ${\r\n    error ? 'border-red-300 focus:border-red-500 focus:ring-red-500' : 'border-gray-300 focus:border-primary focus:ring-primary'\r\n  }`;\r\n  \r\n  const renderField = () => {\r\n    switch (type) {\r\n      case 'textarea':\r\n        return (\r\n          <textarea\r\n            id={name}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            className={inputClasses}\r\n            placeholder={placeholder}\r\n            disabled={disabled}\r\n          />\r\n        );\r\n      \r\n      case 'select':\r\n        return (\r\n          <select\r\n            id={name}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            className={inputClasses}\r\n            disabled={disabled || loading}\r\n          >\r\n            {loading ? (\r\n              <option value=\"\">Loading...</option>\r\n            ) : (\r\n              options.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))\r\n            )}\r\n          </select>\r\n        );\r\n      \r\n      case 'checkbox':\r\n        return (\r\n          <input\r\n            type=\"checkbox\"\r\n            id={name}\r\n            name={name}\r\n            checked={value}\r\n            onChange={onChange}\r\n            className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\r\n            disabled={disabled}\r\n          />\r\n        );\r\n      \r\n      default:\r\n        return (\r\n          <input\r\n            type={type}\r\n            id={name}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            className={inputClasses}\r\n            placeholder={placeholder}\r\n            disabled={disabled}\r\n          />\r\n        );\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className={`${className}`}>\r\n      <label htmlFor={name} className=\"block text-sm font-medium text-gray-700\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      {renderField()}\r\n      {error && <p className=\"mt-1 text-sm text-red-600\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n","/**\r\n * Validation Utilities\r\n * \r\n * This file provides a comprehensive form validation utility with both function-based\r\n * and rule-based validation approaches.\r\n */\r\n\r\n// Type definitions\r\nexport type ValidationRule = {\r\n  validator: (value: any, formData?: any) => boolean;\r\n  message: string;\r\n};\r\n\r\nexport type ValidationRules = Record<string, ValidationRule | ValidationRule[]>;\r\n\r\n// Individual validation functions\r\nexport const isValidEmail = (email: string): boolean => {\r\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\nexport const isValidPhone = (phone: string): boolean => {\r\n  const phoneRegex = /^\\+?[0-9]{10,15}$/;\r\n  return phoneRegex.test(phone);\r\n};\r\n\r\nexport const isValidUrl = (url: string): boolean => {\r\n  try {\r\n    new URL(url);\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const isRequired = (value: any): boolean => {\r\n  if (value === null || value === undefined) return false;\r\n  if (typeof value === 'string') return value.trim().length > 0;\r\n  if (Array.isArray(value)) return value.length > 0;\r\n  return true;\r\n};\r\n\r\nexport const minLength = (value: string, min: number): boolean => {\r\n  return value.length >= min;\r\n};\r\n\r\nexport const maxLength = (value: string, max: number): boolean => {\r\n  return value.length <= max;\r\n};\r\n\r\nexport const isNumeric = (value: string): boolean => {\r\n  return /^[0-9]+$/.test(value);\r\n};\r\n\r\nexport const isDecimal = (value: string): boolean => {\r\n  return /^[0-9]+(\\.[0-9]+)?$/.test(value);\r\n};\r\n\r\nexport const isAlphanumeric = (value: string): boolean => {\r\n  return /^[a-zA-Z0-9]+$/.test(value);\r\n};\r\n\r\nexport const isValidDate = (dateString: string): boolean => {\r\n  const date = new Date(dateString);\r\n  return !isNaN(date.getTime());\r\n};\r\n\r\nexport const doPasswordsMatch = (password: string, confirmPassword: string): boolean => {\r\n  return password === confirmPassword;\r\n};\r\n\r\nexport const isStrongPassword = (password: string): boolean => {\r\n  // Password must be at least 8 characters long\r\n  if (password.length < 8) return false;\r\n  \r\n  // Password must contain at least one uppercase letter\r\n  if (!/[A-Z]/.test(password)) return false;\r\n  \r\n  // Password must contain at least one lowercase letter\r\n  if (!/[a-z]/.test(password)) return false;\r\n  \r\n  // Password must contain at least one number\r\n  if (!/[0-9]/.test(password)) return false;\r\n  \r\n  // Password must contain at least one special character\r\n  if (!/[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(password)) return false;\r\n  \r\n  return true;\r\n};\r\n\r\n// Field validation\r\nexport const validateField = (\r\n  _name: string,\r\n  value: any,\r\n  rules: ValidationRule | ValidationRule[],\r\n  formData?: any\r\n): string => {\r\n  const ruleArray = Array.isArray(rules) ? rules : [rules];\r\n  \r\n  for (const rule of ruleArray) {\r\n    if (!rule.validator(value, formData)) {\r\n      return rule.message;\r\n    }\r\n  }\r\n  \r\n  return '';\r\n};\r\n\r\n// Form validation\r\nexport const validateForm = <T extends Record<string, any>>(\r\n  values: T,\r\n  validationRules: ValidationRules\r\n): Partial<Record<keyof T, string>> => {\r\n  const errors: Partial<Record<keyof T, string>> = {};\r\n  \r\n  Object.entries(validationRules).forEach(([fieldName, rules]) => {\r\n    const key = fieldName as keyof T;\r\n    const error = validateField(fieldName, values[key], rules, values);\r\n    if (error) {\r\n      errors[key] = error;\r\n    }\r\n  });\r\n  \r\n  return errors;\r\n};\r\n\r\n// Common validation rules\r\nexport const validationRules = {\r\n  required: (message: string = 'This field is required'): ValidationRule => ({\r\n    validator: isRequired,\r\n    message\r\n  }),\r\n  \r\n  email: (message: string = 'Please enter a valid email address'): ValidationRule => ({\r\n    validator: isValidEmail,\r\n    message\r\n  }),\r\n  \r\n  phone: (message: string = 'Please enter a valid phone number'): ValidationRule => ({\r\n    validator: isValidPhone,\r\n    message\r\n  }),\r\n  \r\n  url: (message: string = 'Please enter a valid URL'): ValidationRule => ({\r\n    validator: isValidUrl,\r\n    message\r\n  }),\r\n  \r\n  minLength: (min: number, message?: string): ValidationRule => ({\r\n    validator: (value: string) => minLength(value, min),\r\n    message: message || `Must be at least ${min} characters`\r\n  }),\r\n  \r\n  maxLength: (max: number, message?: string): ValidationRule => ({\r\n    validator: (value: string) => maxLength(value, max),\r\n    message: message || `Must be no more than ${max} characters`\r\n  }),\r\n  \r\n  numeric: (message: string = 'Please enter a numeric value'): ValidationRule => ({\r\n    validator: isNumeric,\r\n    message\r\n  }),\r\n  \r\n  decimal: (message: string = 'Please enter a valid decimal number'): ValidationRule => ({\r\n    validator: isDecimal,\r\n    message\r\n  }),\r\n  \r\n  alphanumeric: (message: string = 'Please use only letters and numbers'): ValidationRule => ({\r\n    validator: isAlphanumeric,\r\n    message\r\n  }),\r\n  \r\n  date: (message: string = 'Please enter a valid date'): ValidationRule => ({\r\n    validator: isValidDate,\r\n    message\r\n  }),\r\n  \r\n  password: (message: string = 'Password must be at least 8 characters and include uppercase, lowercase, number, and special character'): ValidationRule => ({\r\n    validator: isStrongPassword,\r\n    message\r\n  }),\r\n  \r\n  passwordMatch: (message: string = 'Passwords do not match'): ValidationRule => ({\r\n    validator: (value: string, formData?: any) => doPasswordsMatch(value, formData?.confirmPassword),\r\n    message\r\n  }),\r\n  \r\n  confirmPasswordMatch: (message: string = 'Passwords do not match'): ValidationRule => ({\r\n    validator: (value: string, formData?: any) => doPasswordsMatch(value, formData?.password),\r\n    message\r\n  }),\r\n\r\n  // Product-specific validation rules\r\n  sku: (message: string = 'Please enter a valid SKU'): ValidationRule => ({\r\n    validator: (value: string) => /^[A-Z0-9-_]{3,20}$/i.test(value),\r\n    message\r\n  }),\r\n\r\n  price: (message: string = 'Please enter a valid price'): ValidationRule => ({\r\n    validator: (value: number) => value > 0 && value <= 999999,\r\n    message\r\n  }),\r\n\r\n  stock: (message: string = 'Please enter a valid stock quantity'): ValidationRule => ({\r\n    validator: (value: number) => Number.isInteger(value) && value >= 0,\r\n    message\r\n  }),\r\n\r\n  minimumStock: (message: string = 'Please enter a valid minimum stock level'): ValidationRule => ({\r\n    validator: (value: number) => Number.isInteger(value) && value >= 0,\r\n    message\r\n  }),\r\n\r\n  stockConsistency: (message: string = 'Minimum stock cannot be greater than current stock'): ValidationRule => ({\r\n    validator: (minimumStock: number, formData?: any) => {\r\n      if (!formData || !formData.stock) return true;\r\n      return minimumStock <= formData.stock;\r\n    },\r\n    message\r\n  }),\r\n\r\n  arrayNotEmpty: (message: string = 'At least one item is required'): ValidationRule => ({\r\n    validator: (value: any[]) => Array.isArray(value) && value.length > 0,\r\n    message\r\n  }),\r\n\r\n  imageArray: (maxFiles: number = 10, message?: string): ValidationRule => ({\r\n    validator: (value: any[]) => {\r\n      if (!Array.isArray(value)) return false;\r\n      return value.length <= maxFiles;\r\n    },\r\n    message: message || `Maximum ${maxFiles} images allowed`\r\n  })\r\n};\r\n\r\n","import * as React from \"react\";\nfunction PlusIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 4.5v15m7.5-7.5h-15\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PlusIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M4.5 10.5 12 3m0 0 7.5 7.5M12 3v18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowUpIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19.5 13.5 12 21m0 0-7.5-7.5M12 21V3\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowDownIcon);\nexport default ForwardRef;","/**\r\n * Multiple Image Upload Component\r\n * \r\n * A reusable component for uploading and managing multiple images with drag and drop support.\r\n * Extends the existing ImageUpload pattern to handle arrays of images.\r\n */\r\n\r\nimport React, { useState, useRef, useCallback } from 'react';\r\nimport { PhotoIcon, XMarkIcon, PlusIcon, ArrowUpIcon, ArrowDownIcon } from '@heroicons/react/24/outline';\r\nimport { validateFile } from '../../utils/errorHandling';\r\n\r\ninterface MultipleImageUploadProps {\r\n  label: string;\r\n  name: string;\r\n  value: (File | string)[];\r\n  onChange: (files: (File | string)[]) => void;\r\n  error?: string | undefined;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n  maxSize?: number; // in bytes\r\n  allowedTypes?: string[];\r\n  maxFiles?: number;\r\n  className?: string;\r\n}\r\n\r\nconst MultipleImageUpload: React.FC<MultipleImageUploadProps> = ({\r\n  label,\r\n  name,\r\n  value = [],\r\n  onChange,\r\n  error,\r\n  required = false,\r\n  disabled = false,\r\n  maxSize = 5 * 1024 * 1024, // 5MB default\r\n  allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'],\r\n  maxFiles = 10,\r\n  className = ''\r\n}) => {\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleFileSelect = useCallback((files: FileList) => {\r\n    const validFiles: File[] = [];\r\n    const currentCount = value.length;\r\n\r\n    for (let i = 0; i < files.length && (currentCount + validFiles.length) < maxFiles; i++) {\r\n      const file = files[i];\r\n      if (!file) continue;\r\n\r\n      const validation = validateFile(file, {\r\n        maxSize,\r\n        allowedTypes\r\n      });\r\n\r\n      if (validation.valid) {\r\n        validFiles.push(file);\r\n      } else {\r\n        console.error('File validation failed:', validation.error);\r\n      }\r\n    }\r\n\r\n    if (validFiles.length > 0) {\r\n      onChange([...value, ...validFiles]);\r\n    }\r\n  }, [value, onChange, maxSize, allowedTypes, maxFiles]);\r\n\r\n  const handleFileInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files;\r\n    if (files) {\r\n      handleFileSelect(files);\r\n    }\r\n    // Reset input value to allow selecting the same file again\r\n    e.target.value = '';\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    if (!disabled) {\r\n      setIsDragOver(true);\r\n    }\r\n  };\r\n\r\n  const handleDragLeave = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragOver(false);\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    setIsDragOver(false);\r\n    \r\n    if (disabled) return;\r\n\r\n    const files = e.dataTransfer.files;\r\n    if (files) {\r\n      handleFileSelect(files);\r\n    }\r\n  };\r\n\r\n  const handleRemove = (index: number) => {\r\n    const newFiles = value.filter((_, i) => i !== index);\r\n    onChange(newFiles);\r\n  };\r\n\r\n  const handleReorder = (fromIndex: number, toIndex: number) => {\r\n    if (toIndex < 0 || toIndex >= value.length) return;\r\n\r\n    const newFiles = [...value];\r\n    const [movedFile] = newFiles.splice(fromIndex, 1);\r\n    if (movedFile) {\r\n      newFiles.splice(toIndex, 0, movedFile);\r\n      onChange(newFiles);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!disabled && fileInputRef.current && value.length < maxFiles) {\r\n      fileInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  const getPreviewUrl = (file: File | string): string => {\r\n    if (typeof file === 'string') {\r\n      return file;\r\n    }\r\n    return URL.createObjectURL(file);\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n        <span className=\"text-xs text-gray-500 ml-2\">\r\n          ({value.length}/{maxFiles} images)\r\n        </span>\r\n      </label>\r\n\r\n      {/* Image Grid */}\r\n      {value.length > 0 && (\r\n        <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 mb-4\">\r\n          {value.map((file, index) => (\r\n            <div key={index} className=\"relative group\">\r\n              <img\r\n                src={getPreviewUrl(file)}\r\n                alt={`Preview ${index + 1}`}\r\n                className=\"w-full h-24 object-cover rounded-lg border border-gray-200\"\r\n              />\r\n              \r\n              {/* Controls */}\r\n              <div className=\"absolute inset-0 bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 transition-opacity rounded-lg flex items-center justify-center space-x-1\">\r\n                {/* Move Up */}\r\n                {index > 0 && (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => handleReorder(index, index - 1)}\r\n                    className=\"p-1 bg-white rounded-full hover:bg-gray-100 transition-colors\"\r\n                    title=\"Move up\"\r\n                  >\r\n                    <ArrowUpIcon className=\"h-3 w-3 text-gray-600\" />\r\n                  </button>\r\n                )}\r\n                \r\n                {/* Move Down */}\r\n                {index < value.length - 1 && (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => handleReorder(index, index + 1)}\r\n                    className=\"p-1 bg-white rounded-full hover:bg-gray-100 transition-colors\"\r\n                    title=\"Move down\"\r\n                  >\r\n                    <ArrowDownIcon className=\"h-3 w-3 text-gray-600\" />\r\n                  </button>\r\n                )}\r\n                \r\n                {/* Remove */}\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleRemove(index)}\r\n                  className=\"p-1 bg-red-500 text-white rounded-full hover:bg-red-600 transition-colors\"\r\n                  title=\"Remove image\"\r\n                >\r\n                  <XMarkIcon className=\"h-3 w-3\" />\r\n                </button>\r\n              </div>\r\n              \r\n              {/* Primary indicator */}\r\n              {index === 0 && (\r\n                <div className=\"absolute top-1 left-1 bg-blue-500 text-white text-xs px-1 py-0.5 rounded\">\r\n                  Primary\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Upload Area */}\r\n      {value.length < maxFiles && (\r\n        <div\r\n          className={`\r\n            relative border-2 border-dashed rounded-lg p-6 text-center cursor-pointer transition-colors\r\n            ${isDragOver ? 'border-primary bg-primary bg-opacity-5' : 'border-gray-300'}\r\n            ${error ? 'border-red-300' : ''}\r\n            ${disabled ? 'opacity-50 cursor-not-allowed' : 'hover:border-primary hover:bg-gray-50'}\r\n          `}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onDrop={handleDrop}\r\n          onClick={handleClick}\r\n        >\r\n          <input\r\n            ref={fileInputRef}\r\n            type=\"file\"\r\n            name={name}\r\n            accept={allowedTypes.join(',')}\r\n            onChange={handleFileInputChange}\r\n            className=\"hidden\"\r\n            disabled={disabled}\r\n            multiple\r\n          />\r\n\r\n          <div>\r\n            <div className=\"flex justify-center\">\r\n              {value.length === 0 ? (\r\n                <PhotoIcon className=\"h-12 w-12 text-gray-400\" />\r\n              ) : (\r\n                <PlusIcon className=\"h-8 w-8 text-gray-400\" />\r\n              )}\r\n            </div>\r\n            <div className=\"mt-4\">\r\n              <p className=\"text-sm text-gray-600\">\r\n                {isDragOver \r\n                  ? 'Drop images here' \r\n                  : value.length === 0 \r\n                    ? 'Click to upload or drag and drop images'\r\n                    : 'Add more images'\r\n                }\r\n              </p>\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                PNG, JPG, GIF up to {Math.round(maxSize / 1024 / 1024)}MB each\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {error && <p className=\"mt-1 text-sm text-red-600\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultipleImageUpload;\r\n","/**\r\n * Dynamic Array Field Component\r\n * \r\n * A reusable component for managing arrays of objects with add/remove/edit functionality.\r\n * Used for product attributes, variants, and other dynamic form sections.\r\n */\r\n\r\n\r\nimport { PlusIcon, XMarkIcon } from '@heroicons/react/24/outline';\r\nimport Button from './Button';\r\nimport FormField from './FormField';\r\n\r\ninterface FieldConfig {\r\n  name: string;\r\n  label: string;\r\n  type: 'text' | 'number' | 'select' | 'textarea';\r\n  required?: boolean;\r\n  options?: { value: string; label: string }[];\r\n  placeholder?: string;\r\n}\r\n\r\ninterface DynamicArrayFieldProps<T> {\r\n  label: string;\r\n  value: T[];\r\n  onChange: (value: T[]) => void;\r\n  fieldConfigs: FieldConfig[];\r\n  createEmpty: () => T;\r\n  error?: string | undefined;\r\n  disabled?: boolean;\r\n  maxItems?: number;\r\n  className?: string;\r\n  itemLabel?: (item: T, index: number) => string;\r\n}\r\n\r\nfunction DynamicArrayField<T extends Record<string, any>>({\r\n  label,\r\n  value,\r\n  onChange,\r\n  fieldConfigs,\r\n  createEmpty,\r\n  error,\r\n  disabled = false,\r\n  maxItems = 20,\r\n  className = '',\r\n  itemLabel\r\n}: DynamicArrayFieldProps<T>) {\r\n  const handleAdd = () => {\r\n    if (value.length < maxItems) {\r\n      onChange([...value, createEmpty()]);\r\n    }\r\n  };\r\n\r\n  const handleRemove = (index: number) => {\r\n    const newValue = value.filter((_, i) => i !== index);\r\n    onChange(newValue);\r\n  };\r\n\r\n  const handleItemChange = (index: number, field: string, fieldValue: any) => {\r\n    const newValue = value.map((item, i) => \r\n      i === index ? { ...item, [field]: fieldValue } : item\r\n    );\r\n    onChange(newValue);\r\n  };\r\n\r\n  const getDefaultItemLabel = (item: T, index: number): string => {\r\n    if (itemLabel) {\r\n      return itemLabel(item, index);\r\n    }\r\n    \r\n    // Try to find a name or title field\r\n    const nameField = item.name || item.title || item.label;\r\n    if (nameField) {\r\n      return nameField;\r\n    }\r\n    \r\n    return `Item ${index + 1}`;\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <label className=\"block text-sm font-medium text-gray-700\">\r\n          {label}\r\n          <span className=\"text-xs text-gray-500 ml-2\">\r\n            ({value.length}/{maxItems} items)\r\n          </span>\r\n        </label>\r\n        \r\n        <Button\r\n          type=\"button\"\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          onClick={handleAdd}\r\n          disabled={disabled || value.length >= maxItems}\r\n          icon={<PlusIcon className=\"w-4 h-4\" />}\r\n        >\r\n          Add {label.slice(0, -1)} {/* Remove 's' from plural label */}\r\n        </Button>\r\n      </div>\r\n\r\n      {error && <p className=\"mb-4 text-sm text-red-600\">{error}</p>}\r\n\r\n      <div className=\"space-y-4\">\r\n        {value.map((item, index) => (\r\n          <div key={index} className=\"border border-gray-200 rounded-lg p-4 bg-gray-50\">\r\n            <div className=\"flex items-center justify-between mb-3\">\r\n              <h4 className=\"text-sm font-medium text-gray-900\">\r\n                {getDefaultItemLabel(item, index)}\r\n              </h4>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => handleRemove(index)}\r\n                disabled={disabled}\r\n                icon={<XMarkIcon className=\"w-4 h-4\" />}\r\n                className=\"text-red-600 hover:text-red-700 border-red-300 hover:border-red-400\"\r\n              >\r\n                Remove\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              {fieldConfigs.map((config) => {\r\n                const fieldProps: any = {\r\n                  key: config.name,\r\n                  label: config.label,\r\n                  name: `${config.name}_${index}`,\r\n                  type: config.type,\r\n                  value: item[config.name] || '',\r\n                  onChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n                    const fieldValue = config.type === 'number'\r\n                      ? parseFloat(e.target.value) || 0\r\n                      : e.target.value;\r\n                    handleItemChange(index, config.name, fieldValue);\r\n                  },\r\n                  required: config.required || false,\r\n                  placeholder: config.placeholder || '',\r\n                  disabled: disabled,\r\n                  className: config.type === 'textarea' ? 'md:col-span-2' : ''\r\n                };\r\n\r\n                // Only add options if they exist\r\n                if (config.options) {\r\n                  fieldProps.options = config.options;\r\n                }\r\n\r\n                return <FormField {...fieldProps} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        {value.length === 0 && (\r\n          <div className=\"text-center py-8 text-gray-500\">\r\n            <p className=\"text-sm\">No {label.toLowerCase()} added yet.</p>\r\n            <p className=\"text-xs mt-1\">Click \"Add {label.slice(0, -1)}\" to get started.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DynamicArrayField;\r\n","/**\r\n * Product Edit Form Component\r\n * \r\n * A comprehensive form for editing product details including images, attributes, and variants.\r\n */\r\n\r\nimport React from 'react';\r\nimport FormField from './FormField';\r\nimport MultipleImageUpload from './MultipleImageUpload';\r\nimport DynamicArrayField from './DynamicArrayField';\r\nimport Card from './Card';\r\nimport { TagIcon, ClipboardDocumentListIcon, PhotoIcon } from '@heroicons/react/24/outline';\r\nimport type { ProductAttribute, ProductVariant, ProductFormDataWithImages } from '../../features/products/types';\r\n\r\ninterface ProductEditFormProps {\r\n  formData: Partial<ProductFormDataWithImages>;\r\n  errors: Record<string, string>;\r\n  onInputChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => void;\r\n  onImagesChange: (images: (File | string)[]) => void;\r\n  onAttributesChange: (attributes: ProductAttribute[]) => void;\r\n  onVariantsChange: (variants: ProductVariant[]) => void;\r\n  createEmptyAttribute: () => ProductAttribute;\r\n  createEmptyVariant: () => ProductVariant;\r\n  attributeFieldConfigs: any[];\r\n  variantFieldConfigs: any[];\r\n  disabled?: boolean;\r\n}\r\n\r\nconst ProductEditForm: React.FC<ProductEditFormProps> = ({\r\n  formData,\r\n  errors,\r\n  onInputChange,\r\n  onImagesChange,\r\n  onAttributesChange,\r\n  onVariantsChange,\r\n  createEmptyAttribute,\r\n  createEmptyVariant,\r\n  attributeFieldConfigs,\r\n  variantFieldConfigs,\r\n  disabled = false\r\n}) => {\r\n  const categoryOptions = [\r\n    { value: 'Electronics', label: 'Electronics' },\r\n    { value: 'Accessories', label: 'Accessories' },\r\n    { value: 'Clothing', label: 'Clothing' },\r\n    { value: 'Home & Garden', label: 'Home & Garden' },\r\n    { value: 'Sports', label: 'Sports' },\r\n    { value: 'Books', label: 'Books' },\r\n    { value: 'Other', label: 'Other' }\r\n  ];\r\n\r\n  const statusOptions = [\r\n    { value: 'active', label: 'Active' },\r\n    { value: 'inactive', label: 'Inactive' },\r\n    { value: 'out_of_stock', label: 'Out of Stock' }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Basic Product Information */}\r\n      <Card>\r\n        <div className=\"space-y-6\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Basic Information</h3>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <FormField\r\n              label=\"Product Name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              value={formData.name || ''}\r\n              onChange={onInputChange}\r\n              error={errors.name}\r\n              required\r\n              disabled={disabled}\r\n              placeholder=\"Enter product name\"\r\n            />\r\n\r\n            <FormField\r\n              label=\"SKU\"\r\n              name=\"sku\"\r\n              type=\"text\"\r\n              value={formData.sku || ''}\r\n              onChange={onInputChange}\r\n              error={errors.sku}\r\n              required\r\n              disabled={disabled}\r\n              placeholder=\"e.g., WBH-PRO-001\"\r\n            />\r\n\r\n            <FormField\r\n              label=\"Category\"\r\n              name=\"category\"\r\n              type=\"select\"\r\n              value={formData.category || ''}\r\n              onChange={onInputChange}\r\n              error={errors.category}\r\n              required\r\n              disabled={disabled}\r\n              options={categoryOptions}\r\n            />\r\n\r\n            <FormField\r\n              label=\"Status\"\r\n              name=\"status\"\r\n              type=\"select\"\r\n              value={formData.status || 'active'}\r\n              onChange={onInputChange}\r\n              error={errors.status}\r\n              required\r\n              disabled={disabled}\r\n              options={statusOptions}\r\n            />\r\n\r\n            <FormField\r\n              label=\"Price\"\r\n              name=\"price\"\r\n              type=\"number\"\r\n              value={formData.price || 0}\r\n              onChange={onInputChange}\r\n              error={errors.price}\r\n              required\r\n              disabled={disabled}\r\n              placeholder=\"0.00\"\r\n            />\r\n\r\n            <FormField\r\n              label=\"Stock Quantity\"\r\n              name=\"stock\"\r\n              type=\"number\"\r\n              value={formData.stock || 0}\r\n              onChange={onInputChange}\r\n              error={errors.stock}\r\n              required\r\n              disabled={disabled}\r\n              placeholder=\"0\"\r\n            />\r\n\r\n            <FormField\r\n              label=\"Minimum Stock Level\"\r\n              name=\"minimumStock\"\r\n              type=\"number\"\r\n              value={formData.minimumStock || 0}\r\n              onChange={onInputChange}\r\n              error={errors.minimumStock}\r\n              required\r\n              disabled={disabled}\r\n              placeholder=\"0\"\r\n            />\r\n          </div>\r\n\r\n          <FormField\r\n            label=\"Description\"\r\n            name=\"description\"\r\n            type=\"textarea\"\r\n            value={formData.description || ''}\r\n            onChange={onInputChange}\r\n            error={errors.description}\r\n            disabled={disabled}\r\n            placeholder=\"Enter product description...\"\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Product Images */}\r\n      <Card>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <PhotoIcon className=\"h-5 w-5 text-gray-400\" />\r\n            <h3 className=\"text-lg font-medium text-gray-900\">Product Images</h3>\r\n          </div>\r\n          \r\n          <MultipleImageUpload\r\n            label=\"Product Images\"\r\n            name=\"images\"\r\n            value={formData.images || []}\r\n            onChange={onImagesChange}\r\n            error={errors.images}\r\n            disabled={disabled}\r\n            maxFiles={10}\r\n            maxSize={5 * 1024 * 1024} // 5MB\r\n            allowedTypes={['image/jpeg', 'image/png', 'image/gif', 'image/webp']}\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Product Attributes */}\r\n      <Card>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <TagIcon className=\"h-5 w-5 text-gray-400\" />\r\n            <h3 className=\"text-lg font-medium text-gray-900\">Product Attributes</h3>\r\n          </div>\r\n          \r\n          <DynamicArrayField\r\n            label=\"Attributes\"\r\n            value={formData.attributes || []}\r\n            onChange={onAttributesChange}\r\n            fieldConfigs={attributeFieldConfigs}\r\n            createEmpty={createEmptyAttribute}\r\n            error={errors.attributes || undefined}\r\n            disabled={disabled}\r\n            maxItems={20}\r\n            itemLabel={(item: ProductAttribute) => item.name || 'New Attribute'}\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Product Variants */}\r\n      <Card>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <ClipboardDocumentListIcon className=\"h-5 w-5 text-gray-400\" />\r\n            <h3 className=\"text-lg font-medium text-gray-900\">Product Variants</h3>\r\n          </div>\r\n          \r\n          <DynamicArrayField\r\n            label=\"Variants\"\r\n            value={formData.variants || []}\r\n            onChange={onVariantsChange}\r\n            fieldConfigs={variantFieldConfigs}\r\n            createEmpty={createEmptyVariant}\r\n            error={errors.variants || undefined}\r\n            disabled={disabled}\r\n            maxItems={50}\r\n            itemLabel={(item: ProductVariant) => item.name || 'New Variant'}\r\n          />\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductEditForm;\r\n","/**\r\n * Edit Product Page\r\n *\r\n * This page provides a comprehensive form for editing product details including images,\r\n * attributes, and variants.\r\n */\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport PageHeader from '../components/layout/PageHeader';\r\n\r\nimport Button from '../components/common/Button';\r\nimport LoadingSpinner from '../components/common/LoadingSpinner';\r\nimport ProductEditForm from '../components/common/ProductEditForm';\r\nimport useNotification from '../hooks/useNotification';\r\n\r\nimport { useProducts, updateProductFromFrontend } from '../features/products';\r\nimport { validateForm, validationRules } from '../utils/validation';\r\nimport { ROUTES } from '../constants/routes';\r\nimport {\r\n  ArrowLeftIcon,\r\n  CheckIcon,\r\n  XMarkIcon,\r\n  CubeIcon\r\n} from '@heroicons/react/24/outline';\r\nimport type { \r\n  Product, \r\n  ProductFormDataWithImages, \r\n  ProductAttribute, \r\n  ProductVariant \r\n} from '../features/products';\r\n\r\nconst EditProductPage: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n  const { showError, showSuccess } = useNotification();\r\n  const { getProductById, uploadProductImages, deleteProductImage } = useProducts({ initialFetch: false });\r\n\r\n  // Product state\r\n  const [product, setProduct] = useState<Product | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Form state\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [formData, setFormData] = useState<Partial<ProductFormDataWithImages>>({});\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [removedImageUrls, setRemovedImageUrls] = useState<string[]>([]);\r\n\r\n  // Use refs to store stable references to functions\r\n  const showErrorRef = useRef(showError);\r\n  const showSuccessRef = useRef(showSuccess);\r\n  const navigateRef = useRef(navigate);\r\n\r\n  // Update refs when functions change\r\n  useEffect(() => {\r\n    showErrorRef.current = showError;\r\n    showSuccessRef.current = showSuccess;\r\n    navigateRef.current = navigate;\r\n  }, [showError, showSuccess, navigate]);\r\n\r\n  // Initialize form data when product loads\r\n  useEffect(() => {\r\n    if (product) {\r\n      setFormData({\r\n        name: product.name,\r\n        sku: product.sku,\r\n        category: product.category,\r\n        price: product.price,\r\n        stock: product.stock,\r\n        minimumStock: product.minimumStock,\r\n        status: product.status || 'active',\r\n        description: product.description || undefined,\r\n        supplierId: product.supplierId,\r\n        images: product.images || [],\r\n        attributes: product.attributes || [],\r\n        variants: product.variants || []\r\n      });\r\n    }\r\n  }, [product]);\r\n\r\n  // Load product data\r\n  useEffect(() => {\r\n    if (!id) {\r\n      showErrorRef.current('No product ID provided');\r\n      navigateRef.current(ROUTES.SUPPLIERS);\r\n      return;\r\n    }\r\n\r\n    const fetchProduct = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const productData = await getProductById(id);\r\n        setProduct(productData);\r\n      } catch (error) {\r\n        console.error('Error fetching product:', error);\r\n        showErrorRef.current('Failed to load product details');\r\n        navigateRef.current(ROUTES.SUPPLIERS);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProduct();\r\n  }, [id, getProductById]);\r\n\r\n  // Form handling functions\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value, type } = e.target;\r\n    const processedValue = type === 'number' ? parseFloat(value) || 0 : value;\r\n\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: processedValue\r\n    }));\r\n\r\n    // Clear field error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleImagesChange = (images: (File | string)[]) => {\r\n    // Track which existing images were removed\r\n    if (product?.images) {\r\n      const currentImageUrls = images.filter((img): img is string => typeof img === 'string');\r\n      const removedUrls = product.images.filter(url => !currentImageUrls.includes(url));\r\n      setRemovedImageUrls(prev => Array.from(new Set([...prev, ...removedUrls])));\r\n    }\r\n\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      images\r\n    }));\r\n  };\r\n\r\n\r\n\r\n  const handleAttributesChange = (attributes: ProductAttribute[]) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      attributes\r\n    }));\r\n  };\r\n\r\n  const handleVariantsChange = (variants: ProductVariant[]) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      variants\r\n    }));\r\n  };\r\n\r\n  const validateFormData = () => {\r\n    const validationErrors = validateForm(formData, {\r\n      name: [validationRules.required('Product name is required')],\r\n      // SKU is auto-generated by backend, so no validation needed\r\n      category: [validationRules.required('Category is required')],\r\n      price: [validationRules.required('Price is required'), validationRules.price()],\r\n      stock: [validationRules.required('Stock is required'), validationRules.stock()],\r\n      minimumStock: [\r\n        validationRules.required('Minimum stock is required'),\r\n        validationRules.minimumStock(),\r\n        validationRules.stockConsistency()\r\n      ],\r\n      supplierId: [validationRules.required('Supplier is required')]\r\n    });\r\n\r\n    setErrors(validationErrors);\r\n    return Object.keys(validationErrors).length === 0;\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    navigateRef.current(ROUTES.getProductDetailsRoute(id!));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    // Priority 1: Validate form data first - if invalid, stop everything\r\n    if (!validateFormData() || !product || !id) {\r\n      return;\r\n    }\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      // Separate files from URLs in images\r\n      const imageFiles = formData.images?.filter((img): img is File => img instanceof File) || [];\r\n      const imageUrls = formData.images?.filter((img): img is string => typeof img === 'string') || [];\r\n\r\n      // Delete removed images first (suppress individual success notifications)\r\n      if (removedImageUrls.length > 0) {\r\n        const deletionPromises = removedImageUrls.map(async (url) => {\r\n          try {\r\n            await deleteProductImage(id, url, false); // Suppress notifications\r\n            console.log(`Successfully deleted image: ${url}`);\r\n          } catch (error) {\r\n            console.warn(`Failed to delete image ${url}:`, error);\r\n            // Continue with other deletions even if one fails\r\n          }\r\n        });\r\n\r\n        // Wait for all deletions to complete (or fail)\r\n        await Promise.allSettled(deletionPromises);\r\n      }\r\n\r\n      // Upload new images if any (suppress individual success notifications)\r\n      let uploadedImageUrls: string[] = [];\r\n      if (imageFiles.length > 0) {\r\n        try {\r\n          const uploadResult = await uploadProductImages(id, imageFiles, false); // Suppress notifications\r\n          uploadedImageUrls = uploadResult.imageUrls;\r\n        } catch (imageError) {\r\n          // If image upload fails, show specific error and stop the process\r\n          console.error('Error uploading images:', imageError);\r\n          showErrorRef.current('Failed to upload product images. Please try again.');\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Combine existing URLs with newly uploaded URLs\r\n      const allImageUrls = [...imageUrls, ...uploadedImageUrls];\r\n\r\n      // Prepare update data (including final image set)\r\n      const updateData = {\r\n        name: formData.name!,\r\n        sku: formData.sku || undefined,\r\n        category: formData.category!,\r\n        categoryId: product.categoryId, // Use existing category ID\r\n        price: formData.price!,\r\n        stock: formData.stock!,\r\n        minimumStock: formData.minimumStock!,\r\n        status: formData.status || 'active',\r\n        description: formData.description,\r\n        supplierId: formData.supplierId!,\r\n        attributes: formData.attributes,\r\n        variants: formData.variants,\r\n        // Include the final image set (existing + newly uploaded)\r\n        images: allImageUrls\r\n      };\r\n\r\n      // Update product using frontend API method\r\n      const updatedProduct = await updateProductFromFrontend(id, updateData);\r\n\r\n      // Update local product state\r\n      setProduct({ ...updatedProduct, images: allImageUrls });\r\n\r\n      // Clear removed images state\r\n      setRemovedImageUrls([]);\r\n\r\n      // Show single consolidated success message\r\n      showSuccessRef.current('Changes made successfully');\r\n\r\n      // Navigate back to product details\r\n      navigateRef.current(ROUTES.getProductDetailsRoute(id));\r\n\r\n    } catch (error) {\r\n      console.error('Error updating product:', error);\r\n      // Show consolidated error message for data update failures\r\n      showErrorRef.current('Failed to save changes. Please check your data and try again.');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  // Helper functions for dynamic arrays\r\n  const createEmptyAttribute = (): ProductAttribute => ({\r\n    id: `attr_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\r\n    name: '',\r\n    value: '',\r\n    type: 'text',\r\n    unit: undefined\r\n  });\r\n\r\n  const createEmptyVariant = (): ProductVariant => ({\r\n    id: `var_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,\r\n    name: '',\r\n    sku: '',\r\n    price: 0,\r\n    stock: 0,\r\n    attributes: {},\r\n    image: undefined\r\n  });\r\n\r\n  // Attribute field configurations\r\n  const attributeFieldConfigs = [\r\n    { name: 'name', label: 'Attribute Name', type: 'text' as const, required: true, placeholder: 'e.g., Brand, Weight, Color' },\r\n    { name: 'value', label: 'Value', type: 'text' as const, required: true, placeholder: 'e.g., AudioTech, 250g, Black' },\r\n    { name: 'type', label: 'Type', type: 'select' as const, required: true, options: [\r\n      { value: 'text', label: 'Text' },\r\n      { value: 'number', label: 'Number' },\r\n      { value: 'boolean', label: 'Boolean' },\r\n      { value: 'select', label: 'Select' }\r\n    ]},\r\n    { name: 'unit', label: 'Unit (Optional)', type: 'text' as const, placeholder: 'e.g., grams, hours, cm' }\r\n  ];\r\n\r\n  // Variant field configurations\r\n  const variantFieldConfigs = [\r\n    { name: 'name', label: 'Variant Name', type: 'text' as const, required: true, placeholder: 'e.g., Black, Large, Premium' },\r\n    { name: 'sku', label: 'SKU', type: 'text' as const, required: true, placeholder: 'e.g., WBH-PRO-001-BLK' },\r\n    { name: 'price', label: 'Price', type: 'number' as const, required: true, placeholder: '0.00' },\r\n    { name: 'stock', label: 'Stock', type: 'number' as const, required: true, placeholder: '0' }\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        <LoadingSpinner size=\"lg\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!product) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <CubeIcon className=\"mx-auto h-12 w-12 text-gray-400\" />\r\n        <h3 className=\"mt-2 text-sm font-medium text-gray-900\">Product not found</h3>\r\n        <p className=\"mt-1 text-sm text-gray-500\">\r\n          The product you're trying to edit doesn't exist or has been removed.\r\n        </p>\r\n        <div className=\"mt-6\">\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => navigateRef.current(ROUTES.SUPPLIERS)}\r\n            icon={<ArrowLeftIcon className=\"w-4 h-4\" />}\r\n          >\r\n            Back to Suppliers\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <PageHeader\r\n        title={`Edit ${product.name}`}\r\n        description=\"Update product information, images, attributes, and variants\"\r\n        breadcrumbs={[\r\n          { label: 'Suppliers', path: ROUTES.SUPPLIERS },\r\n          { label: product.name, path: ROUTES.getProductDetailsRoute(product.id) },\r\n          { label: 'Edit' }\r\n        ]}\r\n        actions={\r\n          <div className=\"flex space-x-3\">\r\n            <Button\r\n              onClick={handleSave}\r\n              icon={<CheckIcon className=\"w-4 h-4\" />}\r\n              variant=\"primary\"\r\n              loading={isSaving}\r\n              disabled={isSaving}\r\n            >\r\n              Save Changes\r\n            </Button>\r\n            <Button\r\n              onClick={handleCancel}\r\n              icon={<XMarkIcon className=\"w-4 h-4\" />}\r\n              variant=\"outline\"\r\n              disabled={isSaving}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n\r\n      <ProductEditForm\r\n        formData={formData}\r\n        errors={errors}\r\n        onInputChange={handleInputChange}\r\n        onImagesChange={handleImagesChange}\r\n        onAttributesChange={handleAttributesChange}\r\n        onVariantsChange={handleVariantsChange}\r\n        createEmptyAttribute={createEmptyAttribute}\r\n        createEmptyVariant={createEmptyVariant}\r\n        attributeFieldConfigs={attributeFieldConfigs}\r\n        variantFieldConfigs={variantFieldConfigs}\r\n        disabled={isSaving}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProductPage;\r\n","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;"],"names":["_ref","label","name","type","value","onChange","error","required","placeholder","options","className","disabled","loading","inputClasses","_jsxs","children","htmlFor","_jsx","renderField","id","map","option","checked","isValidEmail","email","test","isValidPhone","phone","isValidUrl","url","URL","isRequired","undefined","trim","length","Array","isArray","isNumeric","isDecimal","isAlphanumeric","isValidDate","dateString","date","Date","isNaN","getTime","doPasswordsMatch","password","confirmPassword","isStrongPassword","validateForm","values","validationRules","errors","Object","entries","forEach","fieldName","rules","key","validateField","_name","formData","ruleArray","rule","validator","message","arguments","minLength","min","maxLength","max","numeric","decimal","alphanumeric","passwordMatch","confirmPasswordMatch","sku","price","stock","Number","isInteger","minimumStock","stockConsistency","arrayNotEmpty","imageArray","maxFiles","PlusIcon","svgRef","title","titleId","props","React","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","ArrowUpIcon","ArrowDownIcon","maxSize","allowedTypes","isDragOver","setIsDragOver","useState","fileInputRef","useRef","handleFileSelect","useCallback","files","validFiles","currentCount","i","file","validation","validateFile","valid","push","console","handleReorder","fromIndex","toIndex","newFiles","movedFile","splice","getPreviewUrl","createObjectURL","index","src","alt","onClick","filter","_","handleRemove","XMarkIcon","onDragOver","e","preventDefault","onDragLeave","onDrop","dataTransfer","handleClick","current","click","accept","join","target","multiple","PhotoIcon","Math","round","fieldConfigs","createEmpty","maxItems","itemLabel","getDefaultItemLabel","item","nameField","Button","variant","size","handleAdd","icon","slice","newValue","config","fieldProps","fieldValue","parseFloat","handleItemChange","field","FormField","toLowerCase","onInputChange","onImagesChange","onAttributesChange","onVariantsChange","createEmptyAttribute","createEmptyVariant","attributeFieldConfigs","variantFieldConfigs","Card","category","status","description","MultipleImageUpload","images","TagIcon","DynamicArrayField","attributes","ClipboardDocumentListIcon","variants","EditProductPage","useParams","navigate","useNavigate","showError","showSuccess","useNotification","getProductById","uploadProductImages","deleteProductImage","useProducts","initialFetch","product","setProduct","isLoading","setIsLoading","isSaving","setIsSaving","setFormData","setErrors","removedImageUrls","setRemovedImageUrls","showErrorRef","showSuccessRef","navigateRef","useEffect","supplierId","ROUTES","SUPPLIERS","async","productData","fetchProduct","LoadingSpinner","PageHeader","breadcrumbs","path","getProductDetailsRoute","actions","validateFormData","validationErrors","keys","_formData$images","_formData$images2","imageFiles","img","File","imageUrls","deletionPromises","log","warn","Promise","allSettled","uploadedImageUrls","imageError","allImageUrls","updateData","categoryId","updatedProduct","updateProductFromFrontend","CheckIcon","handleCancel","ProductEditForm","processedValue","prev","currentImageUrls","removedUrls","includes","from","Set","now","random","toString","substring","unit","image","CubeIcon","ArrowLeftIcon"],"sourceRoot":""}