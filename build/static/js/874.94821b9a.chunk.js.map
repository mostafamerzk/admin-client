{"version":3,"file":"static/js/874.94821b9a.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/ShieldCheckIcon.js","features/profile/components/ProfileTabs.tsx","../node_modules/@heroicons/react/24/outline/esm/CameraIcon.js","features/profile/components/ProfileInfo.tsx","components/common/ToggleSwitch.tsx","features/profile/components/SecuritySettings.tsx","features/profile/components/NotificationSettings.tsx","../node_modules/@heroicons/react/24/outline/esm/KeyIcon.js","features/profile/components/ActivityLog.tsx","features/profile/api/profileApi.ts","features/profile/hooks/useProfile.ts","pages/ProfilePage.tsx","components/common/Tabs.tsx","components/layout/PageHeader.tsx","components/common/Card.tsx","../node_modules/@heroicons/react/24/outline/esm/ChevronRightIcon.js","../node_modules/@heroicons/react/24/outline/esm/ClockIcon.js","components/common/Button.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction ShieldCheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75 11.25 15 15 9.75m-3-7.036A11.959 11.959 0 0 1 3.598 6 11.99 11.99 0 0 0 3 9.749c0 5.592 3.824 10.29 9 11.623 5.176-1.332 9-6.03 9-11.622 0-1.31-.21-2.571-.598-3.751h-.152c-3.196 0-6.1-1.248-8.25-3.285Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ShieldCheckIcon);\nexport default ForwardRef;","/**\n * Profile Tabs Component\n * \n * This component displays the tabs for the profile page.\n */\n\nimport React from 'react';\nimport type { ProfileTab } from '../types/index';\nimport Tabs, { type Tab } from '../../../components/common/Tabs';\nimport {\n  UserCircleIcon,\n  ShieldCheckIcon,\n  BellIcon,\n  ClockIcon\n} from '@heroicons/react/24/outline';\n\ninterface ProfileTabsProps {\n  activeTab: ProfileTab;\n  onTabChange: (tab: ProfileTab) => void;\n}\n\nconst ProfileTabs: React.FC<ProfileTabsProps> = ({\n  activeTab,\n  onTabChange\n}) => {\n  const tabsData = [\n    {\n      id: 'profile',\n      label: 'Profile',\n      icon: <UserCircleIcon className=\"w-5 h-5 mr-2\" />\n    },\n    {\n      id: 'security',\n      label: 'Security',\n      icon: <ShieldCheckIcon className=\"w-5 h-5 mr-2\" />\n    },\n    {\n      id: 'notifications',\n      label: 'Notifications',\n      icon: <BellIcon className=\"w-5 h-5 mr-2\" />\n    },\n    {\n      id: 'activity',\n      label: 'Activity',\n      icon: <ClockIcon className=\"w-5 h-5 mr-2\" />\n    }\n  ];\n\n  // Convert our tabs data to the format expected by the Tabs component\n  const tabs = tabsData.map(tab => ({\n    id: tab.id,\n    label: (\n      <div className=\"flex items-center\">\n        {tab.icon}\n        {tab.label}\n      </div>\n    )\n  }));\n\n  return (\n    <Tabs\n      tabs={tabs as unknown as Tab[]}\n      activeTab={activeTab}\n      onChange={(tabId) => onTabChange(tabId as ProfileTab)}\n    />\n  );\n};\n\nexport default ProfileTabs;\n\n","import * as React from \"react\";\nfunction CameraIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.827 6.175A2.31 2.31 0 0 1 5.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 0 0 2.25 2.25h15A2.25 2.25 0 0 0 21.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 0 0-1.134-.175 2.31 2.31 0 0 1-1.64-1.055l-.822-1.316a2.192 2.192 0 0 0-1.736-1.039 48.774 48.774 0 0 0-5.232 0 2.192 2.192 0 0 0-1.736 1.039l-.821 1.316Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.5 12.75a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0ZM18.75 10.5h.008v.008h-.008V10.5Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CameraIcon);\nexport default ForwardRef;","/**\n * Profile Info Component\n * \n * This component displays and allows editing of the user's profile information.\n */\n\nimport React, { useRef } from 'react';\nimport type{ UserProfile } from '../types/index';\nimport { CameraIcon } from '@heroicons/react/24/outline';\nimport Avatar from '../../../components/common/Avatar';\n\ninterface ProfileInfoProps {\n  profile: UserProfile;\n  isEditing: boolean;\n  onInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onAvatarChange?: (file: File) => void;\n}\n\nconst ProfileInfo: React.FC<ProfileInfoProps> = ({\n  profile,\n  isEditing,\n  onInputChange,\n  onAvatarChange\n}) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleAvatarClick = () => {\n    if (isEditing && fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file && onAvatarChange) {\n      onAvatarChange(file);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row items-center gap-6 pb-6 border-b border-gray-100\">\n        <div className=\"relative\">\n          <Avatar\n            {...(profile.avatar && profile.avatar.trim() && { src: profile.avatar })}\n            alt={profile.name}\n            name={profile.name}\n            size=\"2xl\"\n            className=\"w-24 h-24\"\n          />\n          {isEditing && (\n            <>\n              <button\n                onClick={handleAvatarClick}\n                className=\"absolute bottom-0 right-0 bg-white rounded-full p-1.5 shadow-md hover:bg-gray-50\"\n              >\n                <CameraIcon className=\"w-5 h-5 text-gray-600\" />\n              </button>\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleFileChange}\n                className=\"hidden\"\n              />\n            </>\n          )}\n        </div>\n        <div className=\"flex-1\">\n          <h3 className=\"text-xl font-bold text-gray-800\">{profile.name}</h3>\n          <p className=\"text-gray-500\">{profile.role}</p>\n          <p className=\"text-sm text-gray-500 mt-1\">Member since {new Date(profile.joinDate).toLocaleDateString()}</p>\n        </div>\n      </div>\n\n      <div className=\"space-y-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Full Name</label>\n            {isEditing ? (\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={profile.name}\n                onChange={onInputChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              />\n            ) : (\n              <p className=\"text-gray-800\">{profile.name}</p>\n            )}\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email Address</label>\n            {isEditing ? (\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={profile.email}\n                onChange={onInputChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              />\n            ) : (\n              <p className=\"text-gray-800\">{profile.email}</p>\n            )}\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Phone Number</label>\n            {isEditing ? (\n              <input\n                type=\"tel\"\n                name=\"phone\"\n                value={profile.phone}\n                onChange={onInputChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n              />\n            ) : (\n              <p className=\"text-gray-800\">{profile.phone}</p>\n            )}\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Role</label>\n            <p className=\"text-gray-800\">{profile.role}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","/**\n * Toggle Switch Component\n * \n * A reusable toggle switch component.\n */\n\nimport React from 'react';\n\ninterface ToggleSwitchProps {\n  enabled: boolean;\n  onChange: () => void;\n  size?: 'sm' | 'md' | 'lg';\n  disabled?: boolean;\n  className?: string;\n}\n\nconst ToggleSwitch: React.FC<ToggleSwitchProps> = ({\n  enabled,\n  onChange,\n  size = 'md',\n  disabled = false,\n  className = ''\n}) => {\n  // Size classes\n  const sizeClasses = {\n    sm: {\n      container: 'h-5 w-9',\n      toggle: 'h-3 w-3',\n      translate: enabled ? 'translate-x-4' : 'translate-x-1'\n    },\n    md: {\n      container: 'h-6 w-11',\n      toggle: 'h-4 w-4',\n      translate: enabled ? 'translate-x-6' : 'translate-x-1'\n    },\n    lg: {\n      container: 'h-7 w-14',\n      toggle: 'h-5 w-5',\n      translate: enabled ? 'translate-x-8' : 'translate-x-1'\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={`relative inline-flex ${sizeClasses[size].container} items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 ${\n        enabled ? 'bg-primary' : 'bg-gray-200'\n      } ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'} ${className}`}\n      onClick={disabled ? undefined : onChange}\n      disabled={disabled}\n      role=\"switch\"\n      aria-checked={enabled}\n    >\n      <span \n        className={`inline-block ${sizeClasses[size].toggle} transform rounded-full bg-white transition-transform ${\n          sizeClasses[size].translate\n        }`} \n      />\n    </button>\n  );\n};\n\nexport default ToggleSwitch;\n","/**\n * Security Settings Component\n * \n * This component displays and allows editing of the user's security settings.\n */\n\nimport React from 'react';\nimport type{ UserProfile } from '../types/index';\nimport Button from '../../../components/common/Button';\nimport ToggleSwitch from '../../../components/common/ToggleSwitch';\n\ninterface SecuritySettingsProps {\n  profile: UserProfile;\n  onToggleChange: (setting: string) => void;\n  onChangePassword: () => void;\n  onSignOutAllDevices: () => void;\n}\n\nconst SecuritySettings: React.FC<SecuritySettingsProps> = ({\n  profile,\n  onToggleChange,\n  onChangePassword,\n  onSignOutAllDevices\n}) => {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between py-4 border-b border-gray-100\">\n        <div>\n          <h3 className=\"text-base font-medium text-gray-800\">Password</h3>\n          <p className=\"text-sm text-gray-500 mt-1\">Last changed 30 days ago</p>\n        </div>\n        <Button \n          variant=\"outline\" \n          size=\"sm\"\n          onClick={onChangePassword}\n        >\n          Change Password\n        </Button>\n      </div>\n\n      <div className=\"flex items-center justify-between py-4 border-b border-gray-100\">\n        <div>\n          <h3 className=\"text-base font-medium text-gray-800\">Two-Factor Authentication</h3>\n          <p className=\"text-sm text-gray-500 mt-1\">\n            {profile.twoFactorEnabled \n              ? 'Enabled - Using Authenticator App' \n              : 'Disabled - Enable for extra security'}\n          </p>\n        </div>\n        <ToggleSwitch\n          enabled={profile.twoFactorEnabled}\n          onChange={() => onToggleChange('twoFactorEnabled')}\n        />\n      </div>\n\n      <div className=\"flex items-center justify-between py-4 border-b border-gray-100\">\n        <div>\n          <h3 className=\"text-base font-medium text-gray-800\">Login Sessions</h3>\n          <p className=\"text-sm text-gray-500 mt-1\">Last login: {profile.lastLogin} from IP {profile.lastIp}</p>\n        </div>\n        <Button \n          variant=\"outline\" \n          size=\"sm\" \n          className=\"text-red-600 hover:bg-red-50\"\n          onClick={onSignOutAllDevices}\n        >\n          Sign Out All Devices\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default SecuritySettings;\n","/**\n * Enhanced Notification Settings Component\n *\n * This component displays and allows editing of both personal and admin notification settings.\n * Consolidated from the previous Settings page notifications functionality.\n */\n\nimport React from 'react';\nimport type{ UserProfile } from '../types/index';\nimport ToggleSwitch from '../../../components/common/ToggleSwitch';\nimport { BellIcon, Cog6ToothIcon } from '@heroicons/react/24/outline';\n\ninterface NotificationSettingsProps {\n  profile: UserProfile;\n  onToggleChange: (setting: string) => void;\n  isAdmin?: boolean;\n}\n\nconst NotificationSettings: React.FC<NotificationSettingsProps> = ({\n  profile,\n  onToggleChange,\n  isAdmin = false\n}) => {\n\n  return (\n    <div className=\"space-y-8\">\n      {/* Personal Notification Preferences */}\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center gap-2 mb-4\">\n          <BellIcon className=\"h-5 w-5 text-gray-600\" />\n          <h2 className=\"text-lg font-semibold text-gray-800\">Personal Notifications</h2>\n        </div>\n\n        <div className=\"flex items-center justify-between py-4 border-b border-gray-100\">\n          <div>\n            <h3 className=\"text-base font-medium text-gray-800\">Email Notifications</h3>\n            <p className=\"text-sm text-gray-500 mt-1\">Receive notifications via email</p>\n          </div>\n          <ToggleSwitch\n            enabled={profile.notificationsEnabled.email}\n            onChange={() => onToggleChange('notifications.email')}\n          />\n        </div>\n\n        <div className=\"flex items-center justify-between py-4 border-b border-gray-100\">\n          <div>\n            <h3 className=\"text-base font-medium text-gray-800\">Push Notifications</h3>\n            <p className=\"text-sm text-gray-500 mt-1\">Receive push notifications in browser</p>\n          </div>\n          <ToggleSwitch\n            enabled={profile.notificationsEnabled.push}\n            onChange={() => onToggleChange('notifications.push')}\n          />\n        </div>\n\n        <div className=\"flex items-center justify-between py-4 border-b border-gray-100\">\n          <div>\n            <h3 className=\"text-base font-medium text-gray-800\">SMS Notifications</h3>\n            <p className=\"text-sm text-gray-500 mt-1\">Receive important notifications via SMS</p>\n          </div>\n          <ToggleSwitch\n            enabled={profile.notificationsEnabled.sms}\n            onChange={() => onToggleChange('notifications.sms')}\n          />\n        </div>\n      </div>\n\n      {/* Admin Notification Settings - Only show for admin users */}\n      {isAdmin && profile.adminNotifications && (\n        <div className=\"space-y-6 pt-6 border-t border-gray-200\">\n          <div className=\"flex items-center gap-2 mb-4\">\n            <Cog6ToothIcon className=\"h-5 w-5 text-gray-600\" />\n            <h2 className=\"text-lg font-semibold text-gray-800\">Admin Notifications</h2>\n          </div>\n\n          <div className=\"flex items-center justify-between py-4 border-b border-gray-100\">\n            <div>\n              <h3 className=\"text-base font-medium text-gray-800\">New User Registrations</h3>\n              <p className=\"text-sm text-gray-500 mt-1\">Get notified when a new user registers</p>\n            </div>\n            <ToggleSwitch\n              enabled={profile.adminNotifications.newUsers}\n              onChange={() => onToggleChange('adminNotifications.newUsers')}\n            />\n          </div>\n\n          <div className=\"flex items-center justify-between py-4 border-b border-gray-100\">\n            <div>\n              <h3 className=\"text-base font-medium text-gray-800\">New Orders</h3>\n              <p className=\"text-sm text-gray-500 mt-1\">Get notified when a new order is placed</p>\n            </div>\n            <ToggleSwitch\n              enabled={profile.adminNotifications.newOrders}\n              onChange={() => onToggleChange('adminNotifications.newOrders')}\n            />\n          </div>\n\n          <div className=\"flex items-center justify-between py-4 border-b border-gray-100\">\n            <div>\n              <h3 className=\"text-base font-medium text-gray-800\">Supplier Verification Requests</h3>\n              <p className=\"text-sm text-gray-500 mt-1\">Get notified when a supplier requests verification</p>\n            </div>\n            <ToggleSwitch\n              enabled={profile.adminNotifications.supplierVerifications}\n              onChange={() => onToggleChange('adminNotifications.supplierVerifications')}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NotificationSettings;\n","import * as React from \"react\";\nfunction KeyIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 5.25a3 3 0 0 1 3 3m3 0a6 6 0 0 1-7.029 5.912c-.563-.097-1.159.026-1.563.43L10.5 17.25H8.25v2.25H6v2.25H2.25v-2.818c0-.597.237-1.17.659-1.591l6.499-6.499c.404-.404.527-1 .43-1.563A6 6 0 1 1 21.75 8.25Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(KeyIcon);\nexport default ForwardRef;","/**\n * Activity Log Component\n * \n * This component displays the user's activity log.\n */\n\nimport React from 'react';\nimport type{ ActivityLogItem } from '../types/index';\nimport {\n  UserCircleIcon,\n  KeyIcon,\n  ShieldCheckIcon,\n  CheckCircleIcon\n} from '@heroicons/react/24/outline';\n\ninterface ActivityLogProps {\n  activities: ActivityLogItem[];\n}\n\nconst ActivityLog: React.FC<ActivityLogProps> = ({\n  activities\n}) => {\n  // Helper function to get icon based on activity type\n  const getActivityIcon = (type: string) => {\n    switch (type) {\n      case 'login':\n        return <UserCircleIcon className=\"h-5 w-5\" />;\n      case 'password':\n        return <KeyIcon className=\"h-5 w-5\" />;\n      case 'security':\n        return <ShieldCheckIcon className=\"h-5 w-5\" />;\n      case 'account':\n        return <CheckCircleIcon className=\"h-5 w-5\" />;\n      case 'profile':\n      default:\n        return <UserCircleIcon className=\"h-5 w-5\" />;\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flow-root\">\n        <ul className=\"-mb-8\">\n          {activities.map((activity, activityIdx) => (\n            <li key={activity.id}>\n              <div className=\"relative pb-8\">\n                {activityIdx !== activities.length - 1 ? (\n                  <span className=\"absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200\" aria-hidden=\"true\" />\n                ) : null}\n                <div className=\"relative flex items-start space-x-3\">\n                  <div>\n                    <div className=\"relative px-1\">\n                      <div className=\"flex h-10 w-10 items-center justify-center rounded-full bg-primary bg-opacity-10 ring-8 ring-white\">\n                        <span className=\"text-primary\">\n                          {activity.icon || getActivityIcon(activity.type)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"min-w-0 flex-1 py-1.5\">\n                    <div className=\"text-sm text-gray-500\">\n                      <div className=\"font-medium text-gray-900\">{activity.content}</div>\n                      <span className=\"whitespace-nowrap\">{new Date(activity.date).toLocaleString()}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ActivityLog;\n","/**\n * Profile API Service\n * \n * This file provides methods for interacting with the profile API endpoints.\n */\n\nimport apiClient from '../../../api';\nimport type { UserProfile, ProfileUpdateRequest, PasswordChangeRequest, ActivityLogItem } from '../types';\n\nexport const profileApi = {\n  /**\n   * Get user profile\n   */\n  getProfile: async (): Promise<UserProfile> => {\n    try {\n      const response = await apiClient.get<UserProfile>('/profile');\n      if (!response.data) {\n        throw new Error('No profile data received');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching profile:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Update user profile\n   */\n  updateProfile: async (profileData: ProfileUpdateRequest): Promise<UserProfile> => {\n    try {\n      const response = await apiClient.put<UserProfile>('/profile', profileData);\n      if (!response.data) {\n        throw new Error('Failed to update profile');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Update profile picture\n   */\n  updateProfilePicture: async (file: File): Promise<UserProfile> => {\n    try {\n      const formData = new FormData();\n      formData.append('picture', file);\n\n      const response = await apiClient.put<UserProfile>('/profile/picture', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (!response.data) {\n        throw new Error('Failed to update profile picture');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error updating profile picture:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Change password\n   */\n  changePassword: async (passwordData: PasswordChangeRequest): Promise<{ success: boolean }> => {\n    try {\n      await apiClient.put('/profile/password', passwordData);\n      return { success: true };\n    } catch (error) {\n      console.error('Error changing password:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Delete profile picture\n   */\n  deleteProfilePicture: async (): Promise<UserProfile> => {\n    try {\n      const response = await apiClient.delete<UserProfile>('/profile/picture');\n      if (!response.data) {\n        throw new Error('Failed to delete profile picture');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting profile picture:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Update avatar (alias for updateProfilePicture)\n   */\n  updateAvatar: async (file: File): Promise<{ avatarUrl: string }> => {\n    try {\n      const profile = await profileApi.updateProfilePicture(file);\n      return { avatarUrl: profile.avatar || '' };\n    } catch (error) {\n      console.error('Error updating avatar:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Update profile preferences\n   */\n  updatePreferences: async (preferences: UserProfile['notificationsEnabled']): Promise<UserProfile['notificationsEnabled']> => {\n    try {\n      const response = await apiClient.put<{ preferences: UserProfile['notificationsEnabled'] }>('/profile/preferences', { preferences });\n      if (!response.data) {\n        throw new Error('Failed to update preferences');\n      }\n      return response.data.preferences;\n    } catch (error) {\n      console.error('Error updating preferences:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get activity log\n   */\n  getActivityLog: async (params?: { page?: number; limit?: number }): Promise<ActivityLogItem[]> => {\n    try {\n      const response = await apiClient.get<ActivityLogItem[]>('/profile/activity', { params });\n      if (!response.data) {\n        throw new Error('No activity log data received');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching activity log:', error);\n      throw error;\n    }\n  }\n};\n\nexport default profileApi;\n","/**\n * Profile Hook\n * \n * This hook provides methods and state for working with the user profile.\n */\n\nimport { useState, useCallback, useEffect } from 'react';\nimport { Profile, ProfileUpdateData, PasswordChangeData } from '../types/index';\nimport profileApi from '../api/profileApi';\nimport useNotification from '../../../hooks/useNotification';\n\nexport const useProfile = () => {\n  const [profile, setProfile] = useState<Profile | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const { showNotification } = useNotification();\n\n  // Fetch the current user's profile\n  const fetchProfile = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const data = await profileApi.getProfile();\n      setProfile(data);\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to fetch profile'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [showNotification]);\n\n  // Update the current user's profile\n  const updateProfile = useCallback(async (profileData: ProfileUpdateData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const updatedProfile = await profileApi.updateProfile(profileData);\n      setProfile(updatedProfile);\n      showNotification({\n        type: 'success',\n        title: 'Success',\n        message: 'Profile updated successfully'\n      });\n      return updatedProfile;\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to update profile'\n      });\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [showNotification]);\n\n  // Update the current user's avatar\n  const updateAvatar = useCallback(async (file: File) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const { avatarUrl } = await profileApi.updateAvatar(file);\n      setProfile(prevProfile => {\n        if (!prevProfile) return null;\n        return {\n          ...prevProfile,\n          avatar: avatarUrl\n        };\n      });\n      showNotification({\n        type: 'success',\n        title: 'Success',\n        message: 'Avatar updated successfully'\n      });\n      return avatarUrl;\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to update avatar'\n      });\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [showNotification]);\n\n  // Change the current user's password\n  const changePassword = useCallback(async (passwordData: PasswordChangeData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const result = await profileApi.changePassword(passwordData);\n      if (result.success) {\n        showNotification({\n          type: 'success',\n          title: 'Success',\n          message: 'Password changed successfully'\n        });\n      }\n      return result;\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to change password'\n      });\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [showNotification]);\n\n  // Update profile preferences\n  const updatePreferences = useCallback(async (preferences: Profile['notificationsEnabled']) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const updatedPreferences = await profileApi.updatePreferences(preferences);\n      setProfile(prevProfile => {\n        if (!prevProfile) return null;\n        return {\n          ...prevProfile,\n          notificationsEnabled: updatedPreferences\n        };\n      });\n      showNotification({\n        type: 'success',\n        title: 'Success',\n        message: 'Preferences updated successfully'\n      });\n      return updatedPreferences;\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to update preferences'\n      });\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [showNotification]);\n\n  // Get activity log for the current user\n  const getActivityLog = useCallback(async (params?: { page?: number; limit?: number }) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const activityLog = await profileApi.getActivityLog(params);\n      return activityLog;\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to fetch activity log'\n      });\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [showNotification]);\n\n  // Load profile on mount\n  useEffect(() => {\n    fetchProfile();\n  }, [fetchProfile]);\n\n  return {\n    profile,\n    isLoading,\n    error,\n    fetchProfile,\n    updateProfile,\n    updateAvatar,\n    changePassword,\n    updatePreferences,\n    getActivityLog\n  };\n};\n\nexport default useProfile;\n","/**\r\n * Profile Page\r\n *\r\n * This page displays and allows editing of the user's profile.\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Card from '../components/common/Card';\r\nimport Button from '../components/common/Button';\r\nimport PageHeader from '../components/layout/PageHeader';\r\nimport useAuth from '../hooks/useAuth';\r\nimport { AVATAR_PLACEHOLDER_SERVICE } from '../constants/config';\r\nimport {\r\n  ProfileTabs,\r\n  ProfileInfo,\r\n  SecuritySettings,\r\n  NotificationSettings,\r\n  ActivityLog,\r\n  useProfile,\r\n  UserProfile,\r\n  ProfileTab,\r\n  ActivityLogItem\r\n} from '../features/profile/index';\r\n\r\n// Utility function to generate avatar URL\r\nconst generateAvatarUrl = (name: string): string => {\r\n  const encodedName = encodeURIComponent(name);\r\n  return `${AVATAR_PLACEHOLDER_SERVICE}?name=${encodedName}&background=3b82f6&color=fff&size=128`;\r\n};\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const { profile: profileData, isLoading: profileLoading, updateProfile, updateAvatar } = useProfile();\r\n\r\n  const [activeTab, setActiveTab] = useState<ProfileTab>('profile');\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  // Use real profile data or fallback to user data from auth context\r\n  const defaultName = user?.name || 'Admin User';\r\n  const [profile, setProfile] = useState<UserProfile>({\r\n    id: user?.id || '1',\r\n    name: defaultName,\r\n    email: user?.email || 'admin@connectchain.com',\r\n    phone: '+1 (555) 123-4567',\r\n    role: user?.role || 'Administrator',\r\n    avatar: (user?.avatar && user.avatar.trim()) ? user.avatar : generateAvatarUrl(defaultName),\r\n    joinDate: '2023-10-15',\r\n    twoFactorEnabled: true,\r\n    notificationsEnabled: {\r\n      email: true,\r\n      push: false,\r\n      sms: true\r\n    },\r\n    adminNotifications: {\r\n      newUsers: true,\r\n      newOrders: true,\r\n      supplierVerifications: false\r\n    },\r\n    lastLogin: '2024-01-20 14:30:25',\r\n    lastIp: '192.168.1.1'\r\n  });\r\n\r\n  // Update local profile state when profileData or user changes\r\n  useEffect(() => {\r\n    if (profileData) {\r\n      setProfile(profileData);\r\n    } else if (user) {\r\n      setProfile(prev => ({\r\n        ...prev,\r\n        id: user.id,\r\n        name: user.name,\r\n        email: user.email,\r\n        role: user.role || 'Administrator',\r\n        avatar: (user.avatar && user.avatar.trim()) ? user.avatar : generateAvatarUrl(user.name)\r\n      }));\r\n    }\r\n  }, [profileData, user]);\r\n\r\n  // Mock activity data\r\n  const activities: ActivityLogItem[] = [\r\n    {\r\n      id: 1,\r\n      content: 'Logged in from new device',\r\n      date: '2024-01-20 14:30:25',\r\n      type: 'login'\r\n    },\r\n    {\r\n      id: 2,\r\n      content: 'Changed password',\r\n      date: '2023-12-15 09:45:12',\r\n      type: 'password'\r\n    },\r\n    {\r\n      id: 3,\r\n      content: 'Enabled two-factor authentication',\r\n      date: '2023-11-30 16:22:45',\r\n      type: 'security'\r\n    },\r\n    {\r\n      id: 4,\r\n      content: 'Updated profile information',\r\n      date: '2023-11-10 11:15:30',\r\n      type: 'profile'\r\n    },\r\n    {\r\n      id: 5,\r\n      content: 'Account created',\r\n      date: '2023-10-15 08:00:00',\r\n      type: 'account'\r\n    }\r\n  ];\r\n\r\n  const handleSaveProfile = async () => {\r\n    if (!updateProfile) return;\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      const updateData = {\r\n        name: profile.name,\r\n        email: profile.email,\r\n        phone: profile.phone,\r\n        ...(profile.avatar && profile.avatar.trim() && { avatar: profile.avatar })\r\n      };\r\n\r\n      await updateProfile(updateData);\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      console.error('Failed to save profile:', error);\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setProfile({\r\n      ...profile,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleToggleChange = (setting: string) => {\r\n    if (setting.startsWith('notifications.')) {\r\n      const notificationType = setting.split('.')[1];\r\n      if (notificationType && notificationType in profile.notificationsEnabled) {\r\n        const notifKey = notificationType as keyof typeof profile.notificationsEnabled;\r\n        setProfile({\r\n          ...profile,\r\n          notificationsEnabled: {\r\n            ...profile.notificationsEnabled,\r\n            [notifKey]: !profile.notificationsEnabled[notifKey]\r\n          }\r\n        });\r\n      }\r\n    } else if (setting.startsWith('adminNotifications.')) {\r\n      const adminNotificationType = setting.split('.')[1];\r\n      if (adminNotificationType && profile.adminNotifications && adminNotificationType in profile.adminNotifications) {\r\n        const adminNotifKey = adminNotificationType as keyof typeof profile.adminNotifications;\r\n        setProfile({\r\n          ...profile,\r\n          adminNotifications: {\r\n            ...profile.adminNotifications,\r\n            [adminNotifKey]: !profile.adminNotifications[adminNotifKey]\r\n          }\r\n        });\r\n      }\r\n    } else if (setting in profile) {\r\n      const profileKey = setting as keyof typeof profile;\r\n      setProfile({\r\n        ...profile,\r\n        [profileKey]: !profile[profileKey]\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChangePassword = () => {\r\n    console.log('Change password');\r\n  };\r\n\r\n  const handleSignOutAllDevices = () => {\r\n    console.log('Sign out all devices');\r\n  };\r\n\r\n  const handleAvatarChange = async (file: File) => {\r\n    if (!updateAvatar) return;\r\n\r\n    try {\r\n      const avatarUrl = await updateAvatar(file);\r\n      setProfile(prev => ({\r\n        ...prev,\r\n        avatar: avatarUrl\r\n      }));\r\n    } catch (error) {\r\n      console.error('Failed to update avatar:', error);\r\n    }\r\n  };\r\n\r\n  // Check if user is admin (in real app, this would come from auth context)\r\n  const isAdmin = profile.role === 'Administrator';\r\n\r\n  const renderTabContent = () => {\r\n    switch (activeTab) {\r\n      case 'security':\r\n        return (\r\n          <SecuritySettings\r\n            profile={profile}\r\n            onToggleChange={handleToggleChange}\r\n            onChangePassword={handleChangePassword}\r\n            onSignOutAllDevices={handleSignOutAllDevices}\r\n          />\r\n        );\r\n      case 'notifications':\r\n        return (\r\n          <NotificationSettings\r\n            profile={profile}\r\n            onToggleChange={handleToggleChange}\r\n            isAdmin={isAdmin}\r\n          />\r\n        );\r\n      case 'activity':\r\n        return (\r\n          <ActivityLog\r\n            activities={activities}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <ProfileInfo\r\n            profile={profile}\r\n            isEditing={isEditing}\r\n            onInputChange={handleInputChange}\r\n            onAvatarChange={handleAvatarChange}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  // Show loading state while profile is being fetched\r\n  if (profileLoading && !profile.id) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <PageHeader\r\n          title=\"My Profile\"\r\n          description=\"View and manage your profile information and notification preferences\"\r\n        />\r\n        <Card>\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"text-center\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto\"></div>\r\n              <p className=\"mt-2 text-sm text-gray-500\">Loading profile...</p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <PageHeader\r\n        title=\"My Profile\"\r\n        description=\"View and manage your profile information and notification preferences\"\r\n        actions={\r\n          activeTab === 'profile' && (\r\n            isEditing ? (\r\n              <>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={() => setIsEditing(false)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={handleSaveProfile}\r\n                  loading={isSaving}\r\n                >\r\n                  Save Changes\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button\r\n                onClick={() => setIsEditing(true)}\r\n              >\r\n                Edit Profile\r\n              </Button>\r\n            )\r\n          )\r\n        }\r\n      />\r\n\r\n      <Card>\r\n        <ProfileTabs\r\n          activeTab={activeTab}\r\n          onTabChange={setActiveTab}\r\n        />\r\n        <div className=\"mt-6\">\r\n          {renderTabContent()}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","// src/components/common/Tabs.tsx\r\nimport React from 'react';\r\n\r\nexport interface Tab {\r\n  id: string;\r\n  label: string;\r\n  disabled?: boolean;\r\n}\r\n\r\ninterface TabsProps {\r\n  tabs: Tab[];\r\n  activeTab: string;\r\n  onChange: (tabId: string) => void;\r\n  className?: string;\r\n}\r\n\r\nconst Tabs: React.FC<TabsProps> = ({\r\n  tabs,\r\n  activeTab,\r\n  onChange,\r\n  className = ''\r\n}) => {\r\n  return (\r\n    <div className={`border-b border-gray-200 ${className}`}>\r\n      <nav className=\"-mb-px flex space-x-8\">\r\n        {tabs.map((tab) => {\r\n          const isActive = tab.id === activeTab;\r\n          \r\n          return (\r\n            <button\r\n              key={tab.id}\r\n              onClick={() => !tab.disabled && onChange(tab.id)}\r\n              className={`\r\n                whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\r\n                ${isActive \r\n                  ? 'border-primary text-primary' \r\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\r\n                ${tab.disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\r\n              `}\r\n              disabled={tab.disabled}\r\n            >\r\n              {tab.label}\r\n            </button>\r\n          );\r\n        })}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;","/**\n * PageHeader Component\n * \n * A consistent header component for pages with title, description, and actions.\n */\n\nimport React, { memo } from 'react';\nimport type { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ChevronRightIcon, HomeIcon } from '@heroicons/react/24/outline';\n\nexport interface BreadcrumbItem {\n  label: string;\n  path?: string;\n}\n\nexport interface PageHeaderProps {\n  title: string;\n  description?: string | ReactNode;\n  actions?: ReactNode;\n  breadcrumbs?: BreadcrumbItem[];\n  className?: string;\n  testId?: string;\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = ({\n  title,\n  description,\n  actions,\n  breadcrumbs,\n  className = '',\n  testId,\n}) => {\n  return (\n    <div \n      className={`mb-6 ${className}`}\n      data-testid={testId}\n    >\n      {/* Breadcrumbs */}\n      {breadcrumbs && breadcrumbs.length > 0 && (\n        <nav className=\"flex mb-4\" aria-label=\"Breadcrumb\">\n          <ol className=\"flex items-center space-x-1 text-sm text-gray-500\">\n            <li>\n              <Link \n                to=\"/\" \n                className=\"flex items-center hover:text-primary\"\n                aria-label=\"Home\"\n              >\n                <HomeIcon className=\"h-4 w-4\" />\n              </Link>\n            </li>\n            \n            {breadcrumbs.map((item, index) => (\n              <li key={index} className=\"flex items-center\">\n                <ChevronRightIcon className=\"h-4 w-4 mx-1 text-gray-400\" />\n                {item.path && index < breadcrumbs.length - 1 ? (\n                  <Link \n                    to={item.path} \n                    className=\"hover:text-primary\"\n                  >\n                    {item.label}\n                  </Link>\n                ) : (\n                  <span className=\"font-medium text-gray-700\">{item.label}</span>\n                )}\n              </li>\n            ))}\n          </ol>\n        </nav>\n      )}\n      \n      {/* Header Content */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-800\">{title}</h1>\n          {description && typeof description === 'string' ? (\n            <p className=\"mt-1 text-sm text-gray-500\">{description}</p>\n          ) : (\n            description\n          )}\n        </div>\n        \n        {actions && (\n          <div className=\"flex flex-wrap gap-3 mt-2 sm:mt-0\">\n            {actions}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PageHeader);\n","/**\n * Card Component\n *\n * A reusable card component for displaying content in a contained box.\n */\n\nimport React, { memo } from 'react';\nimport type { ReactNode } from 'react';\n\nexport interface CardProps {\n  title?: string | ReactNode;\n  subtitle?: string | ReactNode;\n  children: ReactNode;\n  className?: string;\n  bodyClassName?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  icon?: ReactNode;\n  footer?: ReactNode;\n  onClick?: () => void;\n  hoverable?: boolean;\n  noPadding?: boolean;\n  bordered?: boolean;\n  loading?: boolean;\n  testId?: string;\n}\n\nconst Card: React.FC<CardProps> = ({\n  title,\n  subtitle,\n  children,\n  className = '',\n  bodyClassName = '',\n  headerClassName = '',\n  footerClassName = '',\n  icon,\n  footer,\n  onClick,\n  hoverable = false,\n  noPadding = false,\n  bordered = true,\n  loading = false,\n  testId,\n}) => {\n  // Base classes\n  const cardClasses = `\n    bg-white rounded-xl ${bordered ? 'border border-gray-100' : ''} overflow-hidden transition-all duration-300\n    ${hoverable ? 'hover:shadow-md hover:border-gray-200 transform hover:-translate-y-1' : 'shadow-sm'}\n    ${onClick ? 'cursor-pointer' : ''}\n    ${className}\n  `;\n\n  // Header classes\n  const headerClasses = `\n    px-6 py-4 border-b border-gray-100 flex items-center justify-between\n    ${headerClassName}\n  `;\n\n  // Body classes\n  const bodyClasses = `\n    ${noPadding ? '' : 'p-6'}\n    ${bodyClassName}\n  `;\n\n  // Footer classes\n  const footerClasses = `\n    px-6 py-4 bg-gray-50 border-t border-gray-100\n    ${footerClassName}\n  `;\n\n  // Loading skeleton\n  if (loading) {\n    return (\n      <div className={cardClasses} data-testid={testId}>\n        {(title || subtitle || icon) && (\n          <div className={headerClasses}>\n            <div className=\"w-full\">\n              {title && <div className=\"h-6 bg-gray-200 rounded w-1/3 animate-pulse\"></div>}\n              {subtitle && <div className=\"h-4 mt-2 bg-gray-200 rounded w-1/2 animate-pulse\"></div>}\n            </div>\n            {icon && <div className=\"h-8 w-8 bg-gray-200 rounded-full animate-pulse\"></div>}\n          </div>\n        )}\n\n        <div className={bodyClasses}>\n          <div className=\"h-24 bg-gray-200 rounded animate-pulse\"></div>\n        </div>\n\n        {footer && (\n          <div className={footerClasses}>\n            <div className=\"h-8 bg-gray-200 rounded w-1/4 animate-pulse\"></div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={cardClasses}\n      onClick={onClick}\n      data-testid={testId}\n    >\n      {(title || subtitle || icon) && (\n        <div className={headerClasses}>\n          <div>\n            {typeof title === 'string' ? (\n              <h3 className=\"text-lg font-semibold text-primary\">{title}</h3>\n            ) : (\n              title\n            )}\n            {typeof subtitle === 'string' ? (\n              <p className=\"mt-1 text-sm text-gray-500\">{subtitle}</p>\n            ) : (\n              subtitle\n            )}\n          </div>\n          {icon && <div className=\"text-primary\">{icon}</div>}\n        </div>\n      )}\n\n      <div className={bodyClasses}>{children}</div>\n\n      {footer && (\n        <div className={footerClasses}>\n          {footer}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Card);\n","import * as React from \"react\";\nfunction ChevronRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m8.25 4.5 7.5 7.5-7.5 7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClockIcon);\nexport default ForwardRef;","/**\n * Button Component\n * \n * A reusable button component with various styles and states.\n */\n\nimport React, { memo } from 'react';\nimport type { ReactNode } from 'react';\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'outline' | 'danger' | 'success' | 'text' | 'link';\nexport type ButtonSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\nexport interface ButtonProps {\n  children: ReactNode;\n  variant?: ButtonVariant;\n  size?: ButtonSize;\n  className?: string;\n  onClick?: () => void;\n  disabled?: boolean;\n  type?: 'button' | 'submit' | 'reset';\n  icon?: ReactNode;\n  iconPosition?: 'left' | 'right';\n  fullWidth?: boolean;\n  loading?: boolean;\n  rounded?: boolean;\n  href?: string;\n  target?: string;\n  rel?: string;\n  title?: string;\n  ariaLabel?: string;\n  testId?: string;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  variant = 'primary',\n  size = 'md',\n  className = '',\n  onClick,\n  disabled = false,\n  type = 'button',\n  icon,\n  iconPosition = 'left',\n  fullWidth = false,\n  loading = false,\n  rounded = false,\n  href,\n  target,\n  rel,\n  title,\n  ariaLabel,\n  testId,\n}) => {\n  const baseClasses = 'inline-flex items-center justify-center font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2';\n  \n  const variantClasses = {\n    primary: 'bg-primary text-white hover:bg-primary/90 focus:ring-primary',\n    secondary: 'bg-gray-200 text-gray-800 hover:bg-gray-300 focus:ring-gray-300',\n    outline: 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 focus:ring-primary',\n    danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500',\n    success: 'bg-green-600 text-white hover:bg-green-700 focus:ring-green-500',\n    text: 'bg-transparent text-primary hover:bg-gray-100 focus:ring-primary',\n    link: 'bg-transparent text-primary hover:underline focus:ring-transparent p-0',\n  };\n  \n  const sizeClasses = {\n    xs: 'text-xs px-2 py-1',\n    sm: 'text-xs px-3 py-1.5',\n    md: 'text-sm px-4 py-2',\n    lg: 'text-base px-5 py-2.5',\n    xl: 'text-lg px-6 py-3',\n  };\n  \n  const disabledClasses = disabled ? 'opacity-60 cursor-not-allowed' : 'cursor-pointer';\n  const widthClass = fullWidth ? 'w-full' : '';\n  const roundedClass = rounded ? 'rounded-full' : 'rounded-lg';\n  \n  const buttonClasses = `\n    ${baseClasses}\n    ${variantClasses[variant]}\n    ${sizeClasses[size]}\n    ${disabledClasses}\n    ${widthClass}\n    ${roundedClass}\n    ${className}\n  `;\n  \n  const content = (\n    <>\n      {loading && (\n        <svg \n          className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-current\" \n          xmlns=\"http://www.w3.org/2000/svg\" \n          fill=\"none\" \n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n        >\n          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n      )}\n      \n      {icon && iconPosition === 'left' && !loading && (\n        <span className=\"mr-2\">{icon}</span>\n      )}\n      \n      {children}\n      \n      {icon && iconPosition === 'right' && (\n        <span className=\"ml-2\">{icon}</span>\n      )}\n    </>\n  );\n  \n  // If href is provided, render an anchor tag\n  if (href) {\n    return (\n      <a\n        href={href}\n        className={buttonClasses}\n        target={target}\n        rel={rel || (target === '_blank' ? 'noopener noreferrer' : undefined)}\n        onClick={onClick}\n        title={title}\n        aria-label={ariaLabel}\n        data-testid={testId}\n      >\n        {content}\n      </a>\n    );\n  }\n  \n  // Otherwise render a button\n  return (\n    <button\n      type={type}\n      className={buttonClasses}\n      onClick={onClick}\n      disabled={disabled || loading}\n      title={title}\n      aria-label={ariaLabel}\n      data-testid={testId}\n    >\n      {content}\n    </button>\n  );\n};\n\nexport default memo(Button);\n"],"names":["ShieldCheckIcon","_ref","svgRef","title","titleId","props","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","activeTab","onTabChange","tabs","label","icon","_jsx","UserCircleIcon","className","BellIcon","ClockIcon","map","tab","_jsxs","children","Tabs","onChange","tabId","CameraIcon","profile","isEditing","onInputChange","onAvatarChange","fileInputRef","useRef","Avatar","avatar","trim","src","alt","name","size","_Fragment","onClick","handleAvatarClick","current","click","type","accept","e","_e$target$files","file","target","files","role","Date","joinDate","toLocaleDateString","value","email","phone","enabled","disabled","sizeClasses","sm","container","toggle","translate","md","lg","undefined","onToggleChange","onChangePassword","onSignOutAllDevices","Button","variant","twoFactorEnabled","ToggleSwitch","lastLogin","lastIp","isAdmin","notificationsEnabled","push","sms","adminNotifications","Cog6ToothIcon","newUsers","newOrders","supplierVerifications","KeyIcon","activities","getActivityIcon","CheckCircleIcon","activity","activityIdx","length","content","date","toLocaleString","profileApi","getProfile","async","response","apiClient","get","data","Error","error","console","updateProfile","put","profileData","updateProfilePicture","formData","FormData","append","headers","changePassword","passwordData","success","deleteProfilePicture","delete","updateAvatar","avatarUrl","updatePreferences","preferences","getActivityLog","params","useProfile","setProfile","useState","isLoading","setIsLoading","setError","showNotification","useNotification","fetchProfile","useCallback","err","message","updatedProfile","prevProfile","result","updatedPreferences","useEffect","generateAvatarUrl","encodedName","encodeURIComponent","AVATAR_PLACEHOLDER_SERVICE","ProfilePage","user","useAuth","profileLoading","setActiveTab","setIsEditing","isSaving","setIsSaving","defaultName","prev","handleInputChange","handleToggleChange","setting","startsWith","notificationType","split","notifKey","adminNotificationType","adminNotifKey","profileKey","handleChangePassword","log","handleSignOutAllDevices","handleAvatarChange","PageHeader","description","Card","actions","updateData","loading","ProfileTabs","renderTabContent","SecuritySettings","NotificationSettings","ActivityLog","ProfileInfo","isActive","breadcrumbs","testId","Link","to","HomeIcon","item","index","ChevronRightIcon","path","memo","subtitle","bodyClassName","headerClassName","footerClassName","footer","hoverable","noPadding","bordered","cardClasses","headerClasses","bodyClasses","footerClasses","iconPosition","fullWidth","rounded","href","rel","ariaLabel","buttonClasses","primary","secondary","outline","danger","text","link","xs","xl","cx","cy","r"],"sourceRoot":""}