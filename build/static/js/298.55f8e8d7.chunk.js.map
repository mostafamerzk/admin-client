{"version":3,"file":"static/js/298.55f8e8d7.chunk.js","mappings":"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","sources":["features/analytics/components/TimeRangeSelector.tsx","features/analytics/components/PieChart.tsx","features/analytics/components/SupplierTable.tsx","features/analytics/api/analyticsApi.ts","features/analytics/hooks/useAnalytics.ts","pages/AnalyticsPage.tsx","../node_modules/@heroicons/react/24/outline/esm/CurrencyDollarIcon.js","features/analytics/components/MetricCard.tsx","components/layout/PageHeader.tsx","components/common/Card.tsx","../node_modules/@heroicons/react/24/outline/esm/ChevronRightIcon.js","components/common/Button.tsx","features/dashboard/components/StatCard.tsx","features/analytics/components/BarChart.tsx"],"sourcesContent":["/**\n * Time Range Selector Component\n * \n * This component displays buttons for selecting the time range for analytics data.\n */\n\nimport React from 'react';\nimport Button from '../../../components/common/Button';\nimport type{ TimeRange } from '../types/index';\n\ninterface TimeRangeSelectorProps {\n  timeRange: TimeRange;\n  onTimeRangeChange: (range: TimeRange) => void;\n}\n\nconst TimeRangeSelector: React.FC<TimeRangeSelectorProps> = ({\n  timeRange,\n  onTimeRangeChange\n}) => {\n  const timeRanges: { value: TimeRange; label: string }[] = [\n    { value: 'week', label: 'Week' },\n    { value: 'month', label: 'Month' },\n    { value: 'quarter', label: 'Quarter' },\n    { value: 'year', label: 'Year' }\n  ];\n\n  return (\n    <div className=\"flex space-x-2\">\n      {timeRanges.map((range) => (\n        <Button\n          key={range.value}\n          variant={timeRange === range.value ? 'primary' : 'outline'}\n          onClick={() => onTimeRangeChange(range.value)}\n        >\n          {range.label}\n        </Button>\n      ))}\n    </div>\n  );\n};\n\nexport default TimeRangeSelector;\n","/**\n * Pie Chart Component\n * \n * This component displays a simple pie chart.\n */\n\nimport React from 'react';\nimport Card from '../../../components/common/Card';\nimport type { CategoryDistribution } from '../types/index';\n\ninterface PieChartProps {\n  title: string;\n  data: CategoryDistribution;\n}\n\nconst PieChart: React.FC<PieChartProps> = ({\n  title,\n  data\n}) => {\n  return (\n    <Card title={title} className=\"mb-6\">\n      <div className=\"h-80 flex items-center justify-center\">\n        <div className=\"w-full h-full\">\n          <div className=\"flex justify-center items-center h-full\">\n            <div className=\"w-64 h-64 rounded-full border-8 border-gray-200 relative\">\n              {data.datasets[0]?.data.map((value, index) => {\n                const color = data.datasets[0]?.backgroundColor[index];\n                const total = data.datasets[0]?.data.reduce((a, b) => a + b, 0) || 1  ;\n                const percentage = (value / total) * 100;\n\n                return (\n                  <div\n                    key={index}\n                    className=\"absolute inset-0 flex items-center justify-center\"\n                    style={{\n                      clipPath: `polygon(50% 50%, 50% 0, ${50 + 50 * Math.cos(Math.PI * 2 * (percentage / 100))}% ${50 - 50 * Math.sin(Math.PI * 2 * (percentage / 100))}%, 50% 50%)`,\n                      transform: `rotate(${index * 72}deg)`,\n                      backgroundColor: color\n                    }}\n                  >\n                  </div>\n                );\n              })}\n              <div className=\"absolute inset-0 flex items-center justify-center\">\n                <div className=\"w-48 h-48 bg-white rounded-full flex items-center justify-center\">\n                  <div className=\"text-center\">\n                    <p className=\"text-lg font-semibold text-gray-700\">Categories</p>\n                    <p className=\"text-sm text-gray-500\">Distribution</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex justify-center mt-4\">\n        <div className=\"grid grid-cols-3 md:grid-cols-5 gap-4\">\n          {data.labels.map((label, index) => (\n            <div key={index} className=\"flex items-center\">\n              <div\n                className=\"w-3 h-3 rounded-full mr-2\"\n                style={{ backgroundColor: data.datasets[0]?.backgroundColor[index] }}\n              ></div>\n              <span className=\"text-sm text-gray-700\">{label}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default PieChart;\n","/**\n * Supplier Table Component\n * \n * This component displays a table of top performing suppliers.\n */\n\nimport React from 'react';\nimport Card from '../../../components/common/Card';\nimport type{ Supplier } from '../types/index';\n\ninterface SupplierTableProps {\n  title: string;\n  suppliers: Supplier[];\n  formatCurrency: (amount: number) => string;\n}\n\nconst SupplierTable: React.FC<SupplierTableProps> = ({\n  title,\n  suppliers,\n  formatCurrency\n}) => {\n  return (\n    <Card title={title}>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Supplier\n              </th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Products\n              </th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Orders\n              </th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Revenue\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {suppliers.map((supplier) => (\n              <tr key={supplier.id}>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm font-medium text-gray-900\">{supplier.name}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-500\">{supplier.products}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-500\">{supplier.orders}</div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-500\">{formatCurrency(supplier.revenue)}</div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </Card>\n  );\n};\n\nexport default SupplierTable;\n","/**\n * Analytics API Service\n * \n * This file provides methods for interacting with the analytics API endpoints.\n */\n\nimport apiClient from '../../../api';\nimport type { \n  AnalyticsData, \n  AnalyticsSummary, \n  SalesTrendData, \n  UserGrowthData, \n  CategoryDistributionData, \n  TopProductData, \n  TopSupplierData, \n  GeographicData,\n  AnalyticsTimeRange\n} from '../types';\n\nexport const analyticsApi = {\n  /**\n   * Get all analytics data\n   */\n  getAnalyticsData: async (timeRange: AnalyticsTimeRange = 'month'): Promise<AnalyticsData> => {\n    try {\n      const response = await apiClient.get<AnalyticsData>('/analytics', { params: { timeRange } });\n      if (!response.data) {\n        throw new Error('No analytics data received');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching analytics data:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get analytics summary\n   */\n  getAnalyticsSummary: async (timeRange: AnalyticsTimeRange = 'month'): Promise<AnalyticsSummary> => {\n    try {\n      const response = await apiClient.get<AnalyticsSummary>('/analytics/summary', { params: { timeRange } });\n      if (!response.data) {\n        throw new Error('No analytics summary received');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching analytics summary:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get sales trend data\n   */\n  getSalesTrend: async (timeRange: AnalyticsTimeRange = 'month'): Promise<SalesTrendData> => {\n    try {\n      const response = await apiClient.get<SalesTrendData>('/analytics/sales-trend', { params: { timeRange } });\n      if (!response.data) {\n        throw new Error('No sales trend data received');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching sales trend data:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get user growth data\n   */\n  getUserGrowth: async (timeRange: AnalyticsTimeRange = 'month'): Promise<UserGrowthData> => {\n    try {\n      const response = await apiClient.get<UserGrowthData>('/analytics/user-growth', { params: { timeRange } });\n      if (!response.data) {\n        throw new Error('No user growth data received');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user growth data:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get category distribution data\n   */\n  getCategoryDistribution: async (timeRange: AnalyticsTimeRange = 'month'): Promise<CategoryDistributionData> => {\n    try {\n      const response = await apiClient.get<CategoryDistributionData>('/analytics/category-distribution', { params: { timeRange } });\n      if (!response.data) {\n        throw new Error('No category distribution data received');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching category distribution data:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get top products data\n   */\n  getTopProducts: async (timeRange: AnalyticsTimeRange = 'month', limit: number = 10): Promise<TopProductData[]> => {\n    try {\n      const response = await apiClient.get<TopProductData[]>('/analytics/top-products', { params: { timeRange, limit } });\n      if (!response.data) {\n        throw new Error('No top products data received');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching top products data:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get top suppliers data\n   */\n  getTopSuppliers: async (timeRange: AnalyticsTimeRange = 'month', limit: number = 10): Promise<TopSupplierData[]> => {\n    try {\n      const response = await apiClient.get<TopSupplierData[]>('/analytics/top-suppliers', { params: { timeRange, limit } });\n      if (!response.data) {\n        throw new Error('No top suppliers data received');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching top suppliers data:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Get geographic data\n   */\n  getGeographicData: async (timeRange: AnalyticsTimeRange = 'month'): Promise<GeographicData> => {\n    try {\n      const response = await apiClient.get<GeographicData>('/analytics/geographic-data', { params: { timeRange } });\n      if (!response.data) {\n        throw new Error('No geographic data received');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching geographic data:', error);\n      throw error;\n    }\n  },\n\n  /**\n   * Export analytics data\n   */\n  exportAnalyticsData: async (timeRange: AnalyticsTimeRange = 'month', format: 'csv' | 'excel' | 'pdf' = 'csv'): Promise<Blob> => {\n    try {\n      const response = await apiClient.get<Blob>('/analytics/export', { \n        params: { timeRange, format },\n        responseType: 'blob'\n      });\n      if (!response.data) {\n        throw new Error('No export data received');\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Error exporting analytics data:', error);\n      throw error;\n    }\n  }\n};\n\nexport default analyticsApi;\n","/**\n * Analytics Hook\n *\n * This hook provides methods and state for working with analytics data.\n */\n\nimport { useState, useCallback, useEffect } from 'react';\nimport type {\n  AnalyticsData,\n  AnalyticsSummary,\n  SalesTrendData,\n  UserGrowthData,\n  CategoryDistributionData,\n\n  AnalyticsTimeRange,\n  TimeRange,\n  ChartData,\n  MetricData,\n  CategoryDistribution,\n  Supplier\n} from '../types';\nimport analyticsApi from '../api/analyticsApi';\nimport useNotification from '../../../hooks/useNotification';\nimport { mockDb } from '../../../mockData/db';\nimport type { DashboardStats } from '../../../mockData/entities/dashboard';\n\nexport const useAnalytics = (defaultTimeRange: AnalyticsTimeRange = 'month') => {\n  const [analyticsData, setAnalyticsData] = useState<AnalyticsData | null>(null);\n  const [timeRange, setTimeRange] = useState<AnalyticsTimeRange>(defaultTimeRange);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const { showNotification } = useNotification();\n\n  // Get mock data for different time ranges\n  const getDataForTimeRange = (range: TimeRange): ChartData => {\n    switch (range) {\n      case 'week':\n        return {\n          labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n          revenue: [3000, 4500, 3800, 5200, 4800, 6000, 5500],\n          users: [15, 22, 18, 25, 20, 30, 28],\n          orders: [45, 65, 55, 75, 60, 90, 85]\n        };\n      case 'month':\n        return {\n          labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n          revenue: [18000, 22000, 25000, 30000],\n          users: [85, 110, 125, 150],\n          orders: [270, 330, 375, 450]\n        };\n      case 'quarter':\n        return {\n          labels: ['Jan', 'Feb', 'Mar'],\n          revenue: [75000, 85000, 95000],\n          users: [350, 400, 450],\n          orders: [1100, 1250, 1400]\n        };\n      case 'year':\n        return {\n          labels: ['Q1', 'Q2', 'Q3', 'Q4'],\n          revenue: [250000, 300000, 350000, 400000],\n          users: [1200, 1500, 1800, 2100],\n          orders: [3800, 4500, 5200, 6000]\n        };\n      default:\n        return {\n          labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],\n          revenue: [18000, 22000, 25000, 30000],\n          users: [85, 110, 125, 150],\n          orders: [270, 330, 375, 450]\n        };\n    }\n  };\n\n  // Calculate totals and growth\n  const calculateGrowth = (current: number, previous: number): number => {\n    return ((current - previous) / previous) * 100;\n  };\n\n  const getTotalAndGrowth = (data: number[]): MetricData => {\n    const total = data.reduce((sum, value) => sum + value, 0);\n    const previousTotal = total * 0.85; // Mock previous period (15% less)\n    const growth = calculateGrowth(total, previousTotal);\n    return { total, growth };\n  };\n\n  // Format currency\n  const formatCurrency = (amount: number): string => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount);\n  };\n\n  // Fetch all analytics data\n  const fetchAnalyticsData = useCallback(async (range?: AnalyticsTimeRange) => {\n    const selectedRange = range || timeRange;\n    setIsLoading(true);\n    setError(null);\n    try {\n      // In a real app, this would call an API\n      // const data = await analyticsApi.getAnalyticsData(selectedRange);\n\n      // For now, we'll use mock data\n      const dashboardStats = mockDb.getAll<DashboardStats, 'dashboardStats'>('dashboardStats')[0];\n      const chartData = getDataForTimeRange(selectedRange as TimeRange);\n      const revenueData = getTotalAndGrowth(chartData.revenue);\n      const usersData = getTotalAndGrowth(chartData.users);\n      const ordersData = getTotalAndGrowth(chartData.orders);\n\n      const mockAnalyticsData = {\n        timeRange: selectedRange,\n        chartData,\n        revenueData,\n        usersData,\n        ordersData,\n        categoryDistribution: dashboardStats?.categoryDistribution as unknown as CategoryDistribution || [],\n        topSuppliers: dashboardStats?.topSuppliers as unknown as Supplier[] || []\n      };\n\n      setAnalyticsData(mockAnalyticsData as unknown as AnalyticsData);\n      if (range) setTimeRange(range);\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to fetch analytics data'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [timeRange, showNotification, getDataForTimeRange, getTotalAndGrowth]);\n\n  // Get analytics summary\n  const getAnalyticsSummary = useCallback(async (range?: AnalyticsTimeRange): Promise<AnalyticsSummary | null> => {\n    const selectedRange = range || timeRange;\n    setIsLoading(true);\n    setError(null);\n    try {\n      const summary = await analyticsApi.getAnalyticsSummary(selectedRange);\n      return summary;\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to fetch analytics summary'\n      });\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [timeRange, showNotification]);\n\n  // Get sales trend data\n  const getSalesTrend = useCallback(async (range?: AnalyticsTimeRange): Promise<SalesTrendData | null> => {\n    const selectedRange = range || timeRange;\n    setIsLoading(true);\n    setError(null);\n    try {\n      const salesTrend = await analyticsApi.getSalesTrend(selectedRange);\n      return salesTrend;\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to fetch sales trend data'\n      });\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [timeRange, showNotification]);\n\n  // Get user growth data\n  const getUserGrowth = useCallback(async (range?: AnalyticsTimeRange): Promise<UserGrowthData | null> => {\n    const selectedRange = range || timeRange;\n    setIsLoading(true);\n    setError(null);\n    try {\n      const userGrowth = await analyticsApi.getUserGrowth(selectedRange);\n      return userGrowth;\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to fetch user growth data'\n      });\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [timeRange, showNotification]);\n\n  // Get category distribution data\n  const getCategoryDistribution = useCallback(async (range?: AnalyticsTimeRange): Promise<CategoryDistributionData | null> => {\n    const selectedRange = range || timeRange;\n    setIsLoading(true);\n    setError(null);\n    try {\n      const categoryDistribution = await analyticsApi.getCategoryDistribution(selectedRange);\n      return categoryDistribution;\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to fetch category distribution data'\n      });\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [timeRange, showNotification]);\n\n  // Export analytics data\n  const exportAnalyticsData = useCallback(async (format: 'csv' | 'excel' | 'pdf' = 'csv', range?: AnalyticsTimeRange): Promise<Blob | null> => {\n    const selectedRange = range || timeRange;\n    setIsLoading(true);\n    setError(null);\n    try {\n      const blob = await analyticsApi.exportAnalyticsData(selectedRange, format);\n      showNotification({\n        type: 'success',\n        title: 'Success',\n        message: 'Analytics data exported successfully'\n      });\n      return blob;\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to export analytics data'\n      });\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [timeRange, showNotification]);\n\n  // Load analytics data on mount and when time range changes\n  useEffect(() => {\n    fetchAnalyticsData();\n  }, [fetchAnalyticsData]);\n\n  return {\n    analyticsData,\n    timeRange,\n    isLoading,\n    error,\n    setTimeRange,\n    fetchAnalyticsData,\n    getAnalyticsSummary,\n    getSalesTrend,\n    getUserGrowth,\n    getCategoryDistribution,\n    exportAnalyticsData,\n    formatCurrency,\n    getDataForTimeRange,\n    getTotalAndGrowth\n  };\n};\n\nexport default useAnalytics;\n","/**\n * AnalyticsPage Component\n *\n * The analytics page for the ConnectChain admin panel.\n */\n\nimport React from 'react';\nimport PageHeader from '../components/layout/PageHeader';\nimport { CurrencyDollarIcon, UsersIcon, ShoppingCartIcon } from '@heroicons/react/24/outline';\nimport StatCard from '../features/dashboard/components/StatCard';\nimport {\n  TimeRangeSelector,\n  BarChart,\n  PieChart,\n  SupplierTable,\n  useAnalytics,\n  TimeRange\n} from '../features/analytics/index';\n\nconst AnalyticsPage: React.FC = () => {\n  const {\n    timeRange,\n    setTimeRange,\n    analyticsData,\n    isLoading,\n    formatCurrency\n  } = useAnalytics();\n\n  const handleTimeRangeChange = (range: TimeRange) => {\n    setTimeRange(range as any); // Type casting as the hook uses AnalyticsTimeRange\n  };\n\n  if (isLoading || !analyticsData) {\n    return (\n      <div>\n        <PageHeader\n          title=\"Analytics\"\n          description=\"View detailed analytics and reports for your platform\"\n          breadcrumbs={[{ label: 'Analytics' }]}\n        />\n        <div className=\"flex justify-center items-center h-64\">\n          <p className=\"text-lg text-gray-500\">Loading analytics data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <PageHeader\n        title=\"Analytics\"\n        description=\"View detailed analytics and reports for your platform\"\n        breadcrumbs={[{ label: 'Analytics' }]}\n        actions={\n          <TimeRangeSelector\n            timeRange={timeRange as TimeRange}\n            onTimeRangeChange={handleTimeRangeChange}\n          />\n        }\n      />\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n        <StatCard\n          title=\"Total Revenue\"\n          value={formatCurrency(analyticsData.revenueData.total)}\n          icon={<CurrencyDollarIcon className=\"h-6 w-6 text-primary\" />}\n          change={{\n            value: Math.abs(analyticsData.revenueData.growth),\n            isPositive: analyticsData.revenueData.growth >= 0\n          }}\n        />\n\n        <StatCard\n          title=\"New Users\"\n          value={analyticsData.usersData.total.toString()}\n          icon={<UsersIcon className=\"h-6 w-6 text-blue-600\" />}\n          change={{\n            value: Math.abs(analyticsData.usersData.growth),\n            isPositive: analyticsData.usersData.growth >= 0\n          }}\n        />\n\n        <StatCard\n          title=\"Total Orders\"\n          value={analyticsData.ordersData.total.toString()}\n          icon={<ShoppingCartIcon className=\"h-6 w-6 text-green-600\" />}\n          change={{\n            value: Math.abs(analyticsData.ordersData.growth),\n            isPositive: analyticsData.ordersData.growth >= 0\n          }}\n        />\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n        <BarChart\n          title=\"Revenue Trend\"\n          labels={analyticsData.chartData.labels}\n          data={analyticsData.chartData.revenue}\n          color=\"bg-primary\"\n        />\n\n        <BarChart\n          title=\"User Growth\"\n          labels={analyticsData.chartData.labels}\n          data={analyticsData.chartData.users}\n          color=\"bg-blue-500\"\n        />\n      </div>\n\n      {/* Category Distribution */}\n      <PieChart\n        title=\"Category Distribution\"\n        data={analyticsData.categoryDistribution}\n      />\n\n      {/* Top Suppliers */}\n      <SupplierTable\n        title=\"Top Performing Suppliers\"\n        suppliers={analyticsData.topSuppliers}\n        formatCurrency={formatCurrency}\n      />\n    </div>\n  );\n};\n\nexport default AnalyticsPage;\n","import * as React from \"react\";\nfunction CurrencyDollarIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v12m-3-2.818.879.659c1.171.879 3.07.879 4.242 0 1.172-.879 1.172-2.303 0-3.182C13.536 12.219 12.768 12 12 12c-.725 0-1.45-.22-2.003-.659-1.106-.879-1.106-2.303 0-3.182s2.9-.879 4.006 0l.415.33M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CurrencyDollarIcon);\nexport default ForwardRef;","/**\n * Metric Card Component\n *\n * This component displays a metric card with an icon, title, value, and growth indicator.\n */\n\nimport React from 'react';\nimport Card from '../../../components/common/Card';\nimport type { MetricData } from '../types/index';\n\n// Helper function to get appropriate background class for icon\nconst getIconBackgroundClass = (icon: React.ReactNode): string => {\n  if (!React.isValidElement(icon)) return 'bg-primary bg-opacity-10';\n\n  // Get the className from the icon props\n  const className = icon.props.className || '';\n\n  // Extract color from text-{color} class with more specific matching\n  if (className.includes('text-primary')) return 'bg-primary bg-opacity-10';\n  if (className.includes('text-blue')) return 'bg-blue-500 bg-opacity-10';\n  if (className.includes('text-green')) return 'bg-green-500 bg-opacity-10';\n  if (className.includes('text-yellow')) return 'bg-yellow-500 bg-opacity-10';\n  if (className.includes('text-red')) return 'bg-red-500 bg-opacity-10';\n  if (className.includes('text-purple')) return 'bg-purple-500 bg-opacity-10';\n  if (className.includes('text-indigo')) return 'bg-indigo-500 bg-opacity-10';\n  if (className.includes('text-pink')) return 'bg-pink-500 bg-opacity-10';\n  if (className.includes('text-gray')) return 'bg-gray-500 bg-opacity-10';\n\n  // Default fallback - use primary color\n  return 'bg-primary bg-opacity-10';\n};\n\ninterface MetricCardProps {\n  title: string;\n  data: MetricData;\n  icon: React.ReactNode;\n  formatValue?: (value: number) => string;\n}\n\nconst MetricCard: React.FC<MetricCardProps> = ({\n  title,\n  data,\n  icon,\n  formatValue = (value) => value.toString()\n}) => {\n  return (\n    <Card>\n      <div className=\"flex items-center\">\n        <div className={`p-3 rounded-full ${getIconBackgroundClass(icon)}`}>\n          {/* Ensure consistent icon styling while preserving color */}\n          {React.isValidElement(icon) ? (\n            (() => {\n              const iconElement = icon as React.ReactElement;\n              const existingClassName = iconElement.props.className || '';\n              const colorMatch = existingClassName.match(/text-[a-z0-9-]+/);\n              const colorClass = colorMatch ? colorMatch[0] : 'text-primary';\n\n              return React.cloneElement(iconElement, {\n                className: `w-6 h-6 ${colorClass}`\n              });\n            })()\n          ) : (\n            icon\n          )}\n        </div>\n        <div className=\"ml-4\">\n          <h3 className=\"text-lg font-semibold text-gray-700\">{title}</h3>\n          <div className=\"flex items-center\">\n            <p className=\"text-2xl font-bold text-gray-900\">{formatValue(data.total)}</p>\n            <span className={`ml-2 text-sm font-medium ${data.growth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n              {data.growth >= 0 ? '+' : ''}{data.growth.toFixed(1)}%\n            </span>\n          </div>\n          <p className=\"text-sm text-gray-500\">vs previous period</p>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default MetricCard;\n","/**\n * PageHeader Component\n * \n * A consistent header component for pages with title, description, and actions.\n */\n\nimport React, { memo } from 'react';\nimport type { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ChevronRightIcon, HomeIcon } from '@heroicons/react/24/outline';\n\nexport interface BreadcrumbItem {\n  label: string;\n  path?: string;\n}\n\nexport interface PageHeaderProps {\n  title: string;\n  description?: string | ReactNode;\n  actions?: ReactNode;\n  breadcrumbs?: BreadcrumbItem[];\n  className?: string;\n  testId?: string;\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = ({\n  title,\n  description,\n  actions,\n  breadcrumbs,\n  className = '',\n  testId,\n}) => {\n  return (\n    <div \n      className={`mb-6 ${className}`}\n      data-testid={testId}\n    >\n      {/* Breadcrumbs */}\n      {breadcrumbs && breadcrumbs.length > 0 && (\n        <nav className=\"flex mb-4\" aria-label=\"Breadcrumb\">\n          <ol className=\"flex items-center space-x-1 text-sm text-gray-500\">\n            <li>\n              <Link \n                to=\"/\" \n                className=\"flex items-center hover:text-primary\"\n                aria-label=\"Home\"\n              >\n                <HomeIcon className=\"h-4 w-4\" />\n              </Link>\n            </li>\n            \n            {breadcrumbs.map((item, index) => (\n              <li key={index} className=\"flex items-center\">\n                <ChevronRightIcon className=\"h-4 w-4 mx-1 text-gray-400\" />\n                {item.path && index < breadcrumbs.length - 1 ? (\n                  <Link \n                    to={item.path} \n                    className=\"hover:text-primary\"\n                  >\n                    {item.label}\n                  </Link>\n                ) : (\n                  <span className=\"font-medium text-gray-700\">{item.label}</span>\n                )}\n              </li>\n            ))}\n          </ol>\n        </nav>\n      )}\n      \n      {/* Header Content */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-800\">{title}</h1>\n          {description && typeof description === 'string' ? (\n            <p className=\"mt-1 text-sm text-gray-500\">{description}</p>\n          ) : (\n            description\n          )}\n        </div>\n        \n        {actions && (\n          <div className=\"flex flex-wrap gap-3 mt-2 sm:mt-0\">\n            {actions}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PageHeader);\n","/**\n * Card Component\n *\n * A reusable card component for displaying content in a contained box.\n */\n\nimport React, { memo } from 'react';\nimport type { ReactNode } from 'react';\n\nexport interface CardProps {\n  title?: string | ReactNode;\n  subtitle?: string | ReactNode;\n  children: ReactNode;\n  className?: string;\n  bodyClassName?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  icon?: ReactNode;\n  footer?: ReactNode;\n  onClick?: () => void;\n  hoverable?: boolean;\n  noPadding?: boolean;\n  bordered?: boolean;\n  loading?: boolean;\n  testId?: string;\n}\n\nconst Card: React.FC<CardProps> = ({\n  title,\n  subtitle,\n  children,\n  className = '',\n  bodyClassName = '',\n  headerClassName = '',\n  footerClassName = '',\n  icon,\n  footer,\n  onClick,\n  hoverable = false,\n  noPadding = false,\n  bordered = true,\n  loading = false,\n  testId,\n}) => {\n  // Base classes\n  const cardClasses = `\n    bg-white rounded-xl ${bordered ? 'border border-gray-100' : ''} overflow-hidden transition-all duration-300\n    ${hoverable ? 'hover:shadow-md hover:border-gray-200 transform hover:-translate-y-1' : 'shadow-sm'}\n    ${onClick ? 'cursor-pointer' : ''}\n    ${className}\n  `;\n\n  // Header classes\n  const headerClasses = `\n    px-6 py-4 border-b border-gray-100 flex items-center justify-between\n    ${headerClassName}\n  `;\n\n  // Body classes\n  const bodyClasses = `\n    ${noPadding ? '' : 'p-6'}\n    ${bodyClassName}\n  `;\n\n  // Footer classes\n  const footerClasses = `\n    px-6 py-4 bg-gray-50 border-t border-gray-100\n    ${footerClassName}\n  `;\n\n  // Loading skeleton\n  if (loading) {\n    return (\n      <div className={cardClasses} data-testid={testId}>\n        {(title || subtitle || icon) && (\n          <div className={headerClasses}>\n            <div className=\"w-full\">\n              {title && <div className=\"h-6 bg-gray-200 rounded w-1/3 animate-pulse\"></div>}\n              {subtitle && <div className=\"h-4 mt-2 bg-gray-200 rounded w-1/2 animate-pulse\"></div>}\n            </div>\n            {icon && <div className=\"h-8 w-8 bg-gray-200 rounded-full animate-pulse\"></div>}\n          </div>\n        )}\n\n        <div className={bodyClasses}>\n          <div className=\"h-24 bg-gray-200 rounded animate-pulse\"></div>\n        </div>\n\n        {footer && (\n          <div className={footerClasses}>\n            <div className=\"h-8 bg-gray-200 rounded w-1/4 animate-pulse\"></div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={cardClasses}\n      onClick={onClick}\n      data-testid={testId}\n    >\n      {(title || subtitle || icon) && (\n        <div className={headerClasses}>\n          <div>\n            {typeof title === 'string' ? (\n              <h3 className=\"text-lg font-semibold text-primary\">{title}</h3>\n            ) : (\n              title\n            )}\n            {typeof subtitle === 'string' ? (\n              <p className=\"mt-1 text-sm text-gray-500\">{subtitle}</p>\n            ) : (\n              subtitle\n            )}\n          </div>\n          {icon && <div className=\"text-primary\">{icon}</div>}\n        </div>\n      )}\n\n      <div className={bodyClasses}>{children}</div>\n\n      {footer && (\n        <div className={footerClasses}>\n          {footer}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Card);\n","import * as React from \"react\";\nfunction ChevronRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m8.25 4.5 7.5 7.5-7.5 7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","/**\n * Button Component\n * \n * A reusable button component with various styles and states.\n */\n\nimport React, { memo } from 'react';\nimport type { ReactNode } from 'react';\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'outline' | 'danger' | 'success' | 'text' | 'link';\nexport type ButtonSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\nexport interface ButtonProps {\n  children: ReactNode;\n  variant?: ButtonVariant;\n  size?: ButtonSize;\n  className?: string;\n  onClick?: () => void;\n  disabled?: boolean;\n  type?: 'button' | 'submit' | 'reset';\n  icon?: ReactNode;\n  iconPosition?: 'left' | 'right';\n  fullWidth?: boolean;\n  loading?: boolean;\n  rounded?: boolean;\n  href?: string;\n  target?: string;\n  rel?: string;\n  title?: string;\n  ariaLabel?: string;\n  testId?: string;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  variant = 'primary',\n  size = 'md',\n  className = '',\n  onClick,\n  disabled = false,\n  type = 'button',\n  icon,\n  iconPosition = 'left',\n  fullWidth = false,\n  loading = false,\n  rounded = false,\n  href,\n  target,\n  rel,\n  title,\n  ariaLabel,\n  testId,\n}) => {\n  const baseClasses = 'inline-flex items-center justify-center font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2';\n  \n  const variantClasses = {\n    primary: 'bg-primary text-white hover:bg-primary/90 focus:ring-primary',\n    secondary: 'bg-gray-200 text-gray-800 hover:bg-gray-300 focus:ring-gray-300',\n    outline: 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 focus:ring-primary',\n    danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500',\n    success: 'bg-green-600 text-white hover:bg-green-700 focus:ring-green-500',\n    text: 'bg-transparent text-primary hover:bg-gray-100 focus:ring-primary',\n    link: 'bg-transparent text-primary hover:underline focus:ring-transparent p-0',\n  };\n  \n  const sizeClasses = {\n    xs: 'text-xs px-2 py-1',\n    sm: 'text-xs px-3 py-1.5',\n    md: 'text-sm px-4 py-2',\n    lg: 'text-base px-5 py-2.5',\n    xl: 'text-lg px-6 py-3',\n  };\n  \n  const disabledClasses = disabled ? 'opacity-60 cursor-not-allowed' : 'cursor-pointer';\n  const widthClass = fullWidth ? 'w-full' : '';\n  const roundedClass = rounded ? 'rounded-full' : 'rounded-lg';\n  \n  const buttonClasses = `\n    ${baseClasses}\n    ${variantClasses[variant]}\n    ${sizeClasses[size]}\n    ${disabledClasses}\n    ${widthClass}\n    ${roundedClass}\n    ${className}\n  `;\n  \n  const content = (\n    <>\n      {loading && (\n        <svg \n          className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-current\" \n          xmlns=\"http://www.w3.org/2000/svg\" \n          fill=\"none\" \n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n        >\n          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n      )}\n      \n      {icon && iconPosition === 'left' && !loading && (\n        <span className=\"mr-2\">{icon}</span>\n      )}\n      \n      {children}\n      \n      {icon && iconPosition === 'right' && (\n        <span className=\"ml-2\">{icon}</span>\n      )}\n    </>\n  );\n  \n  // If href is provided, render an anchor tag\n  if (href) {\n    return (\n      <a\n        href={href}\n        className={buttonClasses}\n        target={target}\n        rel={rel || (target === '_blank' ? 'noopener noreferrer' : undefined)}\n        onClick={onClick}\n        title={title}\n        aria-label={ariaLabel}\n        data-testid={testId}\n      >\n        {content}\n      </a>\n    );\n  }\n  \n  // Otherwise render a button\n  return (\n    <button\n      type={type}\n      className={buttonClasses}\n      onClick={onClick}\n      disabled={disabled || loading}\n      title={title}\n      aria-label={ariaLabel}\n      data-testid={testId}\n    >\n      {content}\n    </button>\n  );\n};\n\nexport default memo(Button);\n","import React from 'react';\nimport Card from '../../../components/common/Card';\n\n// Helper function to get appropriate background class for icon\nconst getIconBackgroundClass = (icon: React.ReactNode): string => {\n  if (!React.isValidElement(icon)) return 'bg-primary bg-opacity-10';\n\n  // Get the className from the icon props\n  const className = icon.props.className || '';\n\n  // Debug the className to see what we're working with\n  console.log('Icon className:', className);\n\n  // Extract color from text-{color} class with more specific matching\n  if (className.includes('text-primary')) return 'bg-primary-500 bg-opacity-10';\n  if (className.includes('text-blue')) return 'bg-blue-500 bg-opacity-10';\n  if (className.includes('text-green')) return 'bg-green-500 bg-opacity-10';\n  if (className.includes('text-yellow')) return 'bg-yellow-500 bg-opacity-10';\n  if (className.includes('text-red')) return 'bg-red-500 bg-opacity-10';\n  if (className.includes('text-purple')) return 'bg-purple-500 bg-opacity-10';\n  if (className.includes('text-indigo')) return 'bg-indigo-500 bg-opacity-10';\n  if (className.includes('text-pink')) return 'bg-pink-500 bg-opacity-10';\n  if (className.includes('text-gray')) return 'bg-gray-500 bg-opacity-10';\n\n  // Default fallback - use primary color\n  return 'bg-primary bg-opacity-10';\n};\n\ninterface StatCardProps {\n  title: string;\n  value: string | number;\n  icon: React.ReactNode;\n  change?: {\n    value: number;\n    isPositive: boolean;\n  };\n  isLoading?: boolean;\n  onClick?: () => void;\n  hoverable?: boolean;\n}\n\nconst StatCard: React.FC<StatCardProps> = ({\n  title,\n  value,\n  icon,\n  change,\n  isLoading = false,\n  onClick,\n  hoverable = true,\n}) => {\n  return (\n    <Card\n      className=\"transition-transform duration-300 hover:scale-105\"\n      {...(onClick && { onClick })}\n      hoverable={hoverable}\n    >\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <p className=\"text-sm font-medium text-gray-500\">{title}</p>\n\n          {isLoading ? (\n            <div className=\"h-8 w-24 bg-gray-200 animate-pulse rounded mt-1\"></div>\n          ) : (\n            <p className=\"text-2xl font-semibold text-gray-900 mt-1\">{value}</p>\n          )}\n\n          {change && !isLoading && (\n            <div className=\"flex items-center mt-1\">\n              <span\n                className={`text-sm font-medium ${\n                  change.isPositive ? 'text-green-600' : 'text-red-600'\n                }`}\n              >\n                {change.isPositive ? '↑' : '↓'} {change.value}%\n              </span>\n              <span className=\"text-sm text-gray-500 ml-1\">vs last period</span>\n            </div>\n          )}\n        </div>\n\n        <div className={`p-3 rounded-full ${getIconBackgroundClass(icon)}`}>\n          {/* Ensure consistent icon styling while preserving color */}\n          {React.isValidElement(icon) ? (\n            (() => {\n              const iconElement = icon as React.ReactElement;\n              const existingClassName = iconElement.props.className || '';\n              const colorMatch = existingClassName.match(/text-[a-z0-9-]+/);\n              const colorClass = colorMatch ? colorMatch[0] : 'text-primary';\n\n              return React.cloneElement(iconElement, {\n                className: `w-6 h-6 ${colorClass}`\n              });\n            })()\n          ) : (\n            icon\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default StatCard;\n","/**\n * Bar Chart Component\n * \n * This component displays a simple bar chart.\n */\n\nimport React from 'react';\nimport Card from '../../../components/common/Card';\n\ninterface BarChartProps {\n  title: string;\n  labels: string[];\n  data: number[];\n  color?: string;\n}\n\nconst BarChart: React.FC<BarChartProps> = ({\n  title,\n  labels,\n  data,\n  color = 'bg-primary'\n}) => {\n  return (\n    <Card title={title}>\n      <div className=\"h-80 flex items-center justify-center\">\n        <div className=\"w-full h-full\">\n          <div className=\"w-full h-full flex flex-col\">\n            <div className=\"flex justify-between mb-4\">\n              {labels.map((label, index) => (\n                <div key={index} className=\"text-xs text-gray-500\">{label}</div>\n              ))}\n            </div>\n            <div className=\"flex-1 flex items-end\">\n              {data.map((value, index) => {\n                const height = `${(value / Math.max(...data)) * 100}%`;\n                return (\n                  <div key={index} className=\"flex-1 mx-1\">\n                    <div\n                      className={`${color} rounded-t-md w-full transition-all duration-500`}\n                      style={{ height }}\n                    ></div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default BarChart;\n"],"names":["_ref","timeRange","onTimeRangeChange","_jsx","className","children","value","label","map","range","Button","variant","onClick","_data$datasets$","title","data","_jsxs","Card","datasets","index","_data$datasets$2","_data$datasets$3","color","backgroundColor","percentage","reduce","a","b","style","clipPath","Math","cos","PI","sin","transform","labels","_data$datasets$4","suppliers","formatCurrency","scope","supplier","name","products","orders","revenue","id","getAnalyticsData","async","arguments","length","undefined","response","apiClient","get","params","Error","error","console","getAnalyticsSummary","getSalesTrend","getUserGrowth","getCategoryDistribution","getTopProducts","limit","getTopSuppliers","getGeographicData","exportAnalyticsData","format","responseType","defaultTimeRange","analyticsData","setAnalyticsData","useState","setTimeRange","isLoading","setIsLoading","setError","showNotification","useNotification","getDataForTimeRange","users","getTotalAndGrowth","total","sum","calculateGrowth","previous","growth","fetchAnalyticsData","useCallback","selectedRange","dashboardStats","mockDb","getAll","chartData","revenueData","usersData","mockAnalyticsData","ordersData","categoryDistribution","topSuppliers","err","type","message","analyticsApi","blob","useEffect","amount","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","AnalyticsPage","useAnalytics","PageHeader","description","breadcrumbs","actions","TimeRangeSelector","StatCard","icon","CurrencyDollarIcon","change","abs","isPositive","toString","UsersIcon","ShoppingCartIcon","BarChart","PieChart","SupplierTable","svgRef","titleId","props","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","getIconBackgroundClass","includes","formatValue","iconElement","colorMatch","match","colorClass","toFixed","testId","Link","to","HomeIcon","item","ChevronRightIcon","path","memo","subtitle","bodyClassName","headerClassName","footerClassName","footer","hoverable","noPadding","bordered","loading","cardClasses","headerClasses","bodyClasses","footerClasses","size","disabled","iconPosition","fullWidth","rounded","href","target","rel","ariaLabel","buttonClasses","primary","secondary","outline","danger","success","text","link","xs","sm","md","lg","xl","content","_Fragment","cx","cy","r","log","height","max"],"sourceRoot":""}