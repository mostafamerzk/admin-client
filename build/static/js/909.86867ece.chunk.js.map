{"version":3,"file":"static/js/909.86867ece.chunk.js","mappings":"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","sources":["hooks/useErrorHandler.ts","components/layout/PageHeader.tsx","components/common/Card.tsx","components/common/withErrorBoundary.tsx","utils/formatters.ts","components/common/Button.tsx","features/dashboard/components/StatCard.tsx","components/common/Modal.tsx","utils/chartConfig.ts","features/dashboard/components/SalesChart.tsx","features/dashboard/components/UserGrowthChart.tsx","features/dashboard/components/OrderDetailsModal.tsx","features/dashboard/components/RecentOrders.tsx","features/dashboard/hooks/useDashboard.ts","pages/DashboardPage.tsx"],"sourcesContent":["/**\n * Error Handler Hook\n * \n * This hook provides React-specific error handling utilities and state management.\n */\n\nimport { useState, useCallback } from 'react';\nimport { \n  handleApiError, \n  handleValidationError, \n  handleFormError,\n  logError,\n  reportError,\n  type ApiError,\n  type ValidationError \n} from '../utils/errorHandling';\nimport useNotification from './useNotification';\n\ninterface ErrorState {\n  hasError: boolean;\n  error: Error | ApiError | ValidationError | null;\n  errorType: 'api' | 'validation' | 'form' | 'general' | null;\n  context?: string;\n}\n\ninterface UseErrorHandlerOptions {\n  enableNotifications?: boolean;\n  enableReporting?: boolean;\n  onError?: (error: any, context?: string) => void;\n}\n\nexport const useErrorHandler = (options: UseErrorHandlerOptions = {}) => {\n  const { enableNotifications = true, enableReporting = true, onError } = options;\n  const { showNotification } = useNotification();\n  \n  const [errorState, setErrorState] = useState<ErrorState>({\n    hasError: false,\n    error: null,\n    errorType: null\n  });\n\n  // Clear error state\n  const clearError = useCallback(() => {\n    setErrorState({\n      hasError: false,\n      error: null,\n      errorType: null\n    });\n  }, []);\n\n  // Handle API errors\n  const handleApiErrorWithState = useCallback((error: any, context?: string) => {\n    const apiError = handleApiError(\n      error,\n      enableNotifications ? (notification: { type: string; title: string; message: string }) => {\n        showNotification({\n          type: notification.type as 'error' | 'success' | 'warning' | 'info',\n          title: notification.title,\n          message: notification.message\n        });\n      } : undefined\n    );\n\n    setErrorState({\n      hasError: true,\n      error: apiError,\n      errorType: 'api',\n      ...(context && { context })\n    });\n\n    if (enableReporting && error instanceof Error) {\n      reportError(error, context);\n    }\n\n    if (onError) {\n      onError(error, context);\n    }\n\n    return apiError;\n  }, [enableNotifications, enableReporting, showNotification, onError]);\n\n  // Handle validation errors\n  const handleValidationErrorWithState = useCallback((\n    field: string,\n    message: string,\n    code?: string,\n    context?: string\n  ) => {\n    const validationError = handleValidationError(field, message, code);\n\n    setErrorState({\n      hasError: true,\n      error: validationError,\n      errorType: 'validation',\n      ...(context && { context })\n    });\n\n    if (enableNotifications) {\n      showNotification({\n        type: 'error',\n        title: 'Validation Error',\n        message: validationError.message\n      });\n    }\n\n    if (onError) {\n      onError(validationError, context);\n    }\n\n    return validationError;\n  }, [enableNotifications, showNotification, onError]);\n\n  // Handle form errors\n  const handleFormErrorWithState = useCallback((\n    error: any,\n    setFieldError?: (field: string, message: string) => void,\n    context?: string\n  ) => {\n    handleFormError(\n      error,\n      setFieldError,\n      enableNotifications ? (notification: { type: string; title: string; message: string }) => {\n        showNotification({\n          type: notification.type as 'error' | 'success' | 'warning' | 'info',\n          title: notification.title,\n          message: notification.message\n        });\n      } : undefined\n    );\n\n    setErrorState({\n      hasError: true,\n      error,\n      errorType: 'form',\n      ...(context && { context })\n    });\n\n    if (enableReporting && error instanceof Error) {\n      reportError(error, context);\n    }\n\n    if (onError) {\n      onError(error, context);\n    }\n  }, [enableNotifications, enableReporting, showNotification, onError]);\n\n  // Handle general errors\n  const handleGeneralError = useCallback((error: any, context?: string) => {\n    const errorObj = error instanceof Error ? error : new Error(String(error));\n\n    setErrorState({\n      hasError: true,\n      error: errorObj,\n      errorType: 'general',\n      ...(context && { context })\n    });\n\n    if (enableNotifications) {\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: errorObj.message\n      });\n    }\n\n    if (enableReporting) {\n      reportError(errorObj, context);\n    }\n\n    logError(errorObj, context);\n\n    if (onError) {\n      onError(error, context);\n    }\n\n    return errorObj;\n  }, [enableNotifications, enableReporting, showNotification, onError]);\n\n  // Async operation wrapper with error handling\n  const withErrorHandling = useCallback(async <T>(\n    operation: () => Promise<T>,\n    context?: string\n  ): Promise<T | null> => {\n    try {\n      clearError();\n      return await operation();\n    } catch (error) {\n      handleApiErrorWithState(error, context);\n      return null;\n    }\n  }, [clearError, handleApiErrorWithState]);\n\n  // Form submission wrapper with error handling\n  const withFormErrorHandling = useCallback(async <T>(\n    operation: () => Promise<T>,\n    setFieldError?: (field: string, message: string) => void,\n    context?: string\n  ): Promise<T | null> => {\n    try {\n      clearError();\n      return await operation();\n    } catch (error) {\n      handleFormErrorWithState(error, setFieldError, context);\n      return null;\n    }\n  }, [clearError, handleFormErrorWithState]);\n\n  return {\n    // Error state\n    ...errorState,\n    \n    // Error handlers\n    handleApiError: handleApiErrorWithState,\n    handleValidationError: handleValidationErrorWithState,\n    handleFormError: handleFormErrorWithState,\n    handleGeneralError,\n    clearError,\n    \n    // Wrapper functions\n    withErrorHandling,\n    withFormErrorHandling,\n    \n    // Utility functions\n    isApiError: (error: any): error is ApiError => \n      error && typeof error === 'object' && 'status' in error,\n    isValidationError: (error: any): error is ValidationError => \n      error && typeof error === 'object' && 'field' in error,\n  };\n};\n\nexport default useErrorHandler;\n","/**\n * PageHeader Component\n * \n * A consistent header component for pages with title, description, and actions.\n */\n\nimport React, { memo } from 'react';\nimport type { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ChevronRightIcon, HomeIcon } from '@heroicons/react/24/outline';\n\nexport interface BreadcrumbItem {\n  label: string;\n  path?: string;\n}\n\nexport interface PageHeaderProps {\n  title: string;\n  description?: string | ReactNode;\n  actions?: ReactNode;\n  breadcrumbs?: BreadcrumbItem[];\n  className?: string;\n  testId?: string;\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = ({\n  title,\n  description,\n  actions,\n  breadcrumbs,\n  className = '',\n  testId,\n}) => {\n  return (\n    <div \n      className={`mb-6 ${className}`}\n      data-testid={testId}\n    >\n      {/* Breadcrumbs */}\n      {breadcrumbs && breadcrumbs.length > 0 && (\n        <nav className=\"flex mb-4\" aria-label=\"Breadcrumb\">\n          <ol className=\"flex items-center space-x-1 text-sm text-gray-500\">\n            <li>\n              <Link \n                to=\"/\" \n                className=\"flex items-center hover:text-primary\"\n                aria-label=\"Home\"\n              >\n                <HomeIcon className=\"h-4 w-4\" />\n              </Link>\n            </li>\n            \n            {breadcrumbs.map((item, index) => (\n              <li key={index} className=\"flex items-center\">\n                <ChevronRightIcon className=\"h-4 w-4 mx-1 text-gray-400\" />\n                {item.path && index < breadcrumbs.length - 1 ? (\n                  <Link \n                    to={item.path} \n                    className=\"hover:text-primary\"\n                  >\n                    {item.label}\n                  </Link>\n                ) : (\n                  <span className=\"font-medium text-gray-700\">{item.label}</span>\n                )}\n              </li>\n            ))}\n          </ol>\n        </nav>\n      )}\n      \n      {/* Header Content */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-800\">{title}</h1>\n          {description && typeof description === 'string' ? (\n            <p className=\"mt-1 text-sm text-gray-500\">{description}</p>\n          ) : (\n            description\n          )}\n        </div>\n        \n        {actions && (\n          <div className=\"flex flex-wrap gap-3 mt-2 sm:mt-0\">\n            {actions}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PageHeader);\n","/**\n * Card Component\n *\n * A reusable card component for displaying content in a contained box.\n */\n\nimport React, { memo } from 'react';\nimport type { ReactNode } from 'react';\n\nexport interface CardProps {\n  title?: string | ReactNode;\n  subtitle?: string | ReactNode;\n  children: ReactNode;\n  className?: string;\n  bodyClassName?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  icon?: ReactNode;\n  footer?: ReactNode;\n  onClick?: () => void;\n  hoverable?: boolean;\n  noPadding?: boolean;\n  bordered?: boolean;\n  loading?: boolean;\n  testId?: string;\n}\n\nconst Card: React.FC<CardProps> = ({\n  title,\n  subtitle,\n  children,\n  className = '',\n  bodyClassName = '',\n  headerClassName = '',\n  footerClassName = '',\n  icon,\n  footer,\n  onClick,\n  hoverable = false,\n  noPadding = false,\n  bordered = true,\n  loading = false,\n  testId,\n}) => {\n  // Base classes\n  const cardClasses = `\n    bg-white rounded-xl ${bordered ? 'border border-gray-100' : ''} overflow-hidden transition-all duration-300\n    ${hoverable ? 'hover:shadow-md hover:border-gray-200 transform hover:-translate-y-1' : 'shadow-sm'}\n    ${onClick ? 'cursor-pointer' : ''}\n    ${className}\n  `;\n\n  // Header classes\n  const headerClasses = `\n    px-6 py-4 border-b border-gray-100 flex items-center justify-between\n    ${headerClassName}\n  `;\n\n  // Body classes\n  const bodyClasses = `\n    ${noPadding ? '' : 'p-6'}\n    ${bodyClassName}\n  `;\n\n  // Footer classes\n  const footerClasses = `\n    px-6 py-4 bg-gray-50 border-t border-gray-100\n    ${footerClassName}\n  `;\n\n  // Loading skeleton\n  if (loading) {\n    return (\n      <div className={cardClasses} data-testid={testId}>\n        {(title || subtitle || icon) && (\n          <div className={headerClasses}>\n            <div className=\"w-full\">\n              {title && <div className=\"h-6 bg-gray-200 rounded w-1/3 animate-pulse\"></div>}\n              {subtitle && <div className=\"h-4 mt-2 bg-gray-200 rounded w-1/2 animate-pulse\"></div>}\n            </div>\n            {icon && <div className=\"h-8 w-8 bg-gray-200 rounded-full animate-pulse\"></div>}\n          </div>\n        )}\n\n        <div className={bodyClasses}>\n          <div className=\"h-24 bg-gray-200 rounded animate-pulse\"></div>\n        </div>\n\n        {footer && (\n          <div className={footerClasses}>\n            <div className=\"h-8 bg-gray-200 rounded w-1/4 animate-pulse\"></div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={cardClasses}\n      onClick={onClick}\n      data-testid={testId}\n    >\n      {(title || subtitle || icon) && (\n        <div className={headerClasses}>\n          <div>\n            {typeof title === 'string' ? (\n              <h3 className=\"text-lg font-semibold text-primary\">{title}</h3>\n            ) : (\n              title\n            )}\n            {typeof subtitle === 'string' ? (\n              <p className=\"mt-1 text-sm text-gray-500\">{subtitle}</p>\n            ) : (\n              subtitle\n            )}\n          </div>\n          {icon && <div className=\"text-primary\">{icon}</div>}\n        </div>\n      )}\n\n      <div className={bodyClasses}>{children}</div>\n\n      {footer && (\n        <div className={footerClasses}>\n          {footer}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Card);\n","/**\n * Higher-Order Component for Error Boundary\n * \n * This HOC wraps components with an error boundary to catch and handle errors gracefully.\n */\n\nimport React, { ComponentType, forwardRef } from 'react';\nimport ErrorBoundary from './ErrorBoundary';\nimport { reportError } from '../../utils/errorHandling';\n\ninterface ErrorBoundaryConfig {\n  fallback?: React.ComponentType<{ error: Error; resetError: () => void }>;\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void;\n  enableReporting?: boolean;\n  context?: string;\n}\n\n/**\n * Default error fallback component\n */\nconst DefaultErrorFallback: React.FC<{ error: Error; resetError: () => void }> = ({ \n  error, \n  resetError \n}) => (\n  <div className=\"flex flex-col items-center justify-center min-h-[200px] p-4 border border-red-200 rounded-lg bg-red-50\">\n    <div className=\"text-red-500 text-2xl mb-2\">⚠️</div>\n    <h3 className=\"text-lg font-semibold text-red-800 mb-2\">Something went wrong</h3>\n    <p className=\"text-red-600 text-sm mb-4 text-center max-w-md\">\n      {error.message || 'An unexpected error occurred'}\n    </p>\n    <button\n      onClick={resetError}\n      className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n    >\n      Try Again\n    </button>\n  </div>\n);\n\n/**\n * Higher-order component that wraps a component with an error boundary\n */\nexport function withErrorBoundary<P extends object>(\n  Component: ComponentType<P>,\n  config: ErrorBoundaryConfig = {}\n) {\n  const {\n    fallback: FallbackComponent = DefaultErrorFallback,\n    onError,\n    enableReporting = true,\n    context\n  } = config;\n\n  const WrappedComponent = forwardRef<any, P>((props, ref) => {\n    const handleError = (error: Error, errorInfo: React.ErrorInfo) => {\n      // Report error if enabled\n      if (enableReporting) {\n        reportError(error, context || Component.displayName || Component.name, {\n          componentStack: errorInfo.componentStack,\n          errorBoundary: true\n        });\n      }\n\n      // Call custom error handler if provided\n      if (onError) {\n        onError(error, errorInfo);\n      }\n    };\n\n    return (\n      <ErrorBoundary\n        fallback={<FallbackComponent error={new Error()} resetError={() => window.location.reload()} />}\n        onError={handleError}\n      >\n        <Component {...(props as any)} ref={ref} />\n      </ErrorBoundary>\n    );\n  });\n\n  // Set display name for debugging\n  WrappedComponent.displayName = `withErrorBoundary(${Component.displayName || Component.name})`;\n\n  return WrappedComponent;\n}\n\n/**\n * Hook for creating error boundary configuration\n */\nexport const useErrorBoundaryConfig = (\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void,\n  fallback?: React.ComponentType<{ error: Error; resetError: () => void }>,\n  context?: string\n): ErrorBoundaryConfig => {\n  return {\n    ...(onError && { onError }),\n    ...(fallback && { fallback }),\n    ...(context && { context }),\n    enableReporting: true\n  };\n};\n\n/**\n * Decorator for class components\n */\nexport const errorBoundary = (config: ErrorBoundaryConfig = {}) => {\n  return <P extends object>(Component: ComponentType<P>) => {\n    return withErrorBoundary(Component, config);\n  };\n};\n\nexport default withErrorBoundary;\n","/**\n * Formatters\n * \n * This file contains utility functions for formatting data.\n */\n\n/**\n * Format a date string to a human-readable format\n */\nexport const formatDate = (dateString: string, options: Intl.DateTimeFormatOptions = {}): string => {\n  if (!dateString) return '-';\n  \n  try {\n    const date = new Date(dateString);\n    \n    // Default options\n    const defaultOptions: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      ...options\n    };\n    \n    return new Intl.DateTimeFormat('en-US', defaultOptions).format(date);\n  } catch (error) {\n    console.error('Error formatting date:', error);\n    return dateString;\n  }\n};\n\n/**\n * Format a date string to include time\n */\nexport const formatDateTime = (dateString: string): string => {\n  return formatDate(dateString, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\n/**\n * Format a number as currency\n */\nexport const formatCurrency = (\n  amount: number,\n  currency: string = 'USD',\n  locale: string = 'en-US'\n): string => {\n  try {\n    return new Intl.NumberFormat(locale, {\n      style: 'currency',\n      currency,\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount);\n  } catch (error) {\n    console.error('Error formatting currency:', error);\n    return `${currency} ${amount.toFixed(2)}`;\n  }\n};\n\n/**\n * Format a number with commas\n */\nexport const formatNumber = (\n  number: number,\n  options: Intl.NumberFormatOptions = {}\n): string => {\n  try {\n    return new Intl.NumberFormat('en-US', options).format(number);\n  } catch (error) {\n    console.error('Error formatting number:', error);\n    return number.toString();\n  }\n};\n\n/**\n * Format a phone number\n */\nexport const formatPhoneNumber = (phoneNumber: string): string => {\n  if (!phoneNumber) return '-';\n  \n  // Remove all non-numeric characters\n  const cleaned = phoneNumber.replace(/\\D/g, '');\n  \n  // Format based on length\n  if (cleaned.length === 10) {\n    return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;\n  } else if (cleaned.length === 11 && cleaned.startsWith('1')) {\n    return `+1 (${cleaned.slice(1, 4)}) ${cleaned.slice(4, 7)}-${cleaned.slice(7)}`;\n  }\n  \n  // If it doesn't match expected formats, return as is\n  return phoneNumber;\n};\n\n/**\n * Truncate text with ellipsis\n */\nexport const truncateText = (text: string, maxLength: number): string => {\n  if (!text) return '';\n  if (text.length <= maxLength) return text;\n  \n  return `${text.slice(0, maxLength)}...`;\n};\n\n/**\n * Format file size\n */\nexport const formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n};\n\n/**\n * Format a duration in milliseconds to a human-readable format\n */\nexport const formatDuration = (milliseconds: number): string => {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  \n  if (days > 0) {\n    return `${days} day${days > 1 ? 's' : ''}`;\n  } else if (hours > 0) {\n    return `${hours} hour${hours > 1 ? 's' : ''}`;\n  } else if (minutes > 0) {\n    return `${minutes} minute${minutes > 1 ? 's' : ''}`;\n  } else {\n    return `${seconds} second${seconds !== 1 ? 's' : ''}`;\n  }\n};\n","/**\n * Button Component\n * \n * A reusable button component with various styles and states.\n */\n\nimport React, { memo } from 'react';\nimport type { ReactNode } from 'react';\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'outline' | 'danger' | 'success' | 'text' | 'link';\nexport type ButtonSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\nexport interface ButtonProps {\n  children: ReactNode;\n  variant?: ButtonVariant;\n  size?: ButtonSize;\n  className?: string;\n  onClick?: () => void;\n  disabled?: boolean;\n  type?: 'button' | 'submit' | 'reset';\n  icon?: ReactNode;\n  iconPosition?: 'left' | 'right';\n  fullWidth?: boolean;\n  loading?: boolean;\n  rounded?: boolean;\n  href?: string;\n  target?: string;\n  rel?: string;\n  title?: string;\n  ariaLabel?: string;\n  testId?: string;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  variant = 'primary',\n  size = 'md',\n  className = '',\n  onClick,\n  disabled = false,\n  type = 'button',\n  icon,\n  iconPosition = 'left',\n  fullWidth = false,\n  loading = false,\n  rounded = false,\n  href,\n  target,\n  rel,\n  title,\n  ariaLabel,\n  testId,\n}) => {\n  const baseClasses = 'inline-flex items-center justify-center font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2';\n  \n  const variantClasses = {\n    primary: 'bg-primary text-white hover:bg-primary/90 focus:ring-primary',\n    secondary: 'bg-gray-200 text-gray-800 hover:bg-gray-300 focus:ring-gray-300',\n    outline: 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 focus:ring-primary',\n    danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500',\n    success: 'bg-green-600 text-white hover:bg-green-700 focus:ring-green-500',\n    text: 'bg-transparent text-primary hover:bg-gray-100 focus:ring-primary',\n    link: 'bg-transparent text-primary hover:underline focus:ring-transparent p-0',\n  };\n  \n  const sizeClasses = {\n    xs: 'text-xs px-2 py-1',\n    sm: 'text-xs px-3 py-1.5',\n    md: 'text-sm px-4 py-2',\n    lg: 'text-base px-5 py-2.5',\n    xl: 'text-lg px-6 py-3',\n  };\n  \n  const disabledClasses = disabled ? 'opacity-60 cursor-not-allowed' : 'cursor-pointer';\n  const widthClass = fullWidth ? 'w-full' : '';\n  const roundedClass = rounded ? 'rounded-full' : 'rounded-lg';\n  \n  const buttonClasses = `\n    ${baseClasses}\n    ${variantClasses[variant]}\n    ${sizeClasses[size]}\n    ${disabledClasses}\n    ${widthClass}\n    ${roundedClass}\n    ${className}\n  `;\n  \n  const content = (\n    <>\n      {loading && (\n        <svg \n          className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-current\" \n          xmlns=\"http://www.w3.org/2000/svg\" \n          fill=\"none\" \n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n        >\n          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n      )}\n      \n      {icon && iconPosition === 'left' && !loading && (\n        <span className=\"mr-2\">{icon}</span>\n      )}\n      \n      {children}\n      \n      {icon && iconPosition === 'right' && (\n        <span className=\"ml-2\">{icon}</span>\n      )}\n    </>\n  );\n  \n  // If href is provided, render an anchor tag\n  if (href) {\n    return (\n      <a\n        href={href}\n        className={buttonClasses}\n        target={target}\n        rel={rel || (target === '_blank' ? 'noopener noreferrer' : undefined)}\n        onClick={onClick}\n        title={title}\n        aria-label={ariaLabel}\n        data-testid={testId}\n      >\n        {content}\n      </a>\n    );\n  }\n  \n  // Otherwise render a button\n  return (\n    <button\n      type={type}\n      className={buttonClasses}\n      onClick={onClick}\n      disabled={disabled || loading}\n      title={title}\n      aria-label={ariaLabel}\n      data-testid={testId}\n    >\n      {content}\n    </button>\n  );\n};\n\nexport default memo(Button);\n","import React from 'react';\nimport Card from '../../../components/common/Card';\n\n// Helper function to get appropriate background class for icon\nconst getIconBackgroundClass = (icon: React.ReactNode): string => {\n  if (!React.isValidElement(icon)) return 'bg-primary bg-opacity-10';\n\n  // Get the className from the icon props\n  const className = icon.props.className || '';\n\n  // Debug the className to see what we're working with\n  console.log('Icon className:', className);\n\n  // Extract color from text-{color} class with more specific matching\n  if (className.includes('text-primary')) return 'bg-primary-500 bg-opacity-10';\n  if (className.includes('text-blue')) return 'bg-blue-500 bg-opacity-10';\n  if (className.includes('text-green')) return 'bg-green-500 bg-opacity-10';\n  if (className.includes('text-yellow')) return 'bg-yellow-500 bg-opacity-10';\n  if (className.includes('text-red')) return 'bg-red-500 bg-opacity-10';\n  if (className.includes('text-purple')) return 'bg-purple-500 bg-opacity-10';\n  if (className.includes('text-indigo')) return 'bg-indigo-500 bg-opacity-10';\n  if (className.includes('text-pink')) return 'bg-pink-500 bg-opacity-10';\n  if (className.includes('text-gray')) return 'bg-gray-500 bg-opacity-10';\n\n  // Default fallback - use primary color\n  return 'bg-primary bg-opacity-10';\n};\n\ninterface StatCardProps {\n  title: string;\n  value: string | number;\n  icon: React.ReactNode;\n  change?: {\n    value: number;\n    isPositive: boolean;\n  };\n  isLoading?: boolean;\n  onClick?: () => void;\n  hoverable?: boolean;\n}\n\nconst StatCard: React.FC<StatCardProps> = ({\n  title,\n  value,\n  icon,\n  change,\n  isLoading = false,\n  onClick,\n  hoverable = true,\n}) => {\n  return (\n    <Card\n      className=\"transition-transform duration-300 hover:scale-105\"\n      {...(onClick && { onClick })}\n      hoverable={hoverable}\n    >\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <p className=\"text-sm font-medium text-gray-500\">{title}</p>\n\n          {isLoading ? (\n            <div className=\"h-8 w-24 bg-gray-200 animate-pulse rounded mt-1\"></div>\n          ) : (\n            <p className=\"text-2xl font-semibold text-gray-900 mt-1\">{value}</p>\n          )}\n\n          {change && !isLoading && (\n            <div className=\"flex items-center mt-1\">\n              <span\n                className={`text-sm font-medium ${\n                  change.isPositive ? 'text-green-600' : 'text-red-600'\n                }`}\n              >\n                {change.isPositive ? '↑' : '↓'} {change.value}%\n              </span>\n              <span className=\"text-sm text-gray-500 ml-1\">vs last period</span>\n            </div>\n          )}\n        </div>\n\n        <div className={`p-3 rounded-full ${getIconBackgroundClass(icon)}`}>\n          {/* Ensure consistent icon styling while preserving color */}\n          {React.isValidElement(icon) ? (\n            (() => {\n              const iconElement = icon as React.ReactElement;\n              const existingClassName = iconElement.props.className || '';\n              const colorMatch = existingClassName.match(/text-[a-z0-9-]+/);\n              const colorClass = colorMatch ? colorMatch[0] : 'text-primary';\n\n              return React.cloneElement(iconElement, {\n                className: `w-6 h-6 ${colorClass}`\n              });\n            })()\n          ) : (\n            icon\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default StatCard;\n","/**\n * Modal Component\n * \n * A reusable modal dialog component.\n */\n\nimport React, { Fragment, useEffect, useRef, memo } from 'react';\nimport type { ReactNode } from 'react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\nimport { createPortal } from 'react-dom';\n\nexport interface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string | ReactNode;\n  children: ReactNode;\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full';\n  footer?: ReactNode;\n  closeOnEsc?: boolean;\n  closeOnBackdropClick?: boolean;\n  showCloseButton?: boolean;\n  centered?: boolean;\n  className?: string;\n  bodyClassName?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  backdropClassName?: string;\n  testId?: string;\n}\n\nconst Modal: React.FC<ModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  children,\n  size = 'md',\n  footer,\n  closeOnEsc = true,\n  closeOnBackdropClick = true,\n  showCloseButton = true,\n  centered = true,\n  className = '',\n  bodyClassName = '',\n  headerClassName = '',\n  footerClassName = '',\n  backdropClassName = '',\n  testId,\n}) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n  \n  // Handle Escape key press\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (closeOnEsc && e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      // Prevent scrolling on the body when modal is open\n      document.body.style.overflow = 'hidden';\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen, onClose, closeOnEsc]);\n  \n  // Focus trap inside modal\n  useEffect(() => {\n    if (!isOpen || !modalRef.current) return;\n    \n    const focusableElements = modalRef.current.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n    \n    if (focusableElements.length === 0) return;\n    \n    const firstElement = focusableElements[0] as HTMLElement;\n    const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n    \n    const handleTabKey = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab') return;\n      \n      if (e.shiftKey) {\n        if (document.activeElement === firstElement) {\n          lastElement.focus();\n          e.preventDefault();\n        }\n      } else {\n        if (document.activeElement === lastElement) {\n          firstElement.focus();\n          e.preventDefault();\n        }\n      }\n    };\n    \n    document.addEventListener('keydown', handleTabKey);\n    firstElement.focus();\n    \n    return () => {\n      document.removeEventListener('keydown', handleTabKey);\n    };\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n  \n  // Size classes\n  const sizeClasses = {\n    xs: 'max-w-xs',\n    sm: 'max-w-md',\n    md: 'max-w-lg',\n    lg: 'max-w-2xl',\n    xl: 'max-w-4xl',\n    full: 'max-w-full mx-4',\n  };\n  \n  // Modal content\n  const modalContent = (\n    <Fragment>\n      {/* Backdrop */}\n      <div \n        className={`fixed inset-0 bg-black bg-opacity-50 z-40 transition-opacity ${backdropClassName}`}\n        onClick={closeOnBackdropClick ? onClose : undefined}\n        data-testid={`${testId}-backdrop`}\n      />\n\n      {/* Modal */}\n      <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n        <div className={`flex min-h-full items-${centered ? 'center' : 'start'} justify-center p-4 text-center`}>\n          <div \n            ref={modalRef}\n            className={`${sizeClasses[size]} w-full transform overflow-hidden rounded-lg bg-white text-left align-middle shadow-xl transition-all ${className}`}\n            onClick={(e) => e.stopPropagation()}\n            data-testid={testId}\n          >\n            {/* Header */}\n            <div className={`flex items-center justify-between px-6 py-4 border-b border-gray-100 ${headerClassName}`}>\n              {typeof title === 'string' ? (\n                <h3 className=\"text-lg font-semibold text-gray-800\">{title}</h3>\n              ) : (\n                title\n              )}\n              {showCloseButton && (\n                <button\n                  type=\"button\"\n                  className=\"text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-primary rounded-full p-1\"\n                  onClick={onClose}\n                  aria-label=\"Close modal\"\n                  data-testid={`${testId}-close-button`}\n                >\n                  <XMarkIcon className=\"h-6 w-6\" />\n                </button>\n              )}\n            </div>\n\n            {/* Content */}\n            <div className={`px-6 py-4 ${bodyClassName}`}>\n              {children}\n            </div>\n\n            {/* Footer */}\n            {footer && (\n              <div className={`px-6 py-4 bg-gray-50 border-t border-gray-100 flex justify-end space-x-3 ${footerClassName}`}>\n                {footer}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n  \n  // Use portal to render modal at the end of the document body\n  return createPortal(modalContent, document.body);\n};\n\nexport default memo(Modal);\n","/**\n * Chart.js Configuration\n *\n * This file configures Chart.js and registers all necessary components.\n */\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  RadialLinearScale,\n  type ChartOptions\n} from 'chart.js';\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement, // Required for Pie and Doughnut charts\n  RadialLinearScale,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\n// Default chart options\nexport const defaultLineChartOptions: ChartOptions<'line'> = {\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      display: false\n    },\n    tooltip: {\n      backgroundColor: '#F28B22',\n      titleColor: '#FFFFFF',\n      bodyColor: '#FFFFFF',\n      padding: 12,\n      displayColors: false\n    }\n  },\n  scales: {\n    x: {\n      grid: {\n        display: false\n      }\n    },\n    y: {\n      beginAtZero: true,\n      grid: {\n        display: true,\n        color: '#E5E7EB'\n      }\n    }\n  }\n};\n\nexport const defaultPieChartOptions: ChartOptions<'pie'> = {\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      position: 'bottom',\n    },\n    tooltip: {\n      backgroundColor: '#F28B22',\n      titleColor: '#FFFFFF',\n      bodyColor: '#FFFFFF',\n      padding: 12\n    }\n  }\n};\n\n// Helper function to destroy chart instances\nexport const destroyChart = (chartInstance: ChartJS | null) => {\n  if (chartInstance) {\n    chartInstance.destroy();\n  }\n};\n\nexport default ChartJS;\n","/**\n * Sales Chart Component\n *\n * This component displays a chart of sales data.\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS } from 'chart.js';\nimport Card from '../../../components/common/Card';\nimport Button from '../../../components/common/Button';\nimport type { SalesData } from '../types/index';\nimport { defaultLineChartOptions, destroyChart } from '../../../utils/chartConfig';\n\ninterface SalesChartProps {\n  data: SalesData[];\n  isLoading?: boolean;\n  onPeriodChange?: (period: 'day' | 'week' | 'month' | 'year') => void;\n}\n\nconst SalesChart: React.FC<SalesChartProps> = ({\n  data,\n  isLoading = false,\n  onPeriodChange\n}) => {\n  const [activePeriod, setActivePeriod] = useState<'day' | 'week' | 'month' | 'year'>('week');\n  const chartRef = useRef<ChartJS | null>(null);\n\n  // Clean up chart instance on unmount\n  useEffect(() => {\n    return () => {\n      destroyChart(chartRef.current);\n    };\n  }, []);\n\n  const handlePeriodChange = (period: 'day' | 'week' | 'month' | 'year') => {\n    setActivePeriod(period);\n    if (onPeriodChange) {\n      onPeriodChange(period);\n    }\n  };\n\n  const chartData = {\n    labels: data.map(item => item.date),\n    datasets: [\n      {\n        label: 'Sales',\n        data: data.map(item => item.amount),\n        borderColor: '#F28B22',\n        backgroundColor: 'rgba(242, 139, 34, 0.1)',\n        tension: 0.4,\n        fill: true,\n        pointBackgroundColor: '#F28B22',\n        pointBorderColor: '#fff',\n        pointBorderWidth: 2,\n        pointRadius: 4,\n        pointHoverRadius: 6\n      }\n    ]\n  };\n\n  // Extend default options with custom callbacks\n  const options = {\n    ...defaultLineChartOptions,\n    plugins: {\n      ...defaultLineChartOptions.plugins,\n      tooltip: {\n        ...(defaultLineChartOptions.plugins?.tooltip || {}),\n        callbacks: {\n          label: function(context: any) {\n            return `$${context.parsed.y.toLocaleString()}`;\n          }\n        }\n      }\n    },\n    scales: {\n      ...defaultLineChartOptions.scales,\n      y: {\n        ...(defaultLineChartOptions.scales?.y || {}),\n        ticks: {\n          callback: function(value: any) {\n            return '$' + value.toLocaleString();\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <Card className=\"h-full\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Sales Overview</h3>\n        <div className=\"flex space-x-2 mt-3 sm:mt-0\">\n          <Button\n            size=\"sm\"\n            variant={activePeriod === 'day' ? 'primary' : 'outline'}\n            onClick={() => handlePeriodChange('day')}\n          >\n            Day\n          </Button>\n          <Button\n            size=\"sm\"\n            variant={activePeriod === 'week' ? 'primary' : 'outline'}\n            onClick={() => handlePeriodChange('week')}\n          >\n            Week\n          </Button>\n          <Button\n            size=\"sm\"\n            variant={activePeriod === 'month' ? 'primary' : 'outline'}\n            onClick={() => handlePeriodChange('month')}\n          >\n            Month\n          </Button>\n          <Button\n            size=\"sm\"\n            variant={activePeriod === 'year' ? 'primary' : 'outline'}\n            onClick={() => handlePeriodChange('year')}\n          >\n            Year\n          </Button>\n        </div>\n      </div>\n\n      {isLoading ? (\n        <div className=\"h-80 flex items-center justify-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n        </div>\n      ) : (\n        <div className=\"h-80\">\n          <Line\n            data={chartData}\n            options={options as any}\n            ref={(ref) => {\n              if (ref) {\n                chartRef.current = ref;\n              }\n            }}\n          />\n        </div>\n      )}\n    </Card>\n  );\n};\n\nexport default SalesChart;\n\n","/**\n * User Growth Chart Component\n *\n * This component displays a chart of user growth data.\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS } from 'chart.js';\nimport Card from '../../../components/common/Card';\nimport Button from '../../../components/common/Button';\nimport { defaultLineChartOptions, destroyChart } from '../../../utils/chartConfig';\n\ninterface UserGrowthData {\n  date: string;\n  users: number;\n}\n\ninterface UserGrowthChartProps {\n  data: UserGrowthData[];\n  isLoading?: boolean;\n  onPeriodChange?: (period: 'day' | 'week' | 'month' | 'year') => void;\n  showCard?: boolean;\n  title?: string;\n}\n\nconst UserGrowthChart: React.FC<UserGrowthChartProps> = ({\n  data,\n  isLoading = false,\n  onPeriodChange,\n  showCard = true,\n  title = \"User Growth\"\n}) => {\n  const [activePeriod, setActivePeriod] = useState<'day' | 'week' | 'month' | 'year'>('week');\n  const chartRef = useRef<ChartJS | null>(null);\n\n  // Clean up chart instance on unmount\n  useEffect(() => {\n    return () => {\n      destroyChart(chartRef.current);\n    };\n  }, []);\n\n  const handlePeriodChange = (period: 'day' | 'week' | 'month' | 'year') => {\n    setActivePeriod(period);\n    if (onPeriodChange) {\n      onPeriodChange(period);\n    }\n  };\n\n  const chartData = {\n    labels: data.map(item => item.date),\n    datasets: [\n      {\n        label: 'Users',\n        data: data.map(item => item.users),\n        borderColor: '#F28B22',\n        backgroundColor: 'rgba(242, 139, 34, 0.1)',\n        tension: 0.4,\n        fill: true,\n        pointBackgroundColor: '#F28B22',\n        pointBorderColor: '#fff',\n        pointBorderWidth: 2,\n        pointRadius: 4,\n        pointHoverRadius: 6\n      }\n    ]\n  };\n\n  // Extend default options with custom callbacks\n  const options = {\n    ...defaultLineChartOptions,\n    plugins: {\n      ...defaultLineChartOptions.plugins,\n      tooltip: {\n        ...(defaultLineChartOptions.plugins?.tooltip || {}),\n        callbacks: {\n          label: function(context: any) {\n            return `${context.parsed.y.toLocaleString()} users`;\n          }\n        }\n      }\n    }\n  };\n\n  const chartContent = (\n    <>\n      {isLoading ? (\n        <div className=\"h-80 flex items-center justify-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n        </div>\n      ) : (\n        <div className=\"h-80\">\n          <Line\n            data={chartData}\n            options={options as any}\n            ref={(ref) => {\n              if (ref) {\n                chartRef.current = ref;\n              }\n            }}\n          />\n        </div>\n      )}\n    </>\n  );\n\n  if (!showCard) {\n    return chartContent;\n  }\n\n  return (\n    <Card className=\"h-full\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6\">\n        <h3 className=\"text-lg font-medium text-gray-900\">{title}</h3>\n        <div className=\"flex space-x-2 mt-3 sm:mt-0\">\n          <Button\n            size=\"sm\"\n            variant={activePeriod === 'day' ? 'primary' : 'outline'}\n            onClick={() => handlePeriodChange('day')}\n          >\n            Day\n          </Button>\n          <Button\n            size=\"sm\"\n            variant={activePeriod === 'week' ? 'primary' : 'outline'}\n            onClick={() => handlePeriodChange('week')}\n          >\n            Week\n          </Button>\n          <Button\n            size=\"sm\"\n            variant={activePeriod === 'month' ? 'primary' : 'outline'}\n            onClick={() => handlePeriodChange('month')}\n          >\n            Month\n          </Button>\n          <Button\n            size=\"sm\"\n            variant={activePeriod === 'year' ? 'primary' : 'outline'}\n            onClick={() => handlePeriodChange('year')}\n          >\n            Year\n          </Button>\n        </div>\n      </div>\n      {chartContent}\n    </Card>\n  );\n};\n\nexport default UserGrowthChart;\n","/**\n * Order Details Modal Component\n * \n * This component displays detailed information about an order in a modal.\n */\n\nimport React from 'react';\nimport Modal from '../../../components/common/Modal';\nimport Button from '../../../components/common/Button';\nimport type { RecentOrder } from '../types/index';\nimport { \n  CheckCircleIcon, \n  ClockIcon, \n  XCircleIcon,\n  TruckIcon,\n  CalendarIcon,\n  UserIcon,\n  CurrencyDollarIcon\n} from '@heroicons/react/24/outline';\n\ninterface OrderDetailsModalProps {\n  order: RecentOrder | null;\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst OrderDetailsModal: React.FC<OrderDetailsModalProps> = ({ \n  order, \n  isOpen, \n  onClose \n}) => {\n  if (!order) return null;\n\n  // Helper function to get status icon\n  const getStatusIcon = (status: string) => {\n    switch(status) {\n      case 'pending':\n        return <ClockIcon className=\"w-5 h-5 text-yellow-500\" />;\n      case 'processing':\n        return <CheckCircleIcon className=\"w-5 h-5 text-blue-500\" />;\n      case 'completed':\n        return <TruckIcon className=\"w-5 h-5 text-green-500\" />;\n      case 'cancelled':\n        return <XCircleIcon className=\"w-5 h-5 text-red-500\" />;\n      default:\n        return null;\n    }\n  };\n\n  // Helper function to get status color class\n  const getStatusColorClass = (status: string) => {\n    switch(status) {\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'processing':\n        return 'bg-blue-100 text-blue-800';\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'cancelled':\n        return 'bg-red-100 text-red-800';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Order Details\"\n      size=\"md\"\n      footer={\n        <Button\n          variant=\"outline\"\n          onClick={onClose}\n        >\n          Close\n        </Button>\n      }\n    >\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900\">Order #{order.id}</h3>\n            <div className=\"mt-1\">\n              <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColorClass(order.status)}`}>\n                {getStatusIcon(order.status)}\n                <span className=\"ml-1\">{order.status.charAt(0).toUpperCase() + order.status.slice(1)}</span>\n              </span>\n            </div>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-sm text-gray-500\">Total Amount</div>\n            <div className=\"text-xl font-bold text-primary\">${order.amount.toLocaleString()}</div>\n          </div>\n        </div>\n\n        <div className=\"space-y-4\">\n          <div className=\"flex items-start\">\n            <UserIcon className=\"w-5 h-5 text-gray-400 mt-0.5 mr-2\" />\n            <div>\n              <div className=\"text-sm font-medium text-gray-500\">Customer</div>\n              <div className=\"text-sm text-gray-900\">{order.customer}</div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-start\">\n            <CalendarIcon className=\"w-5 h-5 text-gray-400 mt-0.5 mr-2\" />\n            <div>\n              <div className=\"text-sm font-medium text-gray-500\">Order Date</div>\n              <div className=\"text-sm text-gray-900\">{order.date}</div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-start\">\n            <CurrencyDollarIcon className=\"w-5 h-5 text-gray-400 mt-0.5 mr-2\" />\n            <div>\n              <div className=\"text-sm font-medium text-gray-500\">Payment</div>\n              <div className=\"text-sm text-gray-900\">${order.amount.toLocaleString()}</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-4 pt-4 border-t border-gray-200\">\n          <p className=\"text-sm text-gray-500\">\n            This is a simplified view of the order. To see full details including items, shipping information, and more, please visit the Orders page.\n          </p>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default OrderDetailsModal;\n","/**\n * Recent Orders Component\n *\n * This component displays a list of recent orders.\n */\n\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Card from '../../../components/common/Card';\nimport type { RecentOrder } from '../types/index';\nimport { EyeIcon } from '@heroicons/react/24/outline';\nimport { ROUTES } from '../../../constants/routes';\nimport OrderDetailsModal from './OrderDetailsModal';\n\ninterface RecentOrdersProps {\n  orders: RecentOrder[];\n  isLoading?: boolean;\n  onViewOrder?: (orderId: string) => void;\n}\n\nconst RecentOrders: React.FC<RecentOrdersProps> = ({\n  orders,\n  isLoading = false,\n  onViewOrder\n}) => {\n  const navigate = useNavigate();\n  const [selectedOrder, setSelectedOrder] = useState<RecentOrder | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleViewOrder = (order: RecentOrder, e: React.MouseEvent) => {\n    // Stop propagation to prevent row click navigation when clicking the eye icon\n    e.stopPropagation();\n    setSelectedOrder(order);\n    setIsModalOpen(true);\n    if (onViewOrder) {\n      onViewOrder(order.id);\n    }\n  };\n\n  const navigateToOrderDetails = (orderId: string) => {\n    navigate(ROUTES.getOrderDetailsRoute(orderId));\n  };\n\n  const getStatusColor = (status: RecentOrder['status']) => {\n    switch (status) {\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'processing':\n        return 'bg-blue-100 text-blue-800';\n      case 'completed':\n        return 'bg-green-100 text-green-800';\n      case 'cancelled':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <Card className=\"h-full\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Recent Orders</h3>\n        <Link\n          to={ROUTES.ORDERS}\n          className=\"text-sm text-primary hover:text-primary-dark font-medium\"\n        >\n          View All\n        </Link>\n      </div>\n\n      {isLoading ? (\n        <div className=\"space-y-4\">\n          {[...Array(5)].map((_, index) => (\n            <div key={index} className=\"animate-pulse flex items-center justify-between\">\n              <div className=\"space-y-2\">\n                <div className=\"h-4 bg-gray-200 rounded w-24\"></div>\n                <div className=\"h-3 bg-gray-200 rounded w-16\"></div>\n              </div>\n              <div className=\"h-4 bg-gray-200 rounded w-16\"></div>\n              <div className=\"h-6 bg-gray-200 rounded w-20\"></div>\n              <div className=\"h-8 bg-gray-200 rounded-full w-8\"></div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"overflow-hidden\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Order\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Customer\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Amount\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Date\n                </th>\n                <th scope=\"col\" className=\"relative px-4 py-3\">\n                  <span className=\"sr-only\">Actions</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {orders.map((order) => (\n                <tr\n                  key={order.id}\n                  className=\"hover:bg-gray-50 cursor-pointer\"\n                  onClick={() => navigateToOrderDetails(order.id)}\n                >\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                    #{order.id}\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {order.customer}\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-900\">\n                    ${order.amount.toLocaleString()}\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(order.status)}`}>\n                      {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                    </span>\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap text-sm text-gray-500\">\n                    {order.date}\n                  </td>\n                  <td className=\"px-4 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    <button\n                      onClick={(e) => handleViewOrder(order, e)}\n                      className=\"text-gray-500 hover:text-primary\"\n                    >\n                      <EyeIcon className=\"h-5 w-5\" />\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      {/* Order Details Modal */}\n      <OrderDetailsModal\n        order={selectedOrder}\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n      />\n    </Card>\n  );\n};\n\nexport default RecentOrders;\n","/**\n * Dashboard Hook\n * \n * This hook provides methods and state for working with dashboard data.\n */\n\nimport { useState, useCallback, useEffect } from 'react';\nimport type { DashboardStats } from '../types/index';\nimport dashboardApi from '../api/dashboardApi';\nimport useNotification from '../../../hooks/useNotification';\n\nexport const useDashboard = () => {\n  const [stats, setStats] = useState<DashboardStats | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const { showNotification } = useNotification();\n\n  // Fetch dashboard statistics\n  const fetchStats = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const data = await dashboardApi.getDashboardStats();\n      setStats(data);\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to fetch dashboard statistics'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [showNotification]);\n\n  // Fetch sales data for a specific period\n  const fetchSalesData = useCallback(async (period: 'day' | 'week' | 'month' | 'year') => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const data = await dashboardApi.getSalesData(period);\n      return data;\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: `Failed to fetch sales data for ${period}`\n      });\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [showNotification]);\n\n  // Fetch user growth data\n  const fetchUserGrowth = useCallback(async (period: 'week' | 'month' | 'year') => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const data = await dashboardApi.getUserGrowth(period);\n      return data;\n    } catch (err) {\n      setError(err as Error);\n      showNotification({\n        type: 'error',\n        title: 'Error',\n        message: `Failed to fetch user growth data for ${period}`\n      });\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [showNotification]);\n\n  // Load dashboard stats on mount\n  useEffect(() => {\n    fetchStats();\n  }, [fetchStats]);\n\n  return {\n    stats,\n    isLoading,\n    error,\n    fetchStats,\n    fetchSalesData,\n    fetchUserGrowth\n  };\n};\n\nexport default useDashboard;\n\n","/**\r\n * Dashboard Page\r\n *\r\n * The main dashboard page for the ConnectChain admin panel.\r\n */\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport PageHeader from '../components/layout/PageHeader';\r\nimport Card from '../components/common/Card';\r\nimport Button from '../components/common/Button';\r\nimport { formatCurrency } from '../utils/formatters';\r\nimport { mockDb } from '../mockData/db';\r\nimport { DashboardStats } from '../mockData/entities/dashboard';\r\nimport { defaultPieChartOptions, destroyChart } from '../utils/chartConfig';\r\nimport { Chart as ChartJS } from 'chart.js';\r\nimport useErrorHandler from '../hooks/useErrorHandler';\r\nimport { safeAsyncOperation, handleDataTransformationError } from '../utils/errorHandling';\r\nimport withErrorBoundary from '../components/common/withErrorBoundary';\r\nimport {\r\n  UsersIcon,\r\n  ShoppingCartIcon,\r\n  ClockIcon,\r\n  CurrencyDollarIcon,\r\n  ArrowDownTrayIcon,\r\n  DocumentChartBarIcon,\r\n  ArrowPathIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\n// Import dashboard feature components\r\nimport {\r\n  StatCard,\r\n  SalesChart,\r\n  UserGrowthChart,\r\n  RecentOrders\r\n} from '../features/dashboard/index';\r\n\r\nconst DashboardPage: React.FC = () => {\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [dashboardData, setDashboardData] = useState<DashboardStats | null>(null);\r\n  const [, setActiveTimeRange] = useState<'day' | 'week' | 'month' | 'year'>('month');\r\n  const pieChartRef = useRef<ChartJS | null>(null);\r\n\r\n  // Error handling\r\n  const {\r\n    handleGeneralError,\r\n    withErrorHandling,\r\n    clearError\r\n  } = useErrorHandler({\r\n    enableNotifications: true,\r\n    enableReporting: true\r\n  });\r\n\r\n  // Fetch dashboard data\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      clearError();\r\n\r\n      const result = await withErrorHandling(async () => {\r\n        // Simulate potential data transformation errors\r\n        const rawData = mockDb.getAll<DashboardStats, 'dashboardStats'>('dashboardStats')[0];\r\n\r\n        if (!rawData) {\r\n          throw new Error('No dashboard data available');\r\n        }\r\n\r\n        // Validate data structure\r\n        if (!rawData.summary || !rawData.revenueData || !rawData.userGrowth) {\r\n          const transformationError = handleDataTransformationError(\r\n            'Dashboard data',\r\n            new Error('Invalid dashboard data structure'),\r\n            rawData\r\n          );\r\n          throw transformationError;\r\n        }\r\n\r\n        setDashboardData(rawData);\r\n        return rawData;\r\n      }, 'Fetch dashboard data');\r\n\r\n      if (!result) {\r\n        console.error('Failed to fetch dashboard data');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    // Cleanup chart instances when component unmounts\r\n    return () => {\r\n      destroyChart(pieChartRef.current);\r\n    };\r\n  }, [withErrorHandling, clearError]);\r\n\r\n  // Handle refresh\r\n  const handleRefresh = async () => {\r\n    setIsRefreshing(true);\r\n\r\n    const result = await safeAsyncOperation(\r\n      async () => {\r\n        // Simulate data refresh with potential failure\r\n        await new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            if (Math.random() < 0.1) {\r\n              reject(new Error('Failed to refresh dashboard data'));\r\n            } else {\r\n              resolve(true);\r\n            }\r\n          }, 1500);\r\n        });\r\n\r\n        const data = mockDb.getAll<DashboardStats, 'dashboardStats'>('dashboardStats')[0];\r\n        if (data) {\r\n          setDashboardData(data);\r\n        }\r\n        return data;\r\n      },\r\n      {\r\n        timeout: 10000,\r\n        retries: 2,\r\n        operationName: 'Refresh Dashboard'\r\n      }\r\n    );\r\n\r\n    if (!result.success) {\r\n      handleGeneralError(result.error, 'Dashboard Refresh');\r\n    }\r\n\r\n    setIsRefreshing(false);\r\n  };\r\n\r\n  // If data is not loaded yet\r\n  if (!dashboardData) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        title=\"Dashboard\"\r\n        description=\"Welcome to ConnectChain Admin Dashboard\"\r\n        actions={\r\n          <div className=\"flex flex-wrap gap-3\">\r\n            <Button\r\n              variant=\"outline\"\r\n              icon={<ArrowDownTrayIcon className=\"h-5 w-5\" />}\r\n            >\r\n              Export Report\r\n            </Button>\r\n            <Button\r\n              icon={<DocumentChartBarIcon className=\"h-5 w-5\" />}\r\n            >\r\n              Generate Report\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              icon={<ArrowPathIcon className=\"h-5 w-5\" />}\r\n              onClick={handleRefresh}\r\n              loading={isRefreshing}\r\n            >\r\n              Refresh\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6\">\r\n        <StatCard\r\n          title=\"Total Users\"\r\n          value={dashboardData.summary.totalUsers.toLocaleString()}\r\n          icon={<UsersIcon className=\"w-6 h-6 text-primary\" />}\r\n          change={{ value: 12, isPositive: true }}\r\n          // onClick={() => console.log('Card clicked')}\r\n        />\r\n\r\n        <StatCard\r\n          title=\"Total Orders\"\r\n          value={dashboardData.summary.totalOrders.toLocaleString()}\r\n          icon={<ShoppingCartIcon className=\"w-6 h-6 text-blue-500\" />}\r\n          change={{ value: 8, isPositive: true }}\r\n        />\r\n\r\n        <StatCard\r\n          title=\"Pending Verifications\"\r\n          value={dashboardData.summary.pendingVerifications}\r\n          icon={<ClockIcon className=\"w-6 h-6 text-yellow-500\" />}\r\n          change={{ value: 3, isPositive: false }}\r\n        />\r\n\r\n        <StatCard\r\n          title=\"Revenue\"\r\n          value={formatCurrency(dashboardData.summary.totalRevenue)}\r\n          icon={<CurrencyDollarIcon className=\"w-6 h-6 text-green-500\" />}\r\n          change={{ value: 15, isPositive: true }}\r\n        />\r\n      </div>\r\n\r\n      {/* Charts */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\r\n        <SalesChart\r\n          data={dashboardData.revenueData.datasets[0]?.data.map((value, index) => ({\r\n            date: dashboardData.revenueData.labels[index] || '',\r\n            amount: value as number\r\n          })) || []}\r\n          onPeriodChange={(period) => setActiveTimeRange(period)}\r\n        />\r\n\r\n        <UserGrowthChart\r\n          data={dashboardData.userGrowth.datasets[0]?.data.map((value, index) => ({\r\n            date: dashboardData.userGrowth.labels[index] || '',\r\n            users: value as number\r\n          })) || []}\r\n          onPeriodChange={(period) => setActiveTimeRange(period)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n        <div className=\"lg:col-span-2\">\r\n          <RecentOrders\r\n            orders={dashboardData.recentOrders.map(order => ({\r\n              id: order.orderNumber,\r\n              customer: order.customerName,\r\n              amount: order.amount,\r\n              status: order.status as any,\r\n              date: order.date\r\n            }))}\r\n            onViewOrder={(orderId) => console.log('Order clicked:', orderId)}\r\n          />\r\n        </div>\r\n\r\n        <Card title=\"Category Distribution\">\r\n          <div className=\"h-80\">\r\n            <Pie\r\n              ref={(ref) => {\r\n                if (ref) {\r\n                  pieChartRef.current = ref;\r\n                }\r\n              }}\r\n              data={{\r\n                labels: dashboardData.categoryDistribution.labels,\r\n                datasets: dashboardData.categoryDistribution.datasets\r\n              }}\r\n              options={defaultPieChartOptions}\r\n            />\r\n          </div>\r\n          <div className=\"mt-4 space-y-2\">\r\n            {dashboardData.categoryDistribution.labels.map((label, index) => (\r\n              <div key={index} className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center\">\r\n                  <div\r\n                    className=\"w-3 h-3 rounded-full mr-2\"\r\n                    style={{ backgroundColor: dashboardData.categoryDistribution.datasets[0]?.backgroundColor?.[index] as string || '#ccc' }}\r\n                  ></div>\r\n                  <span className=\"text-sm text-gray-600\">{label}</span>\r\n                </div>\r\n                <span className=\"text-sm font-medium\">{dashboardData.categoryDistribution.datasets[0]?.data?.[index] || 0}%</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Wrap with error boundary\r\nexport default withErrorBoundary(DashboardPage, {\r\n  fallback: ({ error, resetError }) => (\r\n    <div className=\"flex flex-col items-center justify-center min-h-[400px] p-8\">\r\n      <div className=\"text-red-500 text-4xl mb-4\">📊</div>\r\n      <h2 className=\"text-xl font-semibold mb-2\">Dashboard Error</h2>\r\n      <p className=\"text-gray-600 mb-4 text-center max-w-md\">\r\n        {error.message || 'An error occurred while loading the dashboard'}\r\n      </p>\r\n      <button\r\n        onClick={resetError}\r\n        className=\"px-4 py-2 bg-primary text-white rounded hover:bg-primary-dark transition-colors\"\r\n      >\r\n        Reload Dashboard\r\n      </button>\r\n    </div>\r\n  ),\r\n  context: 'DashboardPage'\r\n});\r\n"],"names":["options","arguments","length","undefined","enableNotifications","enableReporting","onError","showNotification","useNotification","errorState","setErrorState","useState","hasError","error","errorType","clearError","useCallback","handleApiErrorWithState","context","apiError","handleApiError","notification","type","title","message","Error","reportError","handleValidationErrorWithState","field","code","validationError","handleValidationError","handleFormErrorWithState","setFieldError","handleFormError","handleGeneralError","errorObj","String","logError","withErrorHandling","async","operation","withFormErrorHandling","isApiError","isValidationError","PageHeader","_ref","description","actions","breadcrumbs","className","testId","_jsxs","children","_jsx","Link","to","HomeIcon","map","item","index","ChevronRightIcon","path","label","memo","Card","subtitle","bodyClassName","headerClassName","footerClassName","icon","footer","onClick","hoverable","noPadding","bordered","loading","cardClasses","headerClasses","bodyClasses","footerClasses","DefaultErrorFallback","resetError","withErrorBoundary","Component","config","fallback","FallbackComponent","WrappedComponent","forwardRef","props","ref","ErrorBoundary","window","location","reload","handleError","errorInfo","displayName","name","componentStack","errorBoundary","formatDate","dateString","date","Date","defaultOptions","year","month","day","Intl","DateTimeFormat","format","console","formatCurrency","amount","currency","locale","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","toFixed","Button","variant","size","disabled","iconPosition","fullWidth","rounded","href","target","rel","ariaLabel","buttonClasses","primary","secondary","outline","danger","success","text","link","xs","sm","md","lg","xl","content","_Fragment","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","getIconBackgroundClass","React","log","includes","value","change","isLoading","isPositive","iconElement","colorMatch","match","colorClass","Modal","isOpen","onClose","closeOnEsc","closeOnBackdropClick","showCloseButton","centered","backdropClassName","modalRef","useRef","useEffect","handleEscape","e","key","document","addEventListener","body","overflow","removeEventListener","current","focusableElements","querySelectorAll","firstElement","lastElement","handleTabKey","shiftKey","activeElement","focus","preventDefault","modalContent","Fragment","full","stopPropagation","XMarkIcon","createPortal","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","RadialLinearScale","Title","Tooltip","Legend","Filler","defaultLineChartOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","backgroundColor","titleColor","bodyColor","padding","displayColors","scales","x","grid","y","beginAtZero","color","defaultPieChartOptions","position","destroyChart","chartInstance","destroy","_defaultLineChartOpti","_defaultLineChartOpti2","data","onPeriodChange","activePeriod","setActivePeriod","chartRef","handlePeriodChange","period","chartData","labels","datasets","borderColor","tension","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointRadius","pointHoverRadius","callbacks","parsed","toLocaleString","ticks","callback","Line","showCard","users","chartContent","order","id","status","getStatusColorClass","ClockIcon","CheckCircleIcon","TruckIcon","XCircleIcon","getStatusIcon","charAt","toUpperCase","slice","UserIcon","customer","CalendarIcon","CurrencyDollarIcon","orders","onViewOrder","navigate","useNavigate","selectedOrder","setSelectedOrder","isModalOpen","setIsModalOpen","getStatusColor","ROUTES","ORDERS","Array","_","scope","navigateToOrderDetails","orderId","getOrderDetailsRoute","handleViewOrder","EyeIcon","OrderDetailsModal","DashboardPage","_dashboardData$revenu","_dashboardData$userGr","isRefreshing","setIsRefreshing","dashboardData","setDashboardData","setActiveTimeRange","pieChartRef","useErrorHandler","rawData","mockDb","getAll","summary","revenueData","userGrowth","handleDataTransformationError","fetchData","ArrowDownTrayIcon","DocumentChartBarIcon","ArrowPathIcon","result","safeAsyncOperation","Promise","resolve","reject","setTimeout","Math","random","timeout","retries","operationName","StatCard","totalUsers","UsersIcon","totalOrders","ShoppingCartIcon","pendingVerifications","totalRevenue","SalesChart","UserGrowthChart","RecentOrders","recentOrders","orderNumber","customerName","Pie","categoryDistribution","_dashboardData$catego","_dashboardData$catego2","_dashboardData$catego3","_dashboardData$catego4"],"sourceRoot":""}