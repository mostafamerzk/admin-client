{"version":3,"file":"static/js/638.7934e6aa.chunk.js","mappings":"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","sources":["hooks/useEntityData.ts","../node_modules/@heroicons/react/24/outline/esm/ClipboardDocumentListIcon.js","features/products/utils/productTransformers.ts","features/products/api/productsApi.ts","features/products/hooks/useProducts.ts","../node_modules/@heroicons/react/24/outline/esm/PhotoIcon.js","components/layout/PageHeader.tsx","components/common/Card.tsx","components/common/LoadingSpinner.tsx","../node_modules/@heroicons/react/24/outline/esm/ArrowLeftIcon.js","../node_modules/@heroicons/react/24/outline/esm/ChevronRightIcon.js","constants/endpoints.ts","components/common/Button.tsx","../node_modules/@heroicons/react/24/outline/esm/CubeIcon.js"],"sourcesContent":["import { useState, useCallback, useEffect, useRef } from 'react';\r\nimport useNotification from './useNotification';\r\n\r\nexport interface EntityApi<T, IdType = string> {\r\n  getAll: (params?: any) => Promise<T[]>;\r\n  getById: (id: IdType) => Promise<T>;\r\n  create: (data: any) => Promise<T>;\r\n  update: (id: IdType, data: any) => Promise<T>;\r\n  delete: (id: IdType) => Promise<void>;\r\n}\r\n\r\nexport interface UseEntityDataOptions {\r\n  entityName: string;\r\n  initialFetch?: boolean;\r\n}\r\n\r\nexport const useEntityData = <T, IdType = string>(\r\n  apiService: EntityApi<T, IdType>,\r\n  options: UseEntityDataOptions\r\n) => {\r\n  const [entities, setEntities] = useState<T[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<Error | null>(null);\r\n  const { showNotification } = useNotification();\r\n\r\n  // Use refs to store current values and avoid stale closures\r\n  const apiServiceRef = useRef(apiService);\r\n  const showNotificationRef = useRef(showNotification);\r\n  const entityNameRef = useRef(options.entityName);\r\n  const hasInitialFetched = useRef(false);\r\n\r\n  // Update refs when values change\r\n  useEffect(() => {\r\n    apiServiceRef.current = apiService;\r\n    showNotificationRef.current = showNotification;\r\n    entityNameRef.current = options.entityName;\r\n  });\r\n\r\n  const fetchEntities = useCallback(async (params?: any) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const data = await apiServiceRef.current.getAll(params);\r\n      setEntities(data);\r\n      return data;\r\n    } catch (err) {\r\n      const error = err as Error;\r\n      setError(error);\r\n      showNotificationRef.current({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: `Failed to fetch ${entityNameRef.current}`\r\n      });\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []); // No dependencies needed due to refs\r\n\r\n  const getEntityById = useCallback(async (id: IdType) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const entity = await apiServiceRef.current.getById(id);\r\n      return entity;\r\n    } catch (err) {\r\n      const error = err as Error;\r\n      setError(error);\r\n      showNotificationRef.current({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: `Failed to fetch ${entityNameRef.current}`\r\n      });\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []); // No dependencies needed due to refs\r\n\r\n  const createEntity = useCallback(async (data: any) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const newEntity = await apiServiceRef.current.create(data);\r\n      setEntities(prev => [...prev, newEntity]);\r\n      showNotificationRef.current({\r\n        type: 'success',\r\n        title: 'Success',\r\n        message: `${entityNameRef.current} created successfully`\r\n      });\r\n      return newEntity;\r\n    } catch (err) {\r\n      const error = err as Error;\r\n      setError(error);\r\n      showNotificationRef.current({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: `Failed to create ${entityNameRef.current}`\r\n      });\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const updateEntity = useCallback(async (id: IdType, data: any) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const updatedEntity = await apiServiceRef.current.update(id, data);\r\n      setEntities(prev => prev.map(entity =>\r\n        (entity as any).id === id ? updatedEntity : entity\r\n      ));\r\n      showNotificationRef.current({\r\n        type: 'success',\r\n        title: 'Success',\r\n        message: `${entityNameRef.current} updated successfully`\r\n      });\r\n      return updatedEntity;\r\n    } catch (err) {\r\n      const error = err as Error;\r\n      setError(error);\r\n      showNotificationRef.current({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: `Failed to update ${entityNameRef.current}`\r\n      });\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const deleteEntity = useCallback(async (id: IdType) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      await apiServiceRef.current.delete(id);\r\n      setEntities(prev => prev.filter(entity => (entity as any).id !== id));\r\n      showNotificationRef.current({\r\n        type: 'success',\r\n        title: 'Success',\r\n        message: `${entityNameRef.current} deleted successfully`\r\n      });\r\n    } catch (err) {\r\n      const error = err as Error;\r\n      setError(error);\r\n      showNotificationRef.current({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: `Failed to delete ${entityNameRef.current}`\r\n      });\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Initial fetch effect - runs only once\r\n  useEffect(() => {\r\n    if (options.initialFetch !== false && !hasInitialFetched.current) {\r\n      console.log(`[useEntityData] Starting initial fetch for ${options.entityName}`);\r\n      hasInitialFetched.current = true;\r\n\r\n      const initialFetch = async () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n          console.log(`[useEntityData] Calling API for ${options.entityName}`);\r\n          const data = await apiService.getAll();\r\n          console.log(`[useEntityData] Received data for ${options.entityName}:`, data);\r\n          setEntities(data);\r\n        } catch (err) {\r\n          const error = err as Error;\r\n          console.error(`[useEntityData] Error fetching ${options.entityName}:`, error);\r\n          setError(error);\r\n          showNotificationRef.current({\r\n            type: 'error',\r\n            title: 'Error',\r\n            message: `Failed to fetch ${options.entityName}`\r\n          });\r\n        } finally {\r\n          console.log(`[useEntityData] Finished fetch for ${options.entityName}`);\r\n          setIsLoading(false);\r\n        }\r\n      };\r\n\r\n      initialFetch();\r\n    }\r\n  }, [\r\n    apiService,\r\n    options.entityName,\r\n    options.initialFetch\r\n  ]); // Empty dependency array - runs only once on mount\r\n\r\n  return {\r\n    entities,\r\n    isLoading,\r\n    error,\r\n    fetchEntities,\r\n    getEntityById,\r\n    createEntity,\r\n    updateEntity,\r\n    deleteEntity,\r\n    setEntities // Expose setEntities for custom state updates\r\n  };\r\n};\r\n","import * as React from \"react\";\nfunction ClipboardDocumentListIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 0 0 2.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 0 0-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75 2.25 2.25 0 0 0-.1-.664m-5.8 0A2.251 2.251 0 0 1 13.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25ZM6.75 12h.008v.008H6.75V12Zm0 3h.008v.008H6.75V15Zm0 3h.008v.008H6.75V18Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClipboardDocumentListIcon);\nexport default ForwardRef;","/**\r\n * Product Data Transformers\r\n *\r\n * This file provides utilities for transforming data between backend and frontend formats.\r\n */\r\n\r\nimport type {\r\n  Product,\r\n  BackendProduct,\r\n  ProductFormData,\r\n  FrontendProductFormData,\r\n  ProductQueryParams,\r\n  ProductAttribute,\r\n  ProductVariant,\r\n  BackendProductAttribute,\r\n  BackendProductVariant,\r\n  ApiResponseWrapper,\r\n  PaginationInfo\r\n} from '../types';\r\n\r\n/**\r\n * Transform backend product attribute to frontend format\r\n */\r\nexport const transformAttributeFromBackend = (backendAttr: BackendProductAttribute): ProductAttribute => ({\r\n  id: backendAttr.id.toString(),\r\n  name: backendAttr.key, // Map 'key' to 'name' for frontend\r\n  value: backendAttr.value\r\n});\r\n\r\n/**\r\n * Transform frontend product attribute to backend format\r\n */\r\nexport const transformAttributeToBackend = (frontendAttr: ProductAttribute): { Key: string; Value: string } => ({\r\n  Key: frontendAttr.name, // Use 'name' from frontend\r\n  Value: frontendAttr.value\r\n});\r\n\r\n/**\r\n * Transform backend product variant to frontend format\r\n */\r\nexport const transformVariantFromBackend = (backendVariant: BackendProductVariant): ProductVariant => ({\r\n  id: backendVariant.id.toString(),\r\n  name: backendVariant.name,\r\n  type: backendVariant.type,\r\n  price: backendVariant.price,\r\n  stock: backendVariant.stock\r\n});\r\n\r\n/**\r\n * Transform frontend product variant to backend format\r\n */\r\nexport const transformVariantToBackend = (frontendVariant: ProductVariant): { Name: string; Type: string; CustomPrice: number; Stock: number } => ({\r\n  Name: frontendVariant.name,\r\n  Type: frontendVariant.type || 'Standard',\r\n  CustomPrice: frontendVariant.price,\r\n  Stock: frontendVariant.stock\r\n});\r\n\r\n/**\r\n * Transform backend product to frontend format\r\n */\r\nexport const transformProductFromBackend = (backendProduct: BackendProduct): Product => ({\r\n  id: backendProduct.id.toString(), // Convert number to string for frontend\r\n  name: backendProduct.name,\r\n  sku: backendProduct.sku,\r\n  category: backendProduct.category.name, // Extract category name\r\n  categoryId: backendProduct.categoryId,\r\n  price: backendProduct.price,\r\n  stock: backendProduct.stock,\r\n  minimumStock: backendProduct.minimumStock,\r\n  status: backendProduct.stock > 0 ? 'active' : 'out_of_stock', // Derive status from stock\r\n  description: backendProduct.description,\r\n  image: backendProduct.image,\r\n  images: backendProduct.images,\r\n  supplierId: backendProduct.supplierId,\r\n  customerId: backendProduct.customerId,\r\n  attributes: backendProduct.attributes?.map(transformAttributeFromBackend),\r\n  variants: backendProduct.variants?.map(transformVariantFromBackend),\r\n  reviews: backendProduct.reviews,\r\n  createdAt: backendProduct.createdAt,\r\n  updatedAt: backendProduct.updatedAt\r\n});\r\n\r\n/**\r\n * Transform frontend form data to backend format\r\n * Note: SKU is auto-generated by backend, so we don't send it\r\n */\r\nexport const transformFrontendFormToBackend = (formData: FrontendProductFormData): ProductFormData => ({\r\n  Name: formData.name,\r\n  Description: formData.description || undefined,\r\n  Price: formData.price,\r\n  Stock: formData.stock,\r\n  MinimumStock: formData.minimumStock,\r\n  CategoryId: formData.categoryId || 1, // Default to category 1 if not provided\r\n  SupplierId: formData.supplierId,\r\n  CustomerId: formData.customerId || undefined,\r\n  Attributes: formData.attributes?.map(attr => ({\r\n    Key: attr.name, // Use 'name' from frontend\r\n    Value: attr.value\r\n  })),\r\n  Variants: formData.variants?.map(variant => ({\r\n    Name: variant.name,\r\n    Type: variant.type || 'Standard',\r\n    CustomPrice: variant.price,\r\n    Stock: variant.stock\r\n  }))\r\n});\r\n\r\n/**\r\n * Transform backend form data (already in correct format)\r\n */\r\nexport const transformProductFormToBackend = (formData: ProductFormData): ProductFormData => formData;\r\n\r\n/**\r\n * Transform frontend query parameters to backend format\r\n */\r\nexport const transformQueryParamsToBackend = (params: ProductQueryParams): Record<string, any> => {\r\n  const backendParams: Record<string, any> = {};\r\n\r\n  if (params.page !== undefined) backendParams.page = params.page;\r\n  if (params.limit !== undefined) backendParams.limit = params.limit;\r\n  if (params.search !== undefined) backendParams.search = params.search;\r\n  if (params.category !== undefined) backendParams.category = params.category; // Now expects number\r\n  if (params.supplierId !== undefined) backendParams.supplierId = params.supplierId;\r\n  if (params.inStock !== undefined) backendParams.inStock = params.inStock;\r\n  if (params.sort !== undefined) backendParams.sort = params.sort;\r\n  if (params.order !== undefined) backendParams.order = params.order;\r\n\r\n  return backendParams;\r\n};\r\n\r\n/**\r\n * Transform backend products list response to frontend format\r\n */\r\nexport const transformProductsListResponse = (response: any): ApiResponseWrapper<Product[]> & { pagination?: PaginationInfo } => {\r\n  // Handle direct array response (fallback)\r\n  if (Array.isArray(response)) {\r\n    return {\r\n      success: true,\r\n      message: 'Products retrieved successfully',\r\n      data: response.map(transformProductFromBackend)\r\n    };\r\n  }\r\n\r\n  // Handle wrapped response with pagination\r\n  if (response.success !== undefined && response.data) {\r\n    return {\r\n      success: response.success,\r\n      message: response.message || 'Products retrieved successfully',\r\n      data: Array.isArray(response.data)\r\n        ? response.data.map(transformProductFromBackend)\r\n        : [],\r\n      pagination: response.pagination // Include pagination info\r\n    };\r\n  }\r\n\r\n  // Handle unexpected format\r\n  throw new Error('Invalid response format from products API');\r\n};\r\n\r\n/**\r\n * Transform backend product response to frontend format\r\n */\r\nexport const transformProductResponse = (response: any): Product => {\r\n  // Handle direct product response\r\n  if (response.id || response.Id) {\r\n    return transformProductFromBackend(response);\r\n  }\r\n\r\n  // Handle wrapped response\r\n  if (response.success && response.data) {\r\n    return transformProductFromBackend(response.data);\r\n  }\r\n\r\n  throw new Error('Invalid product response format');\r\n};\r\n\r\n/**\r\n * Validate backend response structure\r\n */\r\nexport const validateBackendResponse = <T>(response: any): ApiResponseWrapper<T> => {\r\n  if (!response) {\r\n    throw new Error('No response received from server');\r\n  }\r\n\r\n  if (response.success === false) {\r\n    throw new Error(response.message || 'Request failed');\r\n  }\r\n\r\n  if (response.success === undefined) {\r\n    // Handle direct data response (legacy)\r\n    return {\r\n      success: true,\r\n      message: 'Request successful',\r\n      data: response\r\n    };\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\n/**\r\n * Extract error message from backend response\r\n */\r\nexport const extractErrorMessage = (errorResponse: any): string => {\r\n  if (typeof errorResponse === 'string') {\r\n    return errorResponse;\r\n  }\r\n\r\n  if (errorResponse?.message) {\r\n    return errorResponse.message;\r\n  }\r\n\r\n  if (errorResponse?.error) {\r\n    return errorResponse.error;\r\n  }\r\n\r\n  if (errorResponse?.errors && Array.isArray(errorResponse.errors)) {\r\n    return errorResponse.errors.join(', ');\r\n  }\r\n\r\n  return 'An unexpected error occurred';\r\n};\r\n\r\n/**\r\n * Validate frontend form data\r\n */\r\nexport const validateFrontendFormData = (formData: Partial<FrontendProductFormData>): Record<string, string> => {\r\n  const errors: Record<string, string> = {};\r\n\r\n  if (!formData.name?.trim()) {\r\n    errors.name = 'Product name is required';\r\n  }\r\n\r\n  // SKU is auto-generated by backend, so no validation needed\r\n\r\n  if (!formData.category?.trim() && !formData.categoryId) {\r\n    errors.category = 'Category is required';\r\n  }\r\n\r\n  if (formData.price === undefined || formData.price < 0) {\r\n    errors.price = 'Valid price is required';\r\n  }\r\n\r\n  if (formData.stock === undefined || formData.stock < 0) {\r\n    errors.stock = 'Valid stock quantity is required';\r\n  }\r\n\r\n  if (formData.minimumStock === undefined || formData.minimumStock < 0) {\r\n    errors.minimumStock = 'Valid minimum stock is required';\r\n  }\r\n\r\n  if (formData.stock !== undefined && formData.minimumStock !== undefined && formData.stock < formData.minimumStock) {\r\n    errors.stock = 'Stock cannot be less than minimum stock';\r\n  }\r\n\r\n  if (!formData.supplierId?.trim()) {\r\n    errors.supplierId = 'Supplier is required';\r\n  }\r\n\r\n  // Validate GUID format for supplier ID\r\n  const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n  if (formData.supplierId && !guidRegex.test(formData.supplierId)) {\r\n    errors.supplierId = 'Supplier ID must be a valid GUID format';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\n/**\r\n * Validate product form data (backend format)\r\n */\r\nexport const validateProductFormData = (formData: Partial<ProductFormData>): Record<string, string> => {\r\n  const errors: Record<string, string> = {};\r\n\r\n  if (!formData.Name?.trim()) {\r\n    errors.Name = 'Product name is required';\r\n  }\r\n\r\n  if (!formData.CategoryId || formData.CategoryId <= 0) {\r\n    errors.CategoryId = 'Category is required';\r\n  }\r\n\r\n  if (formData.Price === undefined || formData.Price < 0) {\r\n    errors.Price = 'Valid price is required';\r\n  }\r\n\r\n  if (formData.Stock === undefined || formData.Stock < 0) {\r\n    errors.Stock = 'Valid stock quantity is required';\r\n  }\r\n\r\n  if (formData.MinimumStock === undefined || formData.MinimumStock < 0) {\r\n    errors.MinimumStock = 'Valid minimum stock is required';\r\n  }\r\n\r\n  if (formData.Stock !== undefined && formData.MinimumStock !== undefined && formData.Stock < formData.MinimumStock) {\r\n    errors.Stock = 'Stock cannot be less than minimum stock';\r\n  }\r\n\r\n  if (!formData.SupplierId?.trim()) {\r\n    errors.SupplierId = 'Supplier is required';\r\n  }\r\n\r\n  // Validate GUID format for supplier ID\r\n  const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n  if (formData.SupplierId && !guidRegex.test(formData.SupplierId)) {\r\n    errors.SupplierId = 'Supplier ID must be a valid GUID format';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\n// Export all transformers\r\nexport default {\r\n  transformProductFromBackend,\r\n  transformProductFormToBackend,\r\n  transformFrontendFormToBackend,\r\n  transformQueryParamsToBackend,\r\n  transformProductsListResponse,\r\n  transformProductResponse,\r\n  validateBackendResponse,\r\n  extractErrorMessage,\r\n  validateProductFormData,\r\n  validateFrontendFormData,\r\n  transformAttributeFromBackend,\r\n  transformAttributeToBackend,\r\n  transformVariantFromBackend,\r\n  transformVariantToBackend\r\n};\r\n","/**\r\n * Products API Service\r\n *\r\n * This file provides methods for interacting with the products API endpoints.\r\n */\r\n\r\nimport apiClient from '../../../api';\r\nimport { handleApiError } from '../../../utils/errorHandling';\r\nimport { ENDPOINTS } from '../../../constants/endpoints';\r\nimport type {\r\n  Product,\r\n  ProductFormData,\r\n  FrontendProductFormData,\r\n  ProductQueryParams,\r\n  ProductStatusUpdate,\r\n  ImageUploadData,\r\n  ImageDeletionData,\r\n  ApiResponseWrapper,\r\n  ProductsListResponse,\r\n  BackendProduct,\r\n  PaginationInfo\r\n} from '../types';\r\nimport {\r\n  transformFrontendFormToBackend,\r\n  transformProductsListResponse,\r\n  transformProductResponse,\r\n  transformQueryParamsToBackend,\r\n  validateBackendResponse,\r\n  extractErrorMessage\r\n} from '../utils/productTransformers';\r\n\r\n/**\r\n * Products API service with methods for managing product data\r\n */\r\nexport const productsApi = {\r\n  /**\r\n   * Get all products with optional filtering and pagination\r\n   * @param params - Optional query parameters for filtering products\r\n   * @returns Promise resolving to paginated product data with pagination info\r\n   */\r\n  getProducts: async (params?: ProductQueryParams): Promise<ApiResponseWrapper<Product[]> & { pagination?: PaginationInfo }> => {\r\n    try {\r\n      const backendParams = params ? transformQueryParamsToBackend(params) : {};\r\n      const response = await apiClient.get(ENDPOINTS.PRODUCTS.BASE, { params: backendParams });\r\n\r\n      // Handle API client error wrapper\r\n      if (response.error) {\r\n        throw new Error(response.error);\r\n      }\r\n\r\n      if (!response.data) {\r\n        throw new Error('No response data received');\r\n      }\r\n\r\n      // Validate and transform backend response\r\n      const validatedResponse = validateBackendResponse<BackendProduct[] | ProductsListResponse>(response.data);\r\n      return transformProductsListResponse(validatedResponse.data);\r\n    } catch (error: any) {\r\n      // Enhanced error handling for backend-specific errors\r\n      if (error.response?.data) {\r\n        const errorMessage = extractErrorMessage(error.response.data);\r\n        throw new Error(errorMessage);\r\n      }\r\n      throw handleApiError(error);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Get a product by ID\r\n   * @param id - The product ID (can be string or number, will convert to number for API)\r\n   * @returns Promise resolving to the product data\r\n   */\r\n  getProductById: async (id: string): Promise<Product> => {\r\n    try {\r\n      if (!id) {\r\n        throw new Error('Product ID is required');\r\n      }\r\n\r\n      // Use ID as-is for API call (backend expects string in URL)\r\n      const response = await apiClient.get(ENDPOINTS.PRODUCTS.DETAILS(id));\r\n\r\n      // Handle API client error wrapper\r\n      if (response.error) {\r\n        throw new Error(response.error);\r\n      }\r\n\r\n      if (!response.data) {\r\n        throw new Error('No response data received');\r\n      }\r\n\r\n      // Validate and transform backend response\r\n      const validatedResponse = validateBackendResponse<BackendProduct>(response.data);\r\n      return transformProductResponse(validatedResponse.data);\r\n    } catch (error: any) {\r\n      // Enhanced error handling for backend-specific errors\r\n      if (error.response?.data) {\r\n        const errorMessage = extractErrorMessage(error.response.data);\r\n        throw new Error(errorMessage);\r\n      }\r\n      throw handleApiError(error);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Create a new product\r\n   * @param productData - The product data to create (in backend format)\r\n   * @returns Promise resolving to the created product\r\n   */\r\n  createProduct: async (productData: ProductFormData): Promise<Product> => {\r\n    try {\r\n      // Data is already in backend format, no transformation needed\r\n      const response = await apiClient.post(ENDPOINTS.PRODUCTS.BASE, productData);\r\n\r\n      // Handle API client error wrapper\r\n      if (response.error) {\r\n        throw new Error(response.error);\r\n      }\r\n\r\n      if (!response.data) {\r\n        throw new Error('No response data received');\r\n      }\r\n\r\n      // Validate and transform backend response\r\n      const validatedResponse = validateBackendResponse<BackendProduct>(response.data);\r\n      return transformProductResponse(validatedResponse.data);\r\n    } catch (error: any) {\r\n      // Enhanced error handling for backend-specific errors\r\n      if (error.response?.data) {\r\n        const errorMessage = extractErrorMessage(error.response.data);\r\n        throw new Error(errorMessage);\r\n      }\r\n      throw handleApiError(error);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Create a new product from frontend form data\r\n   * @param frontendFormData - The frontend form data to create\r\n   * @returns Promise resolving to the created product\r\n   */\r\n  createProductFromFrontend: async (frontendFormData: FrontendProductFormData): Promise<Product> => {\r\n    try {\r\n      // Transform frontend data to backend format\r\n      const backendData = transformFrontendFormToBackend(frontendFormData);\r\n      return await productsApi.createProduct(backendData);\r\n    } catch (error) {\r\n      throw handleApiError(error);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Update a product\r\n   * @param id - The product ID\r\n   * @param productData - The product data to update (in backend format)\r\n   * @returns Promise resolving to the updated product\r\n   */\r\n  updateProduct: async (id: string, productData: Partial<ProductFormData>): Promise<Product> => {\r\n    try {\r\n      if (!id) {\r\n        throw new Error('Product ID is required');\r\n      }\r\n\r\n      // Data is already in backend format, no transformation needed\r\n      const response = await apiClient.put(ENDPOINTS.PRODUCTS.UPDATE(id), productData);\r\n\r\n      // Handle API client error wrapper\r\n      if (response.error) {\r\n        throw new Error(response.error);\r\n      }\r\n\r\n      if (!response.data) {\r\n        throw new Error('No response data received');\r\n      }\r\n\r\n      // Validate and transform backend response\r\n      const validatedResponse = validateBackendResponse<BackendProduct>(response.data);\r\n      return transformProductResponse(validatedResponse.data);\r\n    } catch (error: any) {\r\n      // Enhanced error handling for backend-specific errors\r\n      if (error.response?.data) {\r\n        const errorMessage = extractErrorMessage(error.response.data);\r\n        throw new Error(errorMessage);\r\n      }\r\n      throw handleApiError(error);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Update a product from frontend form data\r\n   * @param id - The product ID\r\n   * @param frontendFormData - The frontend form data to update\r\n   * @returns Promise resolving to the updated product\r\n   */\r\n  updateProductFromFrontend: async (id: string, frontendFormData: Partial<FrontendProductFormData>): Promise<Product> => {\r\n    try {\r\n      if (!id) {\r\n        throw new Error('Product ID is required');\r\n      }\r\n\r\n      // Transform frontend data to backend format\r\n      const backendData = transformFrontendFormToBackend(frontendFormData as FrontendProductFormData);\r\n      return await productsApi.updateProduct(id, backendData);\r\n    } catch (error) {\r\n      throw handleApiError(error);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Delete a product\r\n   * @param id - The product ID\r\n   * @returns Promise resolving when the product is deleted\r\n   */\r\n  deleteProduct: async (id: string): Promise<void> => {\r\n    try {\r\n      if (!id) {\r\n        throw new Error('Product ID is required');\r\n      }\r\n\r\n      const response = await apiClient.delete(ENDPOINTS.PRODUCTS.DELETE(id));\r\n\r\n      // Handle API client error wrapper\r\n      if (response.error) {\r\n        throw new Error(response.error);\r\n      }\r\n\r\n      // For delete operations, we don't expect data back\r\n      return;\r\n    } catch (error: any) {\r\n      // Enhanced error handling for backend-specific errors\r\n      if (error.response?.data) {\r\n        const errorMessage = extractErrorMessage(error.response.data);\r\n        throw new Error(errorMessage);\r\n      }\r\n      throw handleApiError(error);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Update product status\r\n   * @param id - The product ID\r\n   * @param status - The new status\r\n   * @returns Promise resolving when the status is updated\r\n   */\r\n  updateProductStatus: async (id: string, status: ProductStatusUpdate['status']): Promise<void> => {\r\n    try {\r\n      if (!id) {\r\n        throw new Error('Product ID is required');\r\n      }\r\n\r\n      const response = await apiClient.put(ENDPOINTS.PRODUCTS.STATUS(id), { status });\r\n\r\n      // Handle API client error wrapper\r\n      if (response.error) {\r\n        throw new Error(response.error);\r\n      }\r\n\r\n      // Status update doesn't return data\r\n      return;\r\n    } catch (error: any) {\r\n      // Enhanced error handling for backend-specific errors\r\n      if (error.response?.data) {\r\n        const errorMessage = extractErrorMessage(error.response.data);\r\n        throw new Error(errorMessage);\r\n      }\r\n      throw handleApiError(error);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Search products\r\n   * @param query - Search query\r\n   * @param params - Additional query parameters\r\n   * @returns Promise resolving to search results\r\n   */\r\n  searchProducts: async (query: string, params?: Omit<ProductQueryParams, 'search'>): Promise<ApiResponseWrapper<Product[]>> => {\r\n    try {\r\n      const searchParams = { ...params, search: query };\r\n      return await productsApi.getProducts(searchParams);\r\n    } catch (error) {\r\n      throw handleApiError(error);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Get products by supplier\r\n   * @param supplierId - The supplier ID\r\n   * @param params - Additional query parameters\r\n   * @returns Promise resolving to supplier's products\r\n   */\r\n  getProductsBySupplier: async (supplierId: string, params?: Omit<ProductQueryParams, 'supplierId'>): Promise<Product[]> => {\r\n    try {\r\n      if (!supplierId) {\r\n        throw new Error('Supplier ID is required');\r\n      }\r\n\r\n      const searchParams = { ...params, supplierId };\r\n      const response = await productsApi.getProducts(searchParams);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw handleApiError(error);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Get products by category\r\n   * @param categoryId - The category ID (number)\r\n   * @param params - Additional query parameters\r\n   * @returns Promise resolving to category products\r\n   */\r\n  getProductsByCategory: async (categoryId: number, params?: Omit<ProductQueryParams, 'category'>): Promise<Product[]> => {\r\n    try {\r\n      if (!categoryId) {\r\n        throw new Error('Category ID is required');\r\n      }\r\n\r\n      const searchParams = { ...params, category: categoryId };\r\n      const response = await productsApi.getProducts(searchParams);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw handleApiError(error);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Upload product images\r\n   * @param productId - The product ID\r\n   * @param files - Array of image files\r\n   * @returns Promise resolving to upload response\r\n   */\r\n  uploadProductImages: async (productId: string, files: File[]): Promise<ImageUploadData> => {\r\n    try {\r\n      if (!productId) {\r\n        throw new Error('Product ID is required');\r\n      }\r\n\r\n      if (!files || files.length === 0) {\r\n        throw new Error('At least one image file is required');\r\n      }\r\n\r\n      const formData = new FormData();\r\n      files.forEach((file) => {\r\n        formData.append(`images`, file);\r\n      });\r\n\r\n      const response = await apiClient.post(ENDPOINTS.PRODUCTS.UPLOAD_IMAGES(productId), formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      // Handle API client error wrapper\r\n      if (response.error) {\r\n        throw new Error(response.error);\r\n      }\r\n\r\n      if (!response.data) {\r\n        throw new Error('No response data received');\r\n      }\r\n\r\n      // Validate backend response\r\n      const validatedResponse = validateBackendResponse<ImageUploadData>(response.data);\r\n      return validatedResponse.data;\r\n    } catch (error: any) {\r\n      // Enhanced error handling for backend-specific errors\r\n      if (error.response?.data) {\r\n        const errorMessage = extractErrorMessage(error.response.data);\r\n        throw new Error(errorMessage);\r\n      }\r\n      throw handleApiError(error);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Delete a product image\r\n   * @param productId - The product ID\r\n   * @param imageUrl - The image URL to delete\r\n   * @returns Promise resolving to deletion response\r\n   */\r\n  deleteProductImage: async (productId: string, imageUrl: string): Promise<ImageDeletionData> => {\r\n    try {\r\n      if (!productId) {\r\n        throw new Error('Product ID is required');\r\n      }\r\n\r\n      if (!imageUrl) {\r\n        throw new Error('Image URL is required');\r\n      }\r\n\r\n      const response = await apiClient.delete(ENDPOINTS.PRODUCTS.DELETE_IMAGE(productId), {\r\n        data: {\r\n          imageUrl\r\n        }\r\n      });\r\n\r\n      // Handle API client error wrapper\r\n      if (response.error) {\r\n        throw new Error(response.error);\r\n      }\r\n\r\n      if (!response.data) {\r\n        throw new Error('No response data received');\r\n      }\r\n\r\n      // Validate backend response\r\n      const validatedResponse = validateBackendResponse<ImageDeletionData>(response.data);\r\n      return validatedResponse.data;\r\n    } catch (error: any) {\r\n      // Enhanced error handling for backend-specific errors\r\n      if (error.response?.data) {\r\n        const errorMessage = extractErrorMessage(error.response.data);\r\n        throw new Error(errorMessage);\r\n      }\r\n      throw handleApiError(error);\r\n    }\r\n  }\r\n};\r\n\r\n// Export individual methods for more flexible importing\r\nexport const {\r\n  getProducts,\r\n  getProductById,\r\n  createProduct,\r\n  createProductFromFrontend,\r\n  updateProduct,\r\n  updateProductFromFrontend,\r\n  deleteProduct,\r\n  updateProductStatus,\r\n  searchProducts,\r\n  getProductsBySupplier,\r\n  getProductsByCategory,\r\n  uploadProductImages,\r\n  deleteProductImage\r\n} = productsApi;\r\n\r\nexport default productsApi;\r\n","/**\r\n * Products Hook\r\n * \r\n * This hook provides methods and state for working with products.\r\n */\r\n\r\nimport { useCallback, useRef, useEffect } from 'react';\r\nimport { useEntityData } from '../../../hooks/useEntityData';\r\nimport productsApi from '../api/productsApi';\r\nimport type { Product, ProductFormData, ProductQueryParams, ImageUploadData, ImageDeletionData } from '../types';\r\nimport useNotification from '../../../hooks/useNotification';\r\nimport apiClient from '../../../api';\r\n\r\nexport const useProducts = (options = { initialFetch: true }) => {\r\n  // Clear any cached products data on hook initialization\r\n  useEffect(() => {\r\n    // Clear cache for products endpoint\r\n    apiClient.clearCache();\r\n  }, []);\r\n\r\n  // Create an adapter that maps productsApi methods to what useEntityData expects\r\n  const apiAdapter = {\r\n    getAll: async () => {\r\n      const response = await productsApi.getProducts();\r\n      return response.data; // Extract just the data array for useEntityData\r\n    },\r\n    getById: productsApi.getProductById,\r\n    create: productsApi.createProduct,\r\n    update: productsApi.updateProduct,\r\n    delete: productsApi.deleteProduct\r\n  };\r\n\r\n  const baseHook = useEntityData<Product>(apiAdapter, {\r\n    entityName: 'products',\r\n    initialFetch: options.initialFetch\r\n  });\r\n\r\n  // Use refs to store stable references to notification functions\r\n  const { showNotification } = useNotification();\r\n  const showNotificationRef = useRef(showNotification);\r\n\r\n  // Update ref when function changes\r\n  useEffect(() => {\r\n    showNotificationRef.current = showNotification;\r\n  }, [showNotification]);\r\n\r\n  // Update product status\r\n  const updateProductStatus = useCallback(async (id: string, status: 'active' | 'inactive' | 'out_of_stock') => {\r\n    try {\r\n      await productsApi.updateProductStatus(id, status);\r\n\r\n      // Update the local state manually\r\n      baseHook.setEntities(prev => prev.map(product =>\r\n        product.id === id ? { ...product, status } : product\r\n      ));\r\n\r\n      showNotificationRef.current({\r\n        type: 'success',\r\n        title: 'Success',\r\n        message: 'Product status updated successfully'\r\n      });\r\n    } catch (error) {\r\n      showNotificationRef.current({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to update product status'\r\n      });\r\n      throw error;\r\n    }\r\n  }, [baseHook]);\r\n\r\n  // Update product with enhanced error handling\r\n  const updateProduct = useCallback(async (id: string, productData: Partial<ProductFormData>) => {\r\n    try {\r\n      const updatedProduct = await productsApi.updateProduct(id, productData);\r\n\r\n      // Update the local state manually\r\n      baseHook.setEntities(prev => prev.map(product =>\r\n        product.id === id ? updatedProduct : product\r\n      ));\r\n\r\n      showNotificationRef.current({\r\n        type: 'success',\r\n        title: 'Success',\r\n        message: 'Product updated successfully'\r\n      });\r\n\r\n      return updatedProduct;\r\n    } catch (error) {\r\n      showNotificationRef.current({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to update product'\r\n      });\r\n      throw error;\r\n    }\r\n  }, [baseHook]);\r\n\r\n  // Create product with enhanced error handling\r\n  const createProduct = useCallback(async (productData: ProductFormData) => {\r\n    try {\r\n      const newProduct = await productsApi.createProduct(productData);\r\n\r\n      // Add to local state manually\r\n      baseHook.setEntities(prev => [...prev, newProduct]);\r\n\r\n      showNotificationRef.current({\r\n        type: 'success',\r\n        title: 'Success',\r\n        message: 'Product created successfully'\r\n      });\r\n\r\n      return newProduct;\r\n    } catch (error) {\r\n      showNotificationRef.current({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to create product'\r\n      });\r\n      throw error;\r\n    }\r\n  }, [baseHook]);\r\n\r\n  // Delete product with enhanced error handling\r\n  const deleteProduct = useCallback(async (id: string) => {\r\n    try {\r\n      await productsApi.deleteProduct(id);\r\n\r\n      // Remove from local state manually\r\n      baseHook.setEntities(prev => prev.filter(product => product.id !== id));\r\n\r\n      showNotificationRef.current({\r\n        type: 'success',\r\n        title: 'Success',\r\n        message: 'Product deleted successfully'\r\n      });\r\n    } catch (error) {\r\n      showNotificationRef.current({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to delete product'\r\n      });\r\n      throw error;\r\n    }\r\n  }, [baseHook]);\r\n\r\n  // Search products with pagination support\r\n  const searchProducts = useCallback(async (query: string, params?: Omit<ProductQueryParams, 'search'>) => {\r\n    try {\r\n      return await productsApi.searchProducts(query, params);\r\n    } catch (error) {\r\n      showNotificationRef.current({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to search products'\r\n      });\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Get products with pagination\r\n  const getProductsWithPagination = useCallback(async (params?: ProductQueryParams) => {\r\n    try {\r\n      return await productsApi.getProducts(params);\r\n    } catch (error) {\r\n      showNotificationRef.current({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to fetch products'\r\n      });\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Get products by supplier\r\n  const getProductsBySupplier = useCallback(async (supplierId: string, params?: Omit<ProductQueryParams, 'supplierId'>) => {\r\n    try {\r\n      return await productsApi.getProductsBySupplier(supplierId, params);\r\n    } catch (error) {\r\n      showNotificationRef.current({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to fetch supplier products'\r\n      });\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Get products by category\r\n  const getProductsByCategory = useCallback(async (categoryId: number, params?: Omit<ProductQueryParams, 'category'>) => {\r\n    try {\r\n      return await productsApi.getProductsByCategory(categoryId, params);\r\n    } catch (error) {\r\n      showNotificationRef.current({\r\n        type: 'error',\r\n        title: 'Error',\r\n        message: 'Failed to fetch category products'\r\n      });\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Upload product images\r\n  const uploadProductImages = useCallback(async (productId: string, files: File[], showNotifications: boolean = true): Promise<ImageUploadData> => {\r\n    try {\r\n      const result = await productsApi.uploadProductImages(productId, files);\r\n\r\n      if (showNotifications) {\r\n        showNotificationRef.current({\r\n          type: 'success',\r\n          title: 'Success',\r\n          message: 'Product images uploaded successfully'\r\n        });\r\n      }\r\n\r\n      return result;\r\n    } catch (error) {\r\n      if (showNotifications) {\r\n        showNotificationRef.current({\r\n          type: 'error',\r\n          title: 'Error',\r\n          message: 'Failed to upload product images'\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Delete product image\r\n  const deleteProductImage = useCallback(async (productId: string, imageUrl: string, showNotifications: boolean = true): Promise<ImageDeletionData> => {\r\n    try {\r\n      const result = await productsApi.deleteProductImage(productId, imageUrl);\r\n\r\n      if (showNotifications) {\r\n        showNotificationRef.current({\r\n          type: 'success',\r\n          title: 'Success',\r\n          message: 'Product image deleted successfully'\r\n        });\r\n      }\r\n\r\n      return result;\r\n    } catch (error) {\r\n      if (showNotifications) {\r\n        showNotificationRef.current({\r\n          type: 'error',\r\n          title: 'Error',\r\n          message: 'Failed to delete product image'\r\n        });\r\n      }\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  return {\r\n    ...baseHook,\r\n    products: baseHook.entities as Product[], // Rename for clarity\r\n    fetchProducts: baseHook.fetchEntities, // Rename for clarity\r\n    getProductById: baseHook.getEntityById, // Rename for clarity\r\n    createEntity: createProduct, // Expose create method\r\n    deleteEntity: deleteProduct, // Expose delete method\r\n    updateProductStatus, // Product-specific status update\r\n    updateProduct, // Enhanced update method\r\n    createProduct, // Enhanced create method\r\n    deleteProduct, // Enhanced delete method\r\n    searchProducts, // Search method\r\n    getProductsWithPagination, // Pagination method\r\n    getProductsBySupplier, // Supplier filter method\r\n    getProductsByCategory, // Category filter method\r\n    uploadProductImages, // Image upload method\r\n    deleteProductImage // Image deletion method\r\n  };\r\n};\r\n\r\nexport default useProducts;\r\n","import * as React from \"react\";\nfunction PhotoIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PhotoIcon);\nexport default ForwardRef;","/**\r\n * PageHeader Component\r\n * \r\n * A consistent header component for pages with title, description, and actions.\r\n */\r\n\r\nimport React, { memo } from 'react';\r\nimport type { ReactNode } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ChevronRightIcon, HomeIcon } from '@heroicons/react/24/outline';\r\n\r\nexport interface BreadcrumbItem {\r\n  label: string;\r\n  path?: string;\r\n}\r\n\r\nexport interface PageHeaderProps {\r\n  title: string;\r\n  description?: string | ReactNode;\r\n  actions?: ReactNode;\r\n  breadcrumbs?: BreadcrumbItem[];\r\n  className?: string;\r\n  testId?: string;\r\n}\r\n\r\nconst PageHeader: React.FC<PageHeaderProps> = ({\r\n  title,\r\n  description,\r\n  actions,\r\n  breadcrumbs,\r\n  className = '',\r\n  testId,\r\n}) => {\r\n  return (\r\n    <div \r\n      className={`mb-6 ${className}`}\r\n      data-testid={testId}\r\n    >\r\n      {/* Breadcrumbs */}\r\n      {breadcrumbs && breadcrumbs.length > 0 && (\r\n        <nav className=\"flex mb-4\" aria-label=\"Breadcrumb\">\r\n          <ol className=\"flex items-center space-x-1 text-sm text-gray-500\">\r\n            <li>\r\n              <Link \r\n                to=\"/\" \r\n                className=\"flex items-center hover:text-primary\"\r\n                aria-label=\"Home\"\r\n              >\r\n                <HomeIcon className=\"h-4 w-4\" />\r\n              </Link>\r\n            </li>\r\n            \r\n            {breadcrumbs.map((item, index) => (\r\n              <li key={index} className=\"flex items-center\">\r\n                <ChevronRightIcon className=\"h-4 w-4 mx-1 text-gray-400\" />\r\n                {item.path && index < breadcrumbs.length - 1 ? (\r\n                  <Link \r\n                    to={item.path} \r\n                    className=\"hover:text-primary\"\r\n                  >\r\n                    {item.label}\r\n                  </Link>\r\n                ) : (\r\n                  <span className=\"font-medium text-gray-700\">{item.label}</span>\r\n                )}\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </nav>\r\n      )}\r\n      \r\n      {/* Header Content */}\r\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-800\">{title}</h1>\r\n          {description && typeof description === 'string' ? (\r\n            <p className=\"mt-1 text-sm text-gray-500\">{description}</p>\r\n          ) : (\r\n            description\r\n          )}\r\n        </div>\r\n        \r\n        {actions && (\r\n          <div className=\"flex flex-wrap gap-3 mt-2 sm:mt-0\">\r\n            {actions}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(PageHeader);\r\n","/**\r\n * Card Component\r\n *\r\n * A reusable card component for displaying content in a contained box.\r\n */\r\n\r\nimport React, { memo } from 'react';\r\nimport type { ReactNode } from 'react';\r\n\r\nexport interface CardProps {\r\n  title?: string | ReactNode;\r\n  subtitle?: string | ReactNode;\r\n  children: ReactNode;\r\n  className?: string;\r\n  bodyClassName?: string;\r\n  headerClassName?: string;\r\n  footerClassName?: string;\r\n  icon?: ReactNode;\r\n  footer?: ReactNode;\r\n  onClick?: () => void;\r\n  hoverable?: boolean;\r\n  noPadding?: boolean;\r\n  bordered?: boolean;\r\n  loading?: boolean;\r\n  testId?: string;\r\n}\r\n\r\nconst Card: React.FC<CardProps> = ({\r\n  title,\r\n  subtitle,\r\n  children,\r\n  className = '',\r\n  bodyClassName = '',\r\n  headerClassName = '',\r\n  footerClassName = '',\r\n  icon,\r\n  footer,\r\n  onClick,\r\n  hoverable = false,\r\n  noPadding = false,\r\n  bordered = true,\r\n  loading = false,\r\n  testId,\r\n}) => {\r\n  // Base classes\r\n  const cardClasses = `\r\n    bg-white rounded-xl ${bordered ? 'border border-gray-100' : ''} overflow-hidden transition-all duration-300\r\n    ${hoverable ? 'hover:shadow-md hover:border-gray-200 transform hover:-translate-y-1' : 'shadow-sm'}\r\n    ${onClick ? 'cursor-pointer' : ''}\r\n    ${className}\r\n  `;\r\n\r\n  // Header classes\r\n  const headerClasses = `\r\n    px-6 py-4 border-b border-gray-100 flex items-center justify-between\r\n    ${headerClassName}\r\n  `;\r\n\r\n  // Body classes\r\n  const bodyClasses = `\r\n    ${noPadding ? '' : 'p-6'}\r\n    ${bodyClassName}\r\n  `;\r\n\r\n  // Footer classes\r\n  const footerClasses = `\r\n    px-6 py-4 bg-gray-50 border-t border-gray-100\r\n    ${footerClassName}\r\n  `;\r\n\r\n  // Loading skeleton\r\n  if (loading) {\r\n    return (\r\n      <div className={cardClasses} data-testid={testId}>\r\n        {(title || subtitle || icon) && (\r\n          <div className={headerClasses}>\r\n            <div className=\"w-full\">\r\n              {title && <div className=\"h-6 bg-gray-200 rounded w-1/3 animate-pulse\"></div>}\r\n              {subtitle && <div className=\"h-4 mt-2 bg-gray-200 rounded w-1/2 animate-pulse\"></div>}\r\n            </div>\r\n            {icon && <div className=\"h-8 w-8 bg-gray-200 rounded-full animate-pulse\"></div>}\r\n          </div>\r\n        )}\r\n\r\n        <div className={bodyClasses}>\r\n          <div className=\"h-24 bg-gray-200 rounded animate-pulse\"></div>\r\n        </div>\r\n\r\n        {footer && (\r\n          <div className={footerClasses}>\r\n            <div className=\"h-8 bg-gray-200 rounded w-1/4 animate-pulse\"></div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={cardClasses}\r\n      onClick={onClick}\r\n      data-testid={testId}\r\n    >\r\n      {(title || subtitle || icon) && (\r\n        <div className={headerClasses}>\r\n          <div>\r\n            {typeof title === 'string' ? (\r\n              <h3 className=\"text-lg font-semibold text-primary\">{title}</h3>\r\n            ) : (\r\n              title\r\n            )}\r\n            {typeof subtitle === 'string' ? (\r\n              <p className=\"mt-1 text-sm text-gray-500\">{subtitle}</p>\r\n            ) : (\r\n              subtitle\r\n            )}\r\n          </div>\r\n          {icon && <div className=\"text-primary\">{icon}</div>}\r\n        </div>\r\n      )}\r\n\r\n      <div className={bodyClasses}>{children}</div>\r\n\r\n      {footer && (\r\n        <div className={footerClasses}>\r\n          {footer}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Card);\r\n","// src/components/common/LoadingSpinner.tsx\r\nimport React from 'react';\r\nimport './LoadingSpinner.css';\r\n\r\ninterface LoadingSpinnerProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n  className?: string;\r\n  variant?: 'spinner' | 'dots' | 'pulse' | 'ripple';\r\n  color?: string;\r\n  useCurrentColor?: boolean;\r\n}\r\n\r\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\r\n  size = 'md',\r\n  className = '',\r\n  variant = 'spinner',\r\n  color = '#F28B22', // Primary color\r\n  useCurrentColor = false\r\n}) => {\r\n  const sizeMap = {\r\n    sm: { spinner: 'w-5 h-5', dots: 'w-1 h-1', pulse: 'w-4 h-4', ripple: 'w-6 h-6' },\r\n    md: { spinner: 'w-8 h-8', dots: 'w-1.5 h-1.5', pulse: 'w-6 h-6', ripple: 'w-10 h-10' },\r\n    lg: { spinner: 'w-12 h-12', dots: 'w-2 h-2', pulse: 'w-8 h-8', ripple: 'w-16 h-16' }\r\n  };\r\n\r\n  const currentColor = useCurrentColor ? 'currentColor' : color;\r\n\r\n  // Simple rotating ring spinner\r\n  if (variant === 'spinner') {\r\n    return (\r\n      <div\r\n        className={`flex justify-center items-center ${className}`}\r\n        role=\"status\"\r\n        aria-label=\"Loading\"\r\n      >\r\n        <div\r\n          className={`spinner-smooth rounded-full border-2 border-gray-200 ${sizeMap[size].spinner}`}\r\n          style={{\r\n            borderTopColor: currentColor,\r\n            borderRightColor: currentColor,\r\n          }}\r\n        />\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Three bouncing dots\r\n  if (variant === 'dots') {\r\n    return (\r\n      <div\r\n        className={`flex justify-center items-center space-x-1 dots-bounce ${className}`}\r\n        role=\"status\"\r\n        aria-label=\"Loading\"\r\n      >\r\n        <div\r\n          className={`${sizeMap[size].dots} rounded-full dot`}\r\n          style={{ backgroundColor: currentColor }}\r\n        />\r\n        <div\r\n          className={`${sizeMap[size].dots} rounded-full dot`}\r\n          style={{ backgroundColor: currentColor }}\r\n        />\r\n        <div\r\n          className={`${sizeMap[size].dots} rounded-full dot`}\r\n          style={{ backgroundColor: currentColor }}\r\n        />\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Pulsing circle\r\n  if (variant === 'pulse') {\r\n    return (\r\n      <div\r\n        className={`flex justify-center items-center ${className}`}\r\n        role=\"status\"\r\n        aria-label=\"Loading\"\r\n      >\r\n        <div\r\n          className={`${sizeMap[size].pulse} rounded-full pulse-smooth`}\r\n          style={{ backgroundColor: currentColor }}\r\n        />\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Ripple effect\r\n  if (variant === 'ripple') {\r\n    return (\r\n      <div\r\n        className={`flex justify-center items-center ${className}`}\r\n        role=\"status\"\r\n        aria-label=\"Loading\"\r\n      >\r\n        <div\r\n          className={`${sizeMap[size].ripple} rounded-full ripple-effect`}\r\n          style={{ color: currentColor }}\r\n        >\r\n          <div\r\n            className={`${sizeMap[size].pulse} rounded-full pulse-smooth mx-auto`}\r\n            style={{ backgroundColor: currentColor }}\r\n          />\r\n        </div>\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default LoadingSpinner;","import * as React from \"react\";\nfunction ArrowLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChevronRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m8.25 4.5 7.5 7.5-7.5 7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","/**\r\n * API Endpoints\r\n * \r\n * This file contains constants for all API endpoints.\r\n */\r\n\r\nexport const ENDPOINTS = {\r\n  // Auth endpoints\r\n  AUTH: {\r\n    LOGIN: '/auth/login',\r\n    LOGOUT: '/auth/logout',\r\n    CURRENT_USER: '/auth/me',\r\n    FORGOT_PASSWORD: '/auth/forgot-password',\r\n    RESET_PASSWORD: '/auth/reset-password',\r\n  },\r\n  \r\n  // User endpoints\r\n  USERS: {\r\n    BASE: '/users',\r\n    DETAILS: (id: string) => `/users/${id}`,\r\n    STATUS: (id: string) => `/users/${id}/status`,\r\n    BAN: (id: string) => `/users/${id}/ban`,\r\n    UNBAN: (id: string) => `/users/${id}/unban`,\r\n    UPLOAD_IMAGE: '/users/upload-image',\r\n  },\r\n  \r\n  // Supplier endpoints\r\n  SUPPLIERS: {\r\n    BASE: '/suppliers',\r\n    DETAILS: (id: string) => `/suppliers/${id}`,\r\n    VERIFY: (id: string) => `/suppliers/${id}/verify`,\r\n    REJECT: (id: string) => `/suppliers/${id}/reject`,\r\n    PRODUCTS: (id: string) => `/suppliers/${id}/products`,\r\n  },\r\n\r\n  // Product endpoints\r\n  PRODUCTS: {\r\n    BASE: '/products',\r\n    DETAILS: (id: string) => `/products/${id}`,\r\n    UPDATE: (id: string) => `/products/${id}`,\r\n    DELETE: (id: string) => `/products/${id}`,\r\n    STATUS: (id: string) => `/products/${id}/status`,\r\n    UPLOAD_IMAGES: (id: string) => `/products/${id}/images`,\r\n    DELETE_IMAGE: (productId: string) => `/products/${productId}/images`,\r\n    VARIANTS: (id: string) => `/products/${id}/variants`,\r\n    SEARCH: '/products/search'\r\n  },\r\n  \r\n  // Category endpoints\r\n  CATEGORIES: {\r\n    BASE: '/categories',\r\n    DETAILS: (id: string) => `/categories/${id}`,\r\n    PRODUCTS: (id: string) => `/categories/${id}/products`,\r\n  },\r\n\r\n  // Business Types endpoints\r\n  BUSINESS_TYPES: {\r\n    BASE: '/business-types',\r\n  },\r\n  \r\n  // Order endpoints\r\n  ORDERS: {\r\n    BASE: '/orders',\r\n    DETAILS: (id: string) => `/orders/${id}`,\r\n    APPROVE: (id: string) => `/orders/${id}/approve`,\r\n    REJECT: (id: string) => `/orders/${id}/reject`,\r\n    COMPLETE: (id: string) => `/orders/${id}/complete`,\r\n  },\r\n  \r\n  // Dashboard endpoints\r\n  DASHBOARD: {\r\n    STATS: '/dashboard/stats',\r\n    SALES: '/dashboard/sales',\r\n    USER_GROWTH: '/dashboard/user-growth',\r\n    CATEGORY_DISTRIBUTION: '/dashboard/category-distribution',\r\n    RECENT_ORDERS: '/dashboard/recent-orders',\r\n    SALES_CHART: '/dashboard/sales-chart',\r\n  },\r\n};\r\n","/**\r\n * Button Component\r\n * \r\n * A reusable button component with various styles and states.\r\n */\r\n\r\nimport React, { memo } from 'react';\r\nimport type { ReactNode } from 'react';\r\n\r\nexport type ButtonVariant = 'primary' | 'secondary' | 'outline' | 'danger' | 'success' | 'text' | 'link';\r\nexport type ButtonSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\n\r\nexport interface ButtonProps {\r\n  children: ReactNode;\r\n  variant?: ButtonVariant;\r\n  size?: ButtonSize;\r\n  className?: string;\r\n  onClick?: () => void;\r\n  disabled?: boolean;\r\n  type?: 'button' | 'submit' | 'reset';\r\n  icon?: ReactNode;\r\n  iconPosition?: 'left' | 'right';\r\n  fullWidth?: boolean;\r\n  loading?: boolean;\r\n  rounded?: boolean;\r\n  href?: string;\r\n  target?: string;\r\n  rel?: string;\r\n  title?: string;\r\n  ariaLabel?: string;\r\n  testId?: string;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  children,\r\n  variant = 'primary',\r\n  size = 'md',\r\n  className = '',\r\n  onClick,\r\n  disabled = false,\r\n  type = 'button',\r\n  icon,\r\n  iconPosition = 'left',\r\n  fullWidth = false,\r\n  loading = false,\r\n  rounded = false,\r\n  href,\r\n  target,\r\n  rel,\r\n  title,\r\n  ariaLabel,\r\n  testId,\r\n}) => {\r\n  const baseClasses = 'inline-flex items-center justify-center font-medium transition-all duration-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2';\r\n  \r\n  const variantClasses = {\r\n    primary: 'bg-primary text-white hover:bg-primary/90 focus-visible:ring-primary',\r\n    secondary: 'bg-gray-200 text-gray-800 hover:bg-gray-300 focus-visible:ring-gray-300',\r\n    outline: 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 focus-visible:ring-primary',\r\n    danger: 'bg-red-600 text-white hover:bg-red-700 focus-visible:ring-red-500',\r\n    success: 'bg-green-600 text-white hover:bg-green-700 focus-visible:ring-green-500',\r\n    text: 'bg-transparent text-primary hover:bg-gray-100 focus-visible:ring-primary',\r\n    link: 'bg-transparent text-primary hover:underline focus-visible:ring-transparent p-0',\r\n  };\r\n  \r\n  const sizeClasses = {\r\n    xs: 'text-xs px-2 py-1',\r\n    sm: 'text-xs px-3 py-1.5',\r\n    md: 'text-sm px-4 py-2',\r\n    lg: 'text-base px-5 py-2.5',\r\n    xl: 'text-lg px-6 py-3',\r\n  };\r\n  \r\n  const disabledClasses = disabled ? 'opacity-60 cursor-not-allowed' : 'cursor-pointer';\r\n  const widthClass = fullWidth ? 'w-full' : '';\r\n  const roundedClass = rounded ? 'rounded-full' : 'rounded-lg';\r\n  \r\n  const buttonClasses = `\r\n    ${baseClasses}\r\n    ${variantClasses[variant]}\r\n    ${sizeClasses[size]}\r\n    ${disabledClasses}\r\n    ${widthClass}\r\n    ${roundedClass}\r\n    ${className}\r\n  `;\r\n  \r\n  const content = (\r\n    <>\r\n      {loading && (\r\n        <svg\r\n          className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-current\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <circle\r\n            className=\"opacity-25\"\r\n            cx=\"12\"\r\n            cy=\"12\"\r\n            r=\"10\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"4\"\r\n          />\r\n          <path\r\n            className=\"opacity-75\"\r\n            fill=\"currentColor\"\r\n            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n          />\r\n        </svg>\r\n      )}\r\n\r\n      {icon && iconPosition === 'left' && !loading && (\r\n        <span className=\"mr-2\">{icon}</span>\r\n      )}\r\n\r\n      {children}\r\n\r\n      {icon && iconPosition === 'right' && (\r\n        <span className=\"ml-2\">{icon}</span>\r\n      )}\r\n    </>\r\n  );\r\n  \r\n  // If href is provided, render an anchor tag\r\n  if (href) {\r\n    return (\r\n      <a\r\n        href={href}\r\n        className={buttonClasses}\r\n        target={target}\r\n        rel={rel || (target === '_blank' ? 'noopener noreferrer' : undefined)}\r\n        onClick={onClick}\r\n        title={title}\r\n        aria-label={ariaLabel}\r\n        data-testid={testId}\r\n      >\r\n        {content}\r\n      </a>\r\n    );\r\n  }\r\n  \r\n  // Otherwise render a button\r\n  return (\r\n    <button\r\n      type={type}\r\n      className={buttonClasses}\r\n      onClick={onClick}\r\n      disabled={disabled || loading}\r\n      title={title}\r\n      aria-label={ariaLabel}\r\n      data-testid={testId}\r\n    >\r\n      {content}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default memo(Button);\r\n","import * as React from \"react\";\nfunction CubeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m21 7.5-9-5.25L3 7.5m18 0-9 5.25m9-5.25v9l-9 5.25M3 7.5l9 5.25M3 7.5v9l9 5.25m0-9v9\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CubeIcon);\nexport default ForwardRef;"],"names":["useEntityData","apiService","options","entities","setEntities","useState","isLoading","setIsLoading","error","setError","showNotification","useNotification","apiServiceRef","useRef","showNotificationRef","entityNameRef","entityName","hasInitialFetched","useEffect","current","fetchEntities","useCallback","async","data","getAll","params","err","type","title","message","getEntityById","getById","id","createEntity","newEntity","create","prev","updateEntity","updatedEntity","update","map","entity","deleteEntity","delete","filter","initialFetch","console","log","ClipboardDocumentListIcon","_ref","svgRef","titleId","props","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","transformAttributeFromBackend","backendAttr","toString","name","key","value","transformVariantFromBackend","backendVariant","price","stock","transformProductFromBackend","backendProduct","_backendProduct$attri","_backendProduct$varia","sku","category","categoryId","minimumStock","status","description","image","images","supplierId","customerId","attributes","variants","reviews","createdAt","updatedAt","transformFrontendFormToBackend","formData","_formData$attributes","_formData$variants","Name","Description","undefined","Price","Stock","MinimumStock","CategoryId","SupplierId","CustomerId","Attributes","attr","Key","Value","Variants","variant","Type","CustomPrice","transformQueryParamsToBackend","backendParams","page","limit","search","inStock","sort","order","transformProductsListResponse","response","Array","isArray","success","pagination","Error","transformProductResponse","Id","validateBackendResponse","extractErrorMessage","errorResponse","errors","join","productsApi","getProducts","apiClient","get","ENDPOINTS","PRODUCTS","BASE","validatedResponse","_error$response","errorMessage","handleApiError","getProductById","DETAILS","_error$response2","createProduct","post","productData","_error$response3","createProductFromFrontend","backendData","frontendFormData","updateProduct","put","UPDATE","_error$response4","updateProductFromFrontend","deleteProduct","DELETE","_error$response5","updateProductStatus","STATUS","_error$response6","searchProducts","query","searchParams","getProductsBySupplier","getProductsByCategory","uploadProductImages","productId","files","length","FormData","forEach","file","append","UPLOAD_IMAGES","headers","_error$response7","deleteProductImage","imageUrl","DELETE_IMAGE","_error$response8","arguments","clearCache","apiAdapter","baseHook","product","updatedProduct","newProduct","getProductsWithPagination","showNotifications","result","products","fetchProducts","PhotoIcon","PageHeader","actions","breadcrumbs","className","testId","_jsxs","children","_jsx","Link","to","HomeIcon","item","index","ChevronRightIcon","path","label","memo","Card","subtitle","bodyClassName","headerClassName","footerClassName","icon","footer","onClick","hoverable","noPadding","bordered","loading","cardClasses","headerClasses","bodyClasses","footerClasses","size","color","useCurrentColor","sizeMap","sm","spinner","dots","pulse","ripple","md","lg","currentColor","role","style","borderTopColor","borderRightColor","backgroundColor","ArrowLeftIcon","AUTH","LOGIN","LOGOUT","CURRENT_USER","FORGOT_PASSWORD","RESET_PASSWORD","USERS","BAN","UNBAN","UPLOAD_IMAGE","SUPPLIERS","VERIFY","REJECT","VARIANTS","SEARCH","CATEGORIES","BUSINESS_TYPES","ORDERS","APPROVE","COMPLETE","DASHBOARD","STATS","SALES","USER_GROWTH","CATEGORY_DISTRIBUTION","RECENT_ORDERS","SALES_CHART","Button","disabled","iconPosition","fullWidth","rounded","href","target","rel","ariaLabel","buttonClasses","primary","secondary","outline","danger","text","link","xs","xl","content","_Fragment","cx","cy","r","CubeIcon"],"sourceRoot":""}