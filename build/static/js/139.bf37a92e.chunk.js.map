{"version":3,"file":"static/js/139.bf37a92e.chunk.js","mappings":"yJAiCA,MAAMA,EAAgCC,IAmB/B,IAnBgC,SACrCC,EAAQ,QACRC,EAAU,UAAS,KACnBC,EAAO,KAAI,UACXC,EAAY,GAAE,QACdC,EAAO,SACPC,GAAW,EAAK,KAChBC,EAAO,SAAQ,KACfC,EAAI,aACJC,EAAe,OAAM,UACrBC,GAAY,EAAK,QACjBC,GAAU,EAAK,QACfC,GAAU,EAAK,KACfC,EAAI,OACJC,EAAM,IACNC,EAAG,MACHC,EAAK,UACLC,EAAS,OACTC,GACDlB,EACC,MAwBMmB,EAAgB,kJAtBC,CACrBC,QAAS,+DACTC,UAAW,kEACXC,QAAS,oFACTC,OAAQ,4DACRC,QAAS,kEACTC,KAAM,mEACNC,KAAM,0EAiBWxB,WAdC,CAClByB,GAAI,oBACJC,GAAI,sBACJC,GAAI,oBACJC,GAAI,wBACJC,GAAI,qBAUU5B,WAPQG,EAAW,gCAAkC,yBAClDI,EAAY,SAAW,WACrBE,EAAU,eAAiB,qBAS5CR,QAGE4B,GACJC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAjC,SAAA,CACGU,IACCsB,EAAAA,EAAAA,MAAA,OACE7B,UAAU,+CACV+B,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACR,cAAY,OAAMpC,SAAA,EAElBqC,EAAAA,EAAAA,KAAA,UAAQlC,UAAU,aAAamC,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,OAAO,eAAeC,YAAY,OACxFL,EAAAA,EAAAA,KAAA,QAAMlC,UAAU,aAAagC,KAAK,eAAeQ,EAAE,uHAItDpC,GAAyB,SAAjBC,IAA4BE,IACnC2B,EAAAA,EAAAA,KAAA,QAAMlC,UAAU,OAAMH,SAAEO,IAGzBP,EAEAO,GAAyB,UAAjBC,IACP6B,EAAAA,EAAAA,KAAA,QAAMlC,UAAU,OAAMH,SAAEO,OAM9B,OAAIK,GAEAyB,EAAAA,EAAAA,KAAA,KACEzB,KAAMA,EACNT,UAAWe,EACXL,OAAQA,EACRC,IAAKA,IAAmB,WAAXD,EAAsB,2BAAwB+B,GAC3DxC,QAASA,EACTW,MAAOA,EACP,aAAYC,EACZ,cAAaC,EAAOjB,SAEnB+B,KAOLM,EAAAA,EAAAA,KAAA,UACE/B,KAAMA,EACNH,UAAWe,EACXd,QAASA,EACTC,SAAUA,GAAYK,EACtBK,MAAOA,EACP,aAAYC,EACZ,cAAaC,EAAOjB,SAEnB+B,GACM,EAIb,GAAec,EAAAA,EAAAA,MAAK/C,E,iGCxIpB,MA2BA,EA3B+BgD,KAE3BT,EAAAA,EAAAA,KAAA,OAAKlC,UAAU,yDAAwDH,UACrEgC,EAAAA,EAAAA,MAAA,OAAK7B,UAAU,cAAaH,SAAA,EAC1BqC,EAAAA,EAAAA,KAAA,MAAIlC,UAAU,mCAAkCH,SAAC,SACjDgC,EAAAA,EAAAA,MAAA,OAAK7B,UAAU,OAAMH,SAAA,EACnBqC,EAAAA,EAAAA,KAAA,MAAIlC,UAAU,mCAAkCH,SAAC,oBACjDqC,EAAAA,EAAAA,KAAA,KAAGlC,UAAU,6BAA4BH,SAAC,sEAI5CqC,EAAAA,EAAAA,KAAA,OAAKlC,UAAU,OAAMH,UACnBqC,EAAAA,EAAAA,KAACvC,EAAAA,EAAM,CACLG,QAAQ,UACRC,KAAK,KACLK,MAAM8B,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,CAAC5C,UAAU,YAC1BK,aAAa,OACbI,KAAMoC,EAAAA,EAAOC,UAAUjD,SACxB,4B","sources":["components/common/Button.tsx","pages/NotFoundPage.tsx"],"sourcesContent":["/**\n * Button Component\n * \n * A reusable button component with various styles and states.\n */\n\nimport React, { memo } from 'react';\nimport type { ReactNode } from 'react';\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'outline' | 'danger' | 'success' | 'text' | 'link';\nexport type ButtonSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\nexport interface ButtonProps {\n  children: ReactNode;\n  variant?: ButtonVariant;\n  size?: ButtonSize;\n  className?: string;\n  onClick?: () => void;\n  disabled?: boolean;\n  type?: 'button' | 'submit' | 'reset';\n  icon?: ReactNode;\n  iconPosition?: 'left' | 'right';\n  fullWidth?: boolean;\n  loading?: boolean;\n  rounded?: boolean;\n  href?: string;\n  target?: string;\n  rel?: string;\n  title?: string;\n  ariaLabel?: string;\n  testId?: string;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  variant = 'primary',\n  size = 'md',\n  className = '',\n  onClick,\n  disabled = false,\n  type = 'button',\n  icon,\n  iconPosition = 'left',\n  fullWidth = false,\n  loading = false,\n  rounded = false,\n  href,\n  target,\n  rel,\n  title,\n  ariaLabel,\n  testId,\n}) => {\n  const baseClasses = 'inline-flex items-center justify-center font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2';\n  \n  const variantClasses = {\n    primary: 'bg-primary text-white hover:bg-primary/90 focus:ring-primary',\n    secondary: 'bg-gray-200 text-gray-800 hover:bg-gray-300 focus:ring-gray-300',\n    outline: 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50 focus:ring-primary',\n    danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500',\n    success: 'bg-green-600 text-white hover:bg-green-700 focus:ring-green-500',\n    text: 'bg-transparent text-primary hover:bg-gray-100 focus:ring-primary',\n    link: 'bg-transparent text-primary hover:underline focus:ring-transparent p-0',\n  };\n  \n  const sizeClasses = {\n    xs: 'text-xs px-2 py-1',\n    sm: 'text-xs px-3 py-1.5',\n    md: 'text-sm px-4 py-2',\n    lg: 'text-base px-5 py-2.5',\n    xl: 'text-lg px-6 py-3',\n  };\n  \n  const disabledClasses = disabled ? 'opacity-60 cursor-not-allowed' : 'cursor-pointer';\n  const widthClass = fullWidth ? 'w-full' : '';\n  const roundedClass = rounded ? 'rounded-full' : 'rounded-lg';\n  \n  const buttonClasses = `\n    ${baseClasses}\n    ${variantClasses[variant]}\n    ${sizeClasses[size]}\n    ${disabledClasses}\n    ${widthClass}\n    ${roundedClass}\n    ${className}\n  `;\n  \n  const content = (\n    <>\n      {loading && (\n        <svg \n          className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-current\" \n          xmlns=\"http://www.w3.org/2000/svg\" \n          fill=\"none\" \n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n        >\n          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n      )}\n      \n      {icon && iconPosition === 'left' && !loading && (\n        <span className=\"mr-2\">{icon}</span>\n      )}\n      \n      {children}\n      \n      {icon && iconPosition === 'right' && (\n        <span className=\"ml-2\">{icon}</span>\n      )}\n    </>\n  );\n  \n  // If href is provided, render an anchor tag\n  if (href) {\n    return (\n      <a\n        href={href}\n        className={buttonClasses}\n        target={target}\n        rel={rel || (target === '_blank' ? 'noopener noreferrer' : undefined)}\n        onClick={onClick}\n        title={title}\n        aria-label={ariaLabel}\n        data-testid={testId}\n      >\n        {content}\n      </a>\n    );\n  }\n  \n  // Otherwise render a button\n  return (\n    <button\n      type={type}\n      className={buttonClasses}\n      onClick={onClick}\n      disabled={disabled || loading}\n      title={title}\n      aria-label={ariaLabel}\n      data-testid={testId}\n    >\n      {content}\n    </button>\n  );\n};\n\nexport default memo(Button);\n","/**\n * NotFoundPage Component\n * \n * The 404 page for the ConnectChain admin panel.\n */\n\nimport React from 'react';\n\nimport { HomeIcon } from '@heroicons/react/24/outline';\nimport Button from '../components/common/Button';\nimport { ROUTES } from '../constants/routes';\n\nconst NotFoundPage: React.FC = () => {\n  return (\n    <div className=\"min-h-[80vh] flex flex-col items-center justify-center\">\n      <div className=\"text-center\">\n        <h1 className=\"text-9xl font-bold text-gray-200\">404</h1>\n        <div className=\"mt-4\">\n          <h2 className=\"text-3xl font-bold text-gray-800\">Page Not Found</h2>\n          <p className=\"mt-2 text-lg text-gray-600\">\n            The page you are looking for doesn't exist or has been moved.\n          </p>\n        </div>\n        <div className=\"mt-8\">\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            icon={<HomeIcon className=\"h-5 w-5\" />}\n            iconPosition=\"left\"\n            href={ROUTES.DASHBOARD}\n          >\n            Back to Dashboard\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n"],"names":["Button","_ref","children","variant","size","className","onClick","disabled","type","icon","iconPosition","fullWidth","loading","rounded","href","target","rel","title","ariaLabel","testId","buttonClasses","primary","secondary","outline","danger","success","text","link","xs","sm","md","lg","xl","content","_jsxs","_Fragment","xmlns","fill","viewBox","_jsx","cx","cy","r","stroke","strokeWidth","d","undefined","memo","NotFoundPage","HomeIcon","ROUTES","DASHBOARD"],"sourceRoot":""}