{"version":3,"file":"static/js/99.f929dd50.chunk.js","mappings":"+IACA,SAASA,EAASC,EAIfC,GAAQ,IAJQ,MACjBC,EAAK,QACLC,KACGC,GACJJ,EACC,OAAoBK,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKZ,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBG,EAAAA,cAAoB,QAAS,CAC3DS,GAAIX,GACHD,GAAS,KAAmBG,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,qDAEP,CACA,MACA,EADiCZ,EAAAA,WAAiBN,E,6ECMlD,MAAMmB,EAA8BlB,IAiB7B,IAjB8B,OACnCmB,EAAM,QACNC,EAAO,MACPlB,EAAK,SACLmB,EAAQ,KACRC,EAAO,KAAI,OACXC,EAAM,WACNC,GAAa,EAAI,qBACjBC,GAAuB,EAAI,gBAC3BC,GAAkB,EAAI,SACtBC,GAAW,EAAI,UACfC,EAAY,GAAE,cACdC,EAAgB,GAAE,gBAClBC,EAAkB,GAAE,gBACpBC,EAAkB,GAAE,kBACpBC,EAAoB,GAAE,OACtBC,GACDjC,EACC,MAAMkC,GAAWC,EAAAA,EAAAA,QAAuB,MA2DxC,IAxDAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAgBC,IAChBd,GAAwB,WAAVc,EAAEC,KAClBnB,GACF,EASF,OANID,IACFqB,SAASC,iBAAiB,UAAWJ,GAErCG,SAASE,KAAKC,MAAMC,SAAW,UAG1B,KACLJ,SAASK,oBAAoB,UAAWR,GACxCG,SAASE,KAAKC,MAAMC,SAAW,MAAM,CACtC,GACA,CAACzB,EAAQC,EAASI,KAGrBY,EAAAA,EAAAA,YAAU,KACR,IAAKjB,IAAWe,EAASY,QAAS,OAElC,MAAMC,EAAoBb,EAASY,QAAQE,iBACzC,4EAGF,GAAiC,IAA7BD,EAAkBE,OAAc,OAEpC,MAAMC,EAAeH,EAAkB,GACjCI,EAAcJ,EAAkBA,EAAkBE,OAAS,GAE3DG,EAAgBd,IACN,QAAVA,EAAEC,MAEFD,EAAEe,SACAb,SAASc,gBAAkBJ,IAC7BC,EAAYI,QACZjB,EAAEkB,kBAGAhB,SAASc,gBAAkBH,IAC7BD,EAAaK,QACbjB,EAAEkB,kBAEN,EAMF,OAHAhB,SAASC,iBAAiB,UAAWW,GACrCF,EAAaK,QAEN,KACLf,SAASK,oBAAoB,UAAWO,EAAa,CACtD,GACA,CAACjC,KAECA,EAAQ,OAAO,KAGpB,MAUMsC,GACJC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAtC,SAAA,EAEPuC,EAAAA,EAAAA,KAAA,OACEhC,UAAW,gEAAgEI,IAC3E6B,QAASpC,EAAuBL,OAAU0C,EAC1C,cAAa,GAAG7B,gBAIlB2B,EAAAA,EAAAA,KAAA,OAAKhC,UAAU,qCAAoCP,UACjDuC,EAAAA,EAAAA,KAAA,OAAKhC,UAAW,yBAAyBD,EAAW,SAAW,yCAAyCN,UACtGqC,EAAAA,EAAAA,MAAA,OACE7C,IAAKqB,EACLN,UAAW,GAxBD,CAClBmC,GAAI,WACJC,GAAI,WACJC,GAAI,WACJC,GAAI,YACJC,GAAI,YACJC,KAAM,mBAkB4B9C,2GAA8GM,IACxIiC,QAAUvB,GAAMA,EAAE+B,kBAClB,cAAapC,EAAOZ,SAAA,EAGpBqC,EAAAA,EAAAA,MAAA,OAAK9B,UAAW,wEAAwEE,IAAkBT,SAAA,CACtF,kBAAVnB,GACN0D,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,sCAAqCP,SAAEnB,IAErDA,EAEDwB,IACCkC,EAAAA,EAAAA,KAAA,UACEU,KAAK,SACL1C,UAAU,wGACViC,QAASzC,EACT,aAAW,cACX,cAAa,GAAGa,iBAAsBZ,UAEtCuC,EAAAA,EAAAA,KAACW,EAAAA,EAAS,CAAC3C,UAAU,kBAM3BgC,EAAAA,EAAAA,KAAA,OAAKhC,UAAW,aAAaC,IAAgBR,SAC1CA,IAIFE,IACCqC,EAAAA,EAAAA,KAAA,OAAKhC,UAAW,4EAA4EG,IAAkBV,SAC3GE,cAUf,OAAOiD,EAAAA,EAAAA,cAAaf,EAAcjB,SAASE,KAAK,EAGlD,GAAe+B,EAAAA,EAAAA,MAAKvD,E,gDClLpB,SAASwD,EAAY1E,EAIlBC,GAAQ,IAJW,MACpBC,EAAK,QACLC,KACGC,GACJJ,EACC,OAAoBK,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKZ,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBG,EAAAA,cAAoB,QAAS,CAC3DS,GAAIX,GACHD,GAAS,KAAmBG,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,mQAEP,CACA,MACA,EADiCZ,EAAAA,WAAiBqE,E,mICvBlD,SAASC,EAAS3E,EAIfC,GAAQ,IAJQ,MACjBC,EAAK,QACLC,KACGC,GACJJ,EACC,OAAoBK,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKZ,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBG,EAAAA,cAAoB,QAAS,CAC3DS,GAAIX,GACHD,GAAS,KAAmBG,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,sWAEP,CACA,MACA,EADiCZ,EAAAA,WAAiBsE,G,yECMlD,MA+HA,EA/HkD3E,IAO3C,IAP4C,UACjD4E,EAAS,eACTC,EAAc,eACdC,EAAc,iBACdC,EAAgB,gBAChBC,EAAe,MACf9E,EAAQ,aACTF,EACC,MAAMiF,EAAU,CACd,CACE1C,IAAK,OACL2C,MAAO,UACPC,UAAU,EACVC,OAAQA,CAACC,EAAgBC,KACvB5B,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,oBAAmBP,SAAA,EAChCuC,EAAAA,EAAAA,KAAA,OAAKhC,UAAU,OAAMP,UACnBuC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,IACAD,EAASE,MAAQ,CAAEC,IAAKH,EAASE,MACtCE,IAAKJ,EAASK,KACdA,KAAML,EAASK,KACfrE,KAAK,UAGToC,EAAAA,EAAAA,MAAA,OAAArC,SAAA,EACEuC,EAAAA,EAAAA,KAAA,OAAKhC,UAAU,4BAA2BP,SAAEiE,EAASK,QACrDjC,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,wBAAuBP,SAAA,CAAC,OAAKiE,EAASxE,aAK7D,CAAEyB,IAAK,gBAAiB2C,MAAO,iBAAkBC,UAAU,GAC3D,CACE5C,IAAK,QACL2C,MAAO,QACPC,UAAU,EACVC,OAASQ,IACPlC,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,oBAAmBP,SAAA,EAChCuC,EAAAA,EAAAA,KAACc,EAAAA,EAAY,CAAC9C,UAAU,gCACxBgC,EAAAA,EAAAA,KAAA,QAAAvC,SAAOuE,QAIb,CACErD,IAAK,QACL2C,MAAO,QACPC,UAAU,EACVC,OAASQ,IACPlC,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,oBAAmBP,SAAA,EAChCuC,EAAAA,EAAAA,KAACe,EAAS,CAAC/C,UAAU,gCACrBgC,EAAAA,EAAAA,KAAA,QAAAvC,SAAOuE,QAIb,CACErD,IAAK,qBACL2C,MAAO,SACPC,UAAU,EACVC,OAASQ,IACP,IAAIC,EACJ,OAAOD,GACL,IAAK,WACHC,GAAOjC,EAAAA,EAAAA,KAACkC,EAAAA,EAAe,CAAClE,UAAU,gCAClC,MACF,IAAK,UACHiE,GAAOjC,EAAAA,EAAAA,KAAC7D,EAAAA,EAAS,CAAC6B,UAAU,iCAC5B,MACF,IAAK,WACHiE,GAAOjC,EAAAA,EAAAA,KAACmC,EAAAA,EAAW,CAACnE,UAAU,8BAGlC,OACE8B,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,oBAAmBP,SAAA,CAC/BwE,GACDjC,EAAAA,EAAAA,KAAA,QAAAvC,SAAOuE,EAAMI,OAAO,GAAGC,cAAgBL,EAAMM,MAAM,OAC/C,GAIZ,CAAE3D,IAAK,WAAY2C,MAAO,YAAaC,UAAU,GACjD,CACE5C,IAAK,UACL2C,MAAO,UACPE,OAAQA,CAACe,EAAQb,KACf5B,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,8BAA6BP,SAAA,EAC1CuC,EAAAA,EAAAA,KAAA,UACEhC,UAAU,sEACViC,QAAUvB,IACRA,EAAE+B,kBACFQ,EAAeS,EAAS,EACxBjE,UAEFuC,EAAAA,EAAAA,KAACwC,EAAAA,EAAO,CAACxE,UAAU,eAErBgC,EAAAA,EAAAA,KAAA,UACEhC,UAAU,uEACViC,QAAUvB,IACRA,EAAE+B,kBACFS,EAAeQ,EAAS,EACxBjE,UAEFuC,EAAAA,EAAAA,KAACyC,EAAAA,EAAU,CAACzE,UAAU,eAExBgC,EAAAA,EAAAA,KAAA,UACEhC,UAAU,sEACViC,QAAUvB,IACRA,EAAE+B,kBACFU,EAAiBO,EAAS,EAC1BjE,UAEFuC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAS,CAAC1E,UAAU,mBAO/B,OACEgC,EAAAA,EAAAA,KAAC2C,EAAAA,EAAS,CACRtB,QAASA,EACTuB,KAAM5B,EACN6B,WAAYzB,EACZ9E,MAAOA,EACPwG,YAAY,GACZ,EC/BN,EAvGwD1G,IAAmB,IAAlB,SAAEsF,GAAUtF,EACnE,OACE0D,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,YAAWP,SAAA,EACxBqC,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,oCAAmCP,SAAA,EAChDqC,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,8BAA6BP,SAAA,EAC1CuC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,IACAD,EAASE,MAAQ,CAAEC,IAAKH,EAASE,MACtCE,IAAKJ,EAASK,KACdA,KAAML,EAASK,KACfrE,KAAK,QAEPoC,EAAAA,EAAAA,MAAA,OAAArC,SAAA,EACEuC,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,oCAAmCP,SAAEiE,EAASK,QAC5DjC,EAAAA,EAAAA,MAAA,KAAG9B,UAAU,wBAAuBP,SAAA,CAAC,OAAKiE,EAASxE,OACnD8C,EAAAA,EAAAA,KAAA,OAAKhC,UAAU,OAAMP,UACnBuC,EAAAA,EAAAA,KAAA,QAAMhC,UAAW,4EACiB,aAAhC0D,EAASqB,mBACL,8BACgC,YAAhCrB,EAASqB,mBACP,gCACA,2BACLtF,SACAiE,EAASqB,mBAAmBX,OAAO,GAAGC,cAAgBX,EAASqB,mBAAmBT,MAAM,aAKhGZ,EAASsB,UACRhD,EAAAA,EAAAA,KAAA,KACEiD,KAAMvB,EAASsB,QACfE,OAAO,SACPC,IAAI,sBACJnF,UAAU,uCAAsCP,SACjD,sBAMLqC,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,sEAAqEP,SAAA,EAClFqC,EAAAA,EAAAA,MAAA,OAAArC,SAAA,EACEuC,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,yCAAwCP,SAAC,yBACvDqC,EAAAA,EAAAA,MAAA,MAAI9B,UAAU,YAAWP,SAAA,EACvBqC,EAAAA,EAAAA,MAAA,OAAArC,SAAA,EACEuC,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,wBAAuBP,SAAC,oBACtCuC,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,wBAAuBP,SAAEiE,EAAS0B,oBAElDtD,EAAAA,EAAAA,MAAA,OAAArC,SAAA,EACEuC,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,wBAAuBP,SAAC,WACtCuC,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,wBAAuBP,SAAEiE,EAAS2B,YAElDvD,EAAAA,EAAAA,MAAA,OAAArC,SAAA,EACEuC,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,wBAAuBP,SAAC,WACtCuC,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,wBAAuBP,SAAEiE,EAAS4B,kBAKtDxD,EAAAA,EAAAA,MAAA,OAAArC,SAAA,EACEuC,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,yCAAwCP,SAAC,aACvDuC,EAAAA,EAAAA,KAAA,WAAShC,UAAU,mCAAkCP,SAClDiE,EAAS6B,iBAKhBzD,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,gCAA+BP,SAAA,EAC5CuC,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,yCAAwCP,SAAC,gBACvDuC,EAAAA,EAAAA,KAAA,OAAKhC,UAAU,uBAAsBP,SAClCiE,EAAS8B,WAAWC,KAAI,CAACC,EAAUC,KAClC3D,EAAAA,EAAAA,KAAA,QAEEhC,UAAU,oGAAmGP,SAE5GiG,GAHIC,WASb7D,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,gCAA+BP,SAAA,EAC5CuC,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,yCAAwCP,SAAC,yBACvDqC,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,8BAA6BP,SAAA,CACT,aAAhCiE,EAASqB,oBACR/C,EAAAA,EAAAA,KAACkC,EAAAA,EAAe,CAAClE,UAAU,2BACO,YAAhC0D,EAASqB,oBACX/C,EAAAA,EAAAA,KAAC7D,EAAAA,EAAS,CAAC6B,UAAU,6BAErBgC,EAAAA,EAAAA,KAACmC,EAAAA,EAAW,CAACnE,UAAU,0BAEzBgC,EAAAA,EAAAA,KAAA,QAAMhC,UAAU,wBAAuBP,SACJ,aAAhCiE,EAASqB,mBACN,eAAerB,EAASkC,WACQ,YAAhClC,EAASqB,mBACP,uBACA,eAAerB,EAASkC,qBAIhC,E,cCrGV,MAwOA,EAxOwDxH,IAIjD,IAJkD,SACvDyH,EAAQ,SACRC,EAAQ,UACRC,GAAY,GACb3H,EACC,MAAO4H,EAAUC,IAAeC,EAAAA,EAAAA,UAA2B,CACzDnC,KAAM,GACNsB,MAAO,GACPC,MAAO,GACPC,QAAS,GACTH,cAAe,GACfI,WAAY,GACZ5B,KAAM,MAGDuC,EAAQC,IAAaF,EAAAA,EAAAA,UAAiC,CAAC,GAExDG,EAAgB3F,IACpB,MAAM,KAAEqD,EAAI,MAAEC,GAAUtD,EAAEwE,OAC1Be,GAAYK,IAAI,IAAUA,EAAM,CAACvC,GAAOC,MAGpCmC,EAAOpC,IACTqC,GAAUE,IAAI,IAAUA,EAAM,CAACvC,GAAO,MACxC,EAyDF,OACEjC,EAAAA,EAAAA,MAAA,QAAM+D,SATcnF,IACpBA,EAAEkB,iBA7BqB2E,MACvB,MAAMC,GAAmBC,EAAAA,EAAAA,GAAa,CACpC1C,KAAMiC,EAASjC,KACfsB,MAAOW,EAASX,MAChBC,MAAOU,EAASV,MAChBF,cAAeY,EAASZ,cACxBG,QAASS,EAAST,SACjB,CACDxB,KAAM,CAAC2C,EAAAA,GAAgBC,SAAS,6BAChCtB,MAAO,CAACqB,EAAAA,GAAgBC,SAAS,qBAAsBD,EAAAA,GAAgBrB,SACvEC,MAAO,CAACoB,EAAAA,GAAgBC,SAAS,4BAA6BD,EAAAA,GAAgBpB,SAC9EF,cAAe,CAACsB,EAAAA,GAAgBC,SAAS,+BACzCpB,QAAS,CAACmB,EAAAA,GAAgBC,SAAS,0BAGrC,GAAmC,IAA/BX,EAASR,WAAWnE,OAAc,CACpC,MAAMuF,EAAsB,IACvBJ,EACHhB,WAAY,uCAGd,OADAY,EAAUQ,GACyC,IAA5ClI,OAAOmI,KAAKD,GAAqBvF,MAC1C,CAGA,OADA+E,EAAUI,GACsC,IAAzC9H,OAAOmI,KAAKL,GAAkBnF,MAAY,EAM7CkF,IACFV,EAASG,EACX,EAI8BhG,UAAU,YAAWP,SAAA,EACjDqC,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,wCAAuCP,SAAA,EACpDqC,EAAAA,EAAAA,MAAA,OAAArC,SAAA,EACEqC,EAAAA,EAAAA,MAAA,SAAOgF,QAAQ,OAAO9G,UAAU,0CAAyCP,SAAA,CAAC,iBAC3DuC,EAAAA,EAAAA,KAAA,QAAMhC,UAAU,eAAcP,SAAC,UAE9CuC,EAAAA,EAAAA,KAAA,SACEU,KAAK,OACLxD,GAAG,OACH6E,KAAK,OACLC,MAAOgC,EAASjC,KAChBgD,SAAUV,EACVrG,UAAW,8GACTmG,EAAOpC,KAAO,iBAAmB,MAGpCoC,EAAOpC,OAAQ/B,EAAAA,EAAAA,KAAA,KAAGhC,UAAU,4BAA2BP,SAAE0G,EAAOpC,WAGnEjC,EAAAA,EAAAA,MAAA,OAAArC,SAAA,EACEqC,EAAAA,EAAAA,MAAA,SAAOgF,QAAQ,gBAAgB9G,UAAU,0CAAyCP,SAAA,CAAC,mBAClEuC,EAAAA,EAAAA,KAAA,QAAMhC,UAAU,eAAcP,SAAC,UAEhDuC,EAAAA,EAAAA,KAAA,SACEU,KAAK,OACLxD,GAAG,gBACH6E,KAAK,gBACLC,MAAOgC,EAASZ,cAChB2B,SAAUV,EACVrG,UAAW,8GACTmG,EAAOf,cAAgB,iBAAmB,MAG7Ce,EAAOf,gBAAiBpD,EAAAA,EAAAA,KAAA,KAAGhC,UAAU,4BAA2BP,SAAE0G,EAAOf,oBAG5EtD,EAAAA,EAAAA,MAAA,OAAArC,SAAA,EACEqC,EAAAA,EAAAA,MAAA,SAAOgF,QAAQ,QAAQ9G,UAAU,0CAAyCP,SAAA,CAAC,kBAC3DuC,EAAAA,EAAAA,KAAA,QAAMhC,UAAU,eAAcP,SAAC,UAE/CuC,EAAAA,EAAAA,KAAA,SACEU,KAAK,QACLxD,GAAG,QACH6E,KAAK,QACLC,MAAOgC,EAASX,MAChB0B,SAAUV,EACVrG,UAAW,8GACTmG,EAAOd,MAAQ,iBAAmB,MAGrCc,EAAOd,QAASrD,EAAAA,EAAAA,KAAA,KAAGhC,UAAU,4BAA2BP,SAAE0G,EAAOd,YAGpEvD,EAAAA,EAAAA,MAAA,OAAArC,SAAA,EACEqC,EAAAA,EAAAA,MAAA,SAAOgF,QAAQ,QAAQ9G,UAAU,0CAAyCP,SAAA,CAAC,iBAC5DuC,EAAAA,EAAAA,KAAA,QAAMhC,UAAU,eAAcP,SAAC,UAE9CuC,EAAAA,EAAAA,KAAA,SACEU,KAAK,MACLxD,GAAG,QACH6E,KAAK,QACLC,MAAOgC,EAASV,MAChByB,SAAUV,EACVrG,UAAW,8GACTmG,EAAOb,MAAQ,iBAAmB,MAGrCa,EAAOb,QAAStD,EAAAA,EAAAA,KAAA,KAAGhC,UAAU,4BAA2BP,SAAE0G,EAAOb,YAGpExD,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,gBAAeP,SAAA,EAC5BqC,EAAAA,EAAAA,MAAA,SAAOgF,QAAQ,UAAU9G,UAAU,0CAAyCP,SAAA,CAAC,YACnEuC,EAAAA,EAAAA,KAAA,QAAMhC,UAAU,eAAcP,SAAC,UAEzCuC,EAAAA,EAAAA,KAAA,SACEU,KAAK,OACLxD,GAAG,UACH6E,KAAK,UACLC,MAAOgC,EAAST,QAChBwB,SAAUV,EACVrG,UAAW,8GACTmG,EAAOZ,QAAU,iBAAmB,MAGvCY,EAAOZ,UAAWvD,EAAAA,EAAAA,KAAA,KAAGhC,UAAU,4BAA2BP,SAAE0G,EAAOZ,cAGtEzD,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,gBAAeP,SAAA,EAC5BqC,EAAAA,EAAAA,MAAA,SAAOgF,QAAQ,aAAa9G,UAAU,0CAAyCP,SAAA,CAAC,eACnEuC,EAAAA,EAAAA,KAAA,QAAMhC,UAAU,eAAcP,SAAC,UAE5CqC,EAAAA,EAAAA,MAAA,UACE5C,GAAG,aACH6E,KAAK,aACLiD,UAAQ,EACRhD,MAAOgC,EAASR,WAChBuB,SAvJoBrG,IAC5B,MAAMuG,EAAUvG,EAAEwE,OAAO+B,QACnBC,EAA+B,GAErC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQ5F,OAAQ8F,IAAK,CAAC,IAADC,EACbC,EAA1B,GAAc,QAAdD,EAAIH,EAAQE,UAAE,IAAAC,GAAVA,EAAYE,SACdJ,EAAmBK,MAAe,QAAVF,EAAAJ,EAAQE,UAAE,IAAAE,OAAA,EAAVA,EAAYrD,QAAS,GAEjD,CAEAiC,GAAYK,IAAI,IAAUA,EAAMd,WAAY0B,MAGxCf,EAAOX,YACTY,GAAUE,IAAI,IAAUA,EAAMd,WAAY,MAC5C,EAyIQxF,UAAW,8GACTmG,EAAOX,WAAa,iBAAmB,IAEzC9F,KAAM,EAAED,SAAA,EAERuC,EAAAA,EAAAA,KAAA,UAAQgC,MAAM,cAAavE,SAAC,iBAC5BuC,EAAAA,EAAAA,KAAA,UAAQgC,MAAM,YAAWvE,SAAC,eAC1BuC,EAAAA,EAAAA,KAAA,UAAQgC,MAAM,kBAAiBvE,SAAC,qBAChCuC,EAAAA,EAAAA,KAAA,UAAQgC,MAAM,mBAAkBvE,SAAC,sBACjCuC,EAAAA,EAAAA,KAAA,UAAQgC,MAAM,WAAUvE,SAAC,cACzBuC,EAAAA,EAAAA,KAAA,UAAQgC,MAAM,aAAYvE,SAAC,gBAC3BuC,EAAAA,EAAAA,KAAA,UAAQgC,MAAM,WAAUvE,SAAC,cACzBuC,EAAAA,EAAAA,KAAA,UAAQgC,MAAM,WAAUvE,SAAC,iBAE3BuC,EAAAA,EAAAA,KAAA,KAAGhC,UAAU,6BAA4BP,SAAC,qDACzC0G,EAAOX,aAAcxD,EAAAA,EAAAA,KAAA,KAAGhC,UAAU,4BAA2BP,SAAE0G,EAAOX,iBAGzE1D,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,gBAAeP,SAAA,EAC5BuC,EAAAA,EAAAA,KAAA,SAAO8E,QAAQ,OAAO9G,UAAU,0CAAyCP,SAAC,cAG1EuC,EAAAA,EAAAA,KAAA,SACEU,KAAK,OACLxD,GAAG,OACH6E,KAAK,OACLC,MAAOgC,EAASpC,KAChBmD,SAAUV,EACVrG,UAAU,qHAKhB8B,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,6BAA4BP,SAAA,EACzCuC,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CACL9E,KAAK,SACL+E,QAAQ,UACRxF,QAAS6D,EACT4B,SAAU3B,EAAUtG,SACrB,YAGDuC,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CACL9E,KAAK,SACLiF,QAAS5B,EAAUtG,SACpB,sBAIE,E,6BCzOJ,MAAMmI,EAA6BC,IACjC,CACL3I,GAAI2I,EAAa3I,GACjB6E,KAAM8D,EAAaC,YACnB1C,cAAeyC,EAAazC,cAC5BC,MAAOwC,EAAaxC,MACpBC,MAAOuC,EAAavC,MACpByC,OAAQ,SACRhD,mBAAoB8C,EAAaE,OACjCnC,SAAUiC,EAAaG,iBAAmB,IAAIC,KAAKJ,EAAaG,kBAAkBE,cAAcC,MAAM,KAAK,IAAM,IAAIF,MAAOC,cAAcC,MAAM,KAAK,GACrJ5C,QAAS,CACPsC,EAAatC,QACbsC,EAAaO,KACbP,EAAaQ,MACbR,EAAaS,QACbT,EAAaU,SACbC,OAAOC,SAASC,KAAK,MACvBlD,WAAYqC,EAAarC,YAAc,GACvC5B,KAAMiE,EAAajE,MAAQ,GAC3BoB,QAAS6C,EAAa7C,UAOb2D,EAAmBA,IACvBC,EAAAA,EAAcnD,IAAImC,GC0K3B,EA7LgCiB,KAC9B,MAAOC,EAAWC,IAAgB7C,EAAAA,EAAAA,UAAsD,QACjF8C,EAAwBC,IAA6B/C,EAAAA,EAAAA,WAAS,IAC9DgD,EAAkBC,IAAuBjD,EAAAA,EAAAA,WAAS,IAClDkD,EAAkBC,IAAuBnD,EAAAA,EAAAA,UAA0B,OACnEoD,EAA4BC,IAAiCrD,EAAAA,EAAAA,WAAS,IAMtElD,EAAWwG,IAAgBtD,EAAAA,EAAAA,UAAqByC,KAEjDc,EAAoBzG,EAAUwF,QAAO9E,GACvB,QAAdoF,GACGpF,EAASqB,qBAAuB+D,IAOnCY,EAAsBhG,IAC1B2F,EAAoB3F,GACpB6F,GAA8B,EAAK,EAuC/BI,EAAuBA,CAACC,EAAoBC,KAChDL,EAAaxG,EAAUyC,KAAI/B,GACrBA,EAASxE,KAAO0K,EACX,IACFlG,EACHqB,mBAAoB8E,EACpBjE,UAAU,IAAIqC,MAAOC,cAAcC,MAAM,KAAK,IAG3CzE,KAET6F,GAA8B,EAAM,EAGtC,OACEzH,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,YAAWP,SAAA,EACxBqC,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,8EAA6EP,SAAA,EAC1FqC,EAAAA,EAAAA,MAAA,OAAArC,SAAA,EACEuC,EAAAA,EAAAA,KAAA,MAAIhC,UAAU,mCAAkCP,SAAC,eACjDuC,EAAAA,EAAAA,KAAA,KAAGhC,UAAU,6BAA4BP,SAAC,sDAE5CuC,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CACLvD,MAAMjC,EAAAA,EAAAA,KAAC8H,EAAAA,EAAmB,CAAC9J,UAAU,YACrCiC,QAASA,IAAMgH,GAA0B,GAAMxJ,SAChD,qBAKHqC,EAAAA,EAAAA,MAACiI,EAAAA,EAAI,CAAAtK,SAAA,EACHqC,EAAAA,EAAAA,MAAA,OAAK9B,UAAU,4BAA2BP,SAAA,EACxCuC,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CACLC,QAAuB,QAAdqB,EAAsB,UAAY,UAC3CpJ,KAAK,KACLuC,QAASA,IAAM8G,EAAa,OAAOtJ,SACpC,mBAGDuC,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CACLC,QAAuB,YAAdqB,EAA0B,UAAY,UAC/CpJ,KAAK,KACLuC,QAASA,IAAM8G,EAAa,WAAWtJ,SACxC,0BAGDuC,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CACLC,QAAuB,aAAdqB,EAA2B,UAAY,UAChDpJ,KAAK,KACLuC,QAASA,IAAM8G,EAAa,YAAYtJ,SACzC,cAGDuC,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CACLC,QAAuB,aAAdqB,EAA2B,UAAY,UAChDpJ,KAAK,KACLuC,QAASA,IAAM8G,EAAa,YAAYtJ,SACzC,iBAKHuC,EAAAA,EAAAA,KAACgI,EAAY,CACXhH,UAAWyG,EACXrG,gBA5GqBM,IAC3BgG,EAAmBhG,EAAS,EA4GtBT,eAAgByG,EAChBxG,eAAiBQ,GAAauG,QAAQC,IAAI,iBAAkBxG,GAC5DP,iBAtGsBO,IACxByG,OAAOC,QAAQ,mCAAmC1G,EAASK,UAC7DyF,EAAaxG,EAAUwF,QAAO6B,GAAKA,EAAEnL,KAAOwE,EAASxE,KACvD,EAoGMZ,MAAO,GAAGwK,EAAU1E,OAAO,GAAGC,cAAgByE,EAAUxE,MAAM,iBAAiBmF,EAAkBpI,gBAKrGW,EAAAA,EAAAA,KAAC1C,EAAAA,EAAK,CACJC,OAAQyJ,EACRxJ,QAASA,IAAMyJ,GAA0B,GACzC3K,MAAM,mBACNoB,KAAK,KAAID,UAETuC,EAAAA,EAAAA,KAACsI,EAAe,CACdzE,SA7GmB0E,IACzBpB,GAAoB,GAGpBqB,YAAW,KAET,MAAMC,EAAwB,CAC5BvL,IAAK8D,EAAU3B,OAAS,GAAGqJ,WAC3B3G,KAAMwG,EAAaxG,KACnBqB,cAAemF,EAAanF,cAC5BC,MAAOkF,EAAalF,MACpBC,MAAOiF,EAAajF,MACpByC,OAAQ,SACRhD,mBAAoB,UACpBa,UAAU,IAAIqC,MAAOC,cAAcC,MAAM,KAAK,GAC9C5C,QAASgF,EAAahF,QACtBC,WAAY+E,EAAa/E,WACzB5B,KAAM2G,EAAa3G,MAAQ,GAC3BoB,QAAS,IAIXwE,EAAa,IAAIxG,EAAWyH,IAG5BtB,GAAoB,GACpBF,GAA0B,EAAM,GAC/B,KAAK,EAmFFnD,SAAUA,IAAMmD,GAA0B,GAC1ClD,UAAWmD,MAKdE,IACCpH,EAAAA,EAAAA,KAAC1C,EAAAA,EAAK,CACJC,OAAQ+J,EACR9J,QAASA,IAAM+J,GAA8B,GAC7CjL,MAAM,mBACNoB,KAAK,KACLC,QACEmC,EAAAA,EAAAA,MAAA6I,EAAAA,SAAA,CAAAlL,SAAA,EACEuC,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CACLC,QAAQ,UACRxF,QAASA,IAAMsH,GAA8B,GAAO9J,SACrD,UAGwC,YAAxC2J,EAAiBrE,qBAChBjD,EAAAA,EAAAA,MAAA6I,EAAAA,SAAA,CAAAlL,SAAA,EACEuC,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CACLC,QAAQ,SACRxF,QAASA,IAAM0H,EAAqBP,EAAiBlK,GAAI,YAAYO,SACtE,YAGDuC,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CACLC,QAAQ,UACRxF,QAASA,IAAM0H,EAAqBP,EAAiBlK,GAAI,YAAYO,SACtE,iBAMRA,UAEDuC,EAAAA,EAAAA,KAAC4I,EAAe,CAAClH,SAAU0F,QAG3B,C,gDC5MV,SAASU,EAAmB1L,EAIzBC,GAAQ,IAJkB,MAC3BC,EAAK,QACLC,KACGC,GACJJ,EACC,OAAoBK,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKZ,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBG,EAAAA,cAAoB,QAAS,CAC3DS,GAAIX,GACHD,GAAS,KAAmBG,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,+SAEP,CACA,MACA,EADiCZ,EAAAA,WAAiBqL,E","sources":["../node_modules/@heroicons/react/24/outline/esm/ClockIcon.js","components/common/Modal.tsx","../node_modules/@heroicons/react/24/outline/esm/EnvelopeIcon.js","../node_modules/@heroicons/react/24/outline/esm/PhoneIcon.js","features/suppliers/components/SupplierList.tsx","features/suppliers/components/SupplierDetails.tsx","features/suppliers/components/AddSupplierForm.tsx","features/suppliers/utils/supplierMappers.ts","pages/SuppliersPage.tsx","../node_modules/@heroicons/react/24/outline/esm/BuildingOffice2Icon.js"],"sourcesContent":["import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClockIcon);\nexport default ForwardRef;","/**\n * Modal Component\n * \n * A reusable modal dialog component.\n */\n\nimport React, { Fragment, useEffect, useRef, memo } from 'react';\nimport type { ReactNode } from 'react';\nimport { XMarkIcon } from '@heroicons/react/24/outline';\nimport { createPortal } from 'react-dom';\n\nexport interface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string | ReactNode;\n  children: ReactNode;\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full';\n  footer?: ReactNode;\n  closeOnEsc?: boolean;\n  closeOnBackdropClick?: boolean;\n  showCloseButton?: boolean;\n  centered?: boolean;\n  className?: string;\n  bodyClassName?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  backdropClassName?: string;\n  testId?: string;\n}\n\nconst Modal: React.FC<ModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  children,\n  size = 'md',\n  footer,\n  closeOnEsc = true,\n  closeOnBackdropClick = true,\n  showCloseButton = true,\n  centered = true,\n  className = '',\n  bodyClassName = '',\n  headerClassName = '',\n  footerClassName = '',\n  backdropClassName = '',\n  testId,\n}) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n  \n  // Handle Escape key press\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (closeOnEsc && e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      // Prevent scrolling on the body when modal is open\n      document.body.style.overflow = 'hidden';\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen, onClose, closeOnEsc]);\n  \n  // Focus trap inside modal\n  useEffect(() => {\n    if (!isOpen || !modalRef.current) return;\n    \n    const focusableElements = modalRef.current.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n    \n    if (focusableElements.length === 0) return;\n    \n    const firstElement = focusableElements[0] as HTMLElement;\n    const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n    \n    const handleTabKey = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab') return;\n      \n      if (e.shiftKey) {\n        if (document.activeElement === firstElement) {\n          lastElement.focus();\n          e.preventDefault();\n        }\n      } else {\n        if (document.activeElement === lastElement) {\n          firstElement.focus();\n          e.preventDefault();\n        }\n      }\n    };\n    \n    document.addEventListener('keydown', handleTabKey);\n    firstElement.focus();\n    \n    return () => {\n      document.removeEventListener('keydown', handleTabKey);\n    };\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n  \n  // Size classes\n  const sizeClasses = {\n    xs: 'max-w-xs',\n    sm: 'max-w-md',\n    md: 'max-w-lg',\n    lg: 'max-w-2xl',\n    xl: 'max-w-4xl',\n    full: 'max-w-full mx-4',\n  };\n  \n  // Modal content\n  const modalContent = (\n    <Fragment>\n      {/* Backdrop */}\n      <div \n        className={`fixed inset-0 bg-black bg-opacity-50 z-40 transition-opacity ${backdropClassName}`}\n        onClick={closeOnBackdropClick ? onClose : undefined}\n        data-testid={`${testId}-backdrop`}\n      />\n\n      {/* Modal */}\n      <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n        <div className={`flex min-h-full items-${centered ? 'center' : 'start'} justify-center p-4 text-center`}>\n          <div \n            ref={modalRef}\n            className={`${sizeClasses[size]} w-full transform overflow-hidden rounded-lg bg-white text-left align-middle shadow-xl transition-all ${className}`}\n            onClick={(e) => e.stopPropagation()}\n            data-testid={testId}\n          >\n            {/* Header */}\n            <div className={`flex items-center justify-between px-6 py-4 border-b border-gray-100 ${headerClassName}`}>\n              {typeof title === 'string' ? (\n                <h3 className=\"text-lg font-semibold text-gray-800\">{title}</h3>\n              ) : (\n                title\n              )}\n              {showCloseButton && (\n                <button\n                  type=\"button\"\n                  className=\"text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-primary rounded-full p-1\"\n                  onClick={onClose}\n                  aria-label=\"Close modal\"\n                  data-testid={`${testId}-close-button`}\n                >\n                  <XMarkIcon className=\"h-6 w-6\" />\n                </button>\n              )}\n            </div>\n\n            {/* Content */}\n            <div className={`px-6 py-4 ${bodyClassName}`}>\n              {children}\n            </div>\n\n            {/* Footer */}\n            {footer && (\n              <div className={`px-6 py-4 bg-gray-50 border-t border-gray-100 flex justify-end space-x-3 ${footerClassName}`}>\n                {footer}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n  \n  // Use portal to render modal at the end of the document body\n  return createPortal(modalContent, document.body);\n};\n\nexport default memo(Modal);\n","import * as React from \"react\";\nfunction EnvelopeIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M21.75 6.75v10.5a2.25 2.25 0 0 1-2.25 2.25h-15a2.25 2.25 0 0 1-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0 0 19.5 4.5h-15a2.25 2.25 0 0 0-2.25 2.25m19.5 0v.243a2.25 2.25 0 0 1-1.07 1.916l-7.5 4.615a2.25 2.25 0 0 1-2.36 0L3.32 8.91a2.25 2.25 0 0 1-1.07-1.916V6.75\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(EnvelopeIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PhoneIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PhoneIcon);\nexport default ForwardRef;","/**\n * Supplier List Component\n *\n * This component displays a list of suppliers in a data table.\n */\n\nimport React from 'react';\nimport DataTable from '../../../components/common/DataTable';\nimport Avatar from '../../../components/common/Avatar';\nimport type{ Supplier } from '../types/index';\nimport {\n  CheckCircleIcon,\n  XCircleIcon,\n  ClockIcon,\n  PencilIcon,\n  TrashIcon,\n  EyeIcon,\n  EnvelopeIcon,\n  PhoneIcon\n} from '@heroicons/react/24/outline';\n\ninterface SupplierListProps {\n  suppliers: Supplier[];\n  onViewSupplier: (supplier: Supplier) => void;\n  onEditSupplier: (supplier: Supplier) => void;\n  onDeleteSupplier: (supplier: Supplier) => void;\n  onSupplierClick: (supplier: Supplier) => void;\n  title?: string;\n}\n\nconst SupplierList: React.FC<SupplierListProps> = ({\n  suppliers,\n  onViewSupplier,\n  onEditSupplier,\n  onDeleteSupplier,\n  onSupplierClick,\n  title = 'Suppliers'\n}) => {\n  const columns = [\n    {\n      key: 'name',\n      label: 'Company',\n      sortable: true,\n      render: (_value: string, supplier: Supplier) => (\n        <div className=\"flex items-center\">\n          <div className=\"mr-3\">\n            <Avatar\n              {...(supplier.logo && { src: supplier.logo })}\n              alt={supplier.name}\n              name={supplier.name}\n              size=\"sm\"\n            />\n          </div>\n          <div>\n            <div className=\"font-medium text-gray-900\">{supplier.name}</div>\n            <div className=\"text-xs text-gray-500\">ID: {supplier.id}</div>\n          </div>\n        </div>\n      )\n    },\n    { key: 'contactPerson', label: 'Contact Person', sortable: true },\n    {\n      key: 'email',\n      label: 'Email',\n      sortable: true,\n      render: (value: string) => (\n        <div className=\"flex items-center\">\n          <EnvelopeIcon className=\"w-4 h-4 text-gray-400 mr-2\" />\n          <span>{value}</span>\n        </div>\n      )\n    },\n    {\n      key: 'phone',\n      label: 'Phone',\n      sortable: true,\n      render: (value: string) => (\n        <div className=\"flex items-center\">\n          <PhoneIcon className=\"w-4 h-4 text-gray-400 mr-2\" />\n          <span>{value}</span>\n        </div>\n      )\n    },\n    {\n      key: 'verificationStatus',\n      label: 'Status',\n      sortable: true,\n      render: (value: string) => {\n        let icon;\n        switch(value) {\n          case 'verified':\n            icon = <CheckCircleIcon className=\"w-4 h-4 text-green-500 mr-1\" />;\n            break;\n          case 'pending':\n            icon = <ClockIcon className=\"w-4 h-4 text-yellow-500 mr-1\" />;\n            break;\n          case 'rejected':\n            icon = <XCircleIcon className=\"w-4 h-4 text-red-500 mr-1\" />;\n            break;\n        }\n        return (\n          <div className=\"flex items-center\">\n            {icon}\n            <span>{value.charAt(0).toUpperCase() + value.slice(1)}</span>\n          </div>\n        );\n      }\n    },\n    { key: 'joinDate', label: 'Join Date', sortable: true },\n    {\n      key: 'actions',\n      label: 'Actions',\n      render: (_: any, supplier: Supplier) => (\n        <div className=\"flex items-center space-x-2\">\n          <button\n            className=\"p-1 text-gray-500 hover:text-primary rounded-full hover:bg-gray-100\"\n            onClick={(e) => {\n              e.stopPropagation();\n              onViewSupplier(supplier);\n            }}\n          >\n            <EyeIcon className=\"w-5 h-5\" />\n          </button>\n          <button\n            className=\"p-1 text-gray-500 hover:text-blue-600 rounded-full hover:bg-gray-100\"\n            onClick={(e) => {\n              e.stopPropagation();\n              onEditSupplier(supplier);\n            }}\n          >\n            <PencilIcon className=\"w-5 h-5\" />\n          </button>\n          <button\n            className=\"p-1 text-gray-500 hover:text-red-600 rounded-full hover:bg-gray-100\"\n            onClick={(e) => {\n              e.stopPropagation();\n              onDeleteSupplier(supplier);\n            }}\n          >\n            <TrashIcon className=\"w-5 h-5\" />\n          </button>\n        </div>\n      )\n    }\n  ];\n\n  return (\n    <DataTable\n      columns={columns}\n      data={suppliers}\n      onRowClick={onSupplierClick}\n      title={title}\n      pagination={true}\n    />\n  );\n};\n\nexport default SupplierList;\n","/**\n * Supplier Details Component\n * \n * This component displays detailed information about a supplier.\n */\n\nimport React from 'react';\nimport Avatar from '../../../components/common/Avatar';\nimport type{ Supplier } from '../types/index';\nimport {\n  CheckCircleIcon,\n  XCircleIcon,\n  ClockIcon\n} from '@heroicons/react/24/outline';\n\ninterface SupplierDetailsProps {\n  supplier: Supplier;\n}\n\nconst SupplierDetails: React.FC<SupplierDetailsProps> = ({ supplier }) => {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <Avatar\n            {...(supplier.logo && { src: supplier.logo })}\n            alt={supplier.name}\n            name={supplier.name}\n            size=\"xl\"\n          />\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900\">{supplier.name}</h3>\n            <p className=\"text-sm text-gray-500\">ID: {supplier.id}</p>\n            <div className=\"mt-1\">\n              <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                supplier.verificationStatus === 'verified'\n                  ? 'bg-green-100 text-green-800'\n                  : supplier.verificationStatus === 'pending'\n                    ? 'bg-yellow-100 text-yellow-800'\n                    : 'bg-red-100 text-red-800'\n              }`}>\n                {supplier.verificationStatus.charAt(0).toUpperCase() + supplier.verificationStatus.slice(1)}\n              </span>\n            </div>\n          </div>\n        </div>\n        {supplier.website && (\n          <a\n            href={supplier.website}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-primary hover:underline text-sm\"\n          >\n            Visit Website\n          </a>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 border-t border-gray-200 pt-4\">\n        <div>\n          <h4 className=\"text-sm font-medium text-gray-500 mb-3\">Contact Information</h4>\n          <dl className=\"space-y-3\">\n            <div>\n              <dt className=\"text-xs text-gray-500\">Contact Person</dt>\n              <dd className=\"text-sm text-gray-900\">{supplier.contactPerson}</dd>\n            </div>\n            <div>\n              <dt className=\"text-xs text-gray-500\">Email</dt>\n              <dd className=\"text-sm text-gray-900\">{supplier.email}</dd>\n            </div>\n            <div>\n              <dt className=\"text-xs text-gray-500\">Phone</dt>\n              <dd className=\"text-sm text-gray-900\">{supplier.phone}</dd>\n            </div>\n          </dl>\n        </div>\n\n        <div>\n          <h4 className=\"text-sm font-medium text-gray-500 mb-3\">Address</h4>\n          <address className=\"not-italic text-sm text-gray-900\">\n            {supplier.address}\n          </address>\n        </div>\n      </div>\n\n      <div className=\"border-t border-gray-200 pt-4\">\n        <h4 className=\"text-sm font-medium text-gray-500 mb-2\">Categories</h4>\n        <div className=\"flex flex-wrap gap-2\">\n          {supplier.categories.map((category, index) => (\n            <span \n              key={index} \n              className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\"\n            >\n              {category}\n            </span>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"border-t border-gray-200 pt-4\">\n        <h4 className=\"text-sm font-medium text-gray-500 mb-2\">Verification Status</h4>\n        <div className=\"flex items-center space-x-2\">\n          {supplier.verificationStatus === 'verified' ? (\n            <CheckCircleIcon className=\"w-5 h-5 text-green-500\" />\n          ) : supplier.verificationStatus === 'pending' ? (\n            <ClockIcon className=\"w-5 h-5 text-yellow-500\" />\n          ) : (\n            <XCircleIcon className=\"w-5 h-5 text-red-500\" />\n          )}\n          <span className=\"text-sm text-gray-700\">\n            {supplier.verificationStatus === 'verified'\n              ? `Verified on ${supplier.joinDate}`\n              : supplier.verificationStatus === 'pending'\n                ? 'Pending verification'\n                : `Rejected on ${supplier.joinDate}`}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SupplierDetails;\n","/**\n * Add Supplier Form Component\n * \n * This component provides a form for adding new suppliers.\n */\n\nimport React, { useState } from 'react';\nimport Button from '../../../components/common/Button';\nimport type{ SupplierFormData } from '../types/index';\nimport { validateForm, validationRules } from '../../../utils/validation';\n\ninterface AddSupplierFormProps {\n  onSubmit: (supplierData: SupplierFormData) => void;\n  onCancel: () => void;\n  isLoading?: boolean;\n}\n\nconst AddSupplierForm: React.FC<AddSupplierFormProps> = ({ \n  onSubmit, \n  onCancel, \n  isLoading = false \n}) => {\n  const [formData, setFormData] = useState<SupplierFormData>({\n    name: '',\n    email: '',\n    phone: '',\n    address: '',\n    contactPerson: '',\n    categories: [],\n    logo: ''\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Clear error when field is edited\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n  };\n\n  const handleCategoryChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const options = e.target.options;\n    const selectedCategories: string[] = [];\n    \n    for (let i = 0; i < options.length; i++) {\n      if (options[i]?.selected) {\n        selectedCategories.push(options[i]?.value || '');\n      }\n    }\n    \n    setFormData(prev => ({ ...prev, categories: selectedCategories }));\n    \n    // Clear error when field is edited\n    if (errors.categories) {\n      setErrors(prev => ({ ...prev, categories: '' }));\n    }\n  };\n\n  const validateFormData = () => {\n    const validationErrors = validateForm({\n      name: formData.name,\n      email: formData.email,\n      phone: formData.phone,\n      contactPerson: formData.contactPerson,\n      address: formData.address\n    }, {\n      name: [validationRules.required('Company name is required')],\n      email: [validationRules.required('Email is required'), validationRules.email()],\n      phone: [validationRules.required('Phone number is required'), validationRules.phone()],\n      contactPerson: [validationRules.required('Contact person is required')],\n      address: [validationRules.required('Address is required')]\n    });\n\n    if (formData.categories.length === 0) {\n      const newValidationErrors = {\n        ...validationErrors,\n        categories: 'Please select at least one category'\n      };\n      setErrors(newValidationErrors);\n      return Object.keys(newValidationErrors).length === 0;\n    }\n\n    setErrors(validationErrors);\n    return Object.keys(validationErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (validateFormData()) {\n      onSubmit(formData);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2\">\n        <div>\n          <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\n            Company Name <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary sm:text-sm ${\n              errors.name ? 'border-red-300' : ''\n            }`}\n          />\n          {errors.name && <p className=\"mt-1 text-sm text-red-600\">{errors.name}</p>}\n        </div>\n\n        <div>\n          <label htmlFor=\"contactPerson\" className=\"block text-sm font-medium text-gray-700\">\n            Contact Person <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            id=\"contactPerson\"\n            name=\"contactPerson\"\n            value={formData.contactPerson}\n            onChange={handleChange}\n            className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary sm:text-sm ${\n              errors.contactPerson ? 'border-red-300' : ''\n            }`}\n          />\n          {errors.contactPerson && <p className=\"mt-1 text-sm text-red-600\">{errors.contactPerson}</p>}\n        </div>\n\n        <div>\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n            Email Address <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary sm:text-sm ${\n              errors.email ? 'border-red-300' : ''\n            }`}\n          />\n          {errors.email && <p className=\"mt-1 text-sm text-red-600\">{errors.email}</p>}\n        </div>\n\n        <div>\n          <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700\">\n            Phone Number <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"tel\"\n            id=\"phone\"\n            name=\"phone\"\n            value={formData.phone}\n            onChange={handleChange}\n            className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary sm:text-sm ${\n              errors.phone ? 'border-red-300' : ''\n            }`}\n          />\n          {errors.phone && <p className=\"mt-1 text-sm text-red-600\">{errors.phone}</p>}\n        </div>\n\n        <div className=\"sm:col-span-2\">\n          <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700\">\n            Address <span className=\"text-red-500\">*</span>\n          </label>\n          <input\n            type=\"text\"\n            id=\"address\"\n            name=\"address\"\n            value={formData.address}\n            onChange={handleChange}\n            className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary sm:text-sm ${\n              errors.address ? 'border-red-300' : ''\n            }`}\n          />\n          {errors.address && <p className=\"mt-1 text-sm text-red-600\">{errors.address}</p>}\n        </div>\n\n        <div className=\"sm:col-span-2\">\n          <label htmlFor=\"categories\" className=\"block text-sm font-medium text-gray-700\">\n            Categories <span className=\"text-red-500\">*</span>\n          </label>\n          <select\n            id=\"categories\"\n            name=\"categories\"\n            multiple\n            value={formData.categories}\n            onChange={handleCategoryChange}\n            className={`mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary sm:text-sm ${\n              errors.categories ? 'border-red-300' : ''\n            }`}\n            size={4}\n          >\n            <option value=\"Electronics\">Electronics</option>\n            <option value=\"Furniture\">Furniture</option>\n            <option value=\"Office Supplies\">Office Supplies</option>\n            <option value=\"Food & Beverages\">Food & Beverages</option>\n            <option value=\"Clothing\">Clothing</option>\n            <option value=\"Healthcare\">Healthcare</option>\n            <option value=\"Software\">Software</option>\n            <option value=\"Hardware\">Hardware</option>\n          </select>\n          <p className=\"mt-1 text-xs text-gray-500\">Hold Ctrl (or Cmd) to select multiple categories</p>\n          {errors.categories && <p className=\"mt-1 text-sm text-red-600\">{errors.categories}</p>}\n        </div>\n\n        <div className=\"sm:col-span-2\">\n          <label htmlFor=\"logo\" className=\"block text-sm font-medium text-gray-700\">\n            Logo URL\n          </label>\n          <input\n            type=\"text\"\n            id=\"logo\"\n            name=\"logo\"\n            value={formData.logo}\n            onChange={handleChange}\n            className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary sm:text-sm\"\n          />\n        </div>\n      </div>\n\n      <div className=\"flex justify-end space-x-3\">\n        <Button \n          type=\"button\" \n          variant=\"outline\" \n          onClick={onCancel}\n          disabled={isLoading}\n        >\n          Cancel\n        </Button>\n        <Button \n          type=\"submit\" \n          loading={isLoading}\n        >\n          Add Supplier\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddSupplierForm;\n\n\n\n","/**\n * Supplier Mappers\n * \n * Utility functions to map between different supplier data formats\n */\n\nimport type{ Supplier } from '../types/index';\nimport { suppliers as mockSuppliers } from '../../../mockData/entities/suppliers';\n\n/**\n * Maps a mock supplier to the application supplier format\n */\nexport const mapMockSupplierToSupplier = (mockSupplier: any): Supplier => {\n  return {\n    id: mockSupplier.id,\n    name: mockSupplier.companyName,\n    contactPerson: mockSupplier.contactPerson,\n    email: mockSupplier.email,\n    phone: mockSupplier.phone,\n    status: 'active', // Default to active since mock data doesn't have this field\n    verificationStatus: mockSupplier.status,\n    joinDate: mockSupplier.verificationDate ? new Date(mockSupplier.verificationDate).toISOString().split('T')[0]! : new Date().toISOString().split('T')[0]!,\n    address: [\n      mockSupplier.address,\n      mockSupplier.city,\n      mockSupplier.state,\n      mockSupplier.zipCode,\n      mockSupplier.country\n    ].filter(Boolean).join(', '),\n    categories: mockSupplier.categories || [],\n    logo: mockSupplier.logo || '',\n    website: mockSupplier.website\n  };\n};\n\n/**\n * Get all suppliers from mock data\n */\nexport const getMockSuppliers = (): Supplier[] => {\n  return mockSuppliers.map(mapMockSupplierToSupplier);\n};\n\n/**\n * Get a supplier by ID from mock data\n */\nexport const getMockSupplierById = (id: string): Supplier | undefined => {\n  const mockSupplier = mockSuppliers.find(s => s.id === id);\n  if (!mockSupplier) return undefined;\n  return mapMockSupplierToSupplier(mockSupplier);\n};\n\nexport default {\n  mapMockSupplierToSupplier,\n  getMockSuppliers,\n  getMockSupplierById\n};\n","/**\r\n * Suppliers Page\r\n *\r\n * This page displays and manages suppliers in the system.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport Button from '../components/common/Button';\r\nimport Card from '../components/common/Card';\r\nimport Modal from '../components/common/Modal';\r\nimport { BuildingOffice2Icon } from '@heroicons/react/24/outline';\r\nimport {\r\n  SupplierList,\r\n  SupplierDetails,\r\n  AddSupplierForm,\r\n  Supplier,\r\n  SupplierFormData,\r\n  getMockSuppliers\r\n} from '../features/suppliers/index';\r\n\r\nconst SuppliersPage: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<'all' | 'pending' | 'verified' | 'rejected'>('all');\r\n  const [isAddSupplierModalOpen, setIsAddSupplierModalOpen] = useState(false);\r\n  const [isAddingSupplier, setIsAddingSupplier] = useState(false);\r\n  const [selectedSupplier, setSelectedSupplier] = useState<Supplier | null>(null);\r\n  const [isSupplierDetailsModalOpen, setIsSupplierDetailsModalOpen] = useState(false);\r\n\r\n  // In a real implementation, we would use the useSuppliers hook\r\n  // const { suppliers, isLoading, createSupplier, deleteSupplier, updateVerificationStatus } = useSuppliers();\r\n\r\n  // Use mock data from the centralized mock data file\r\n  const [suppliers, setSuppliers] = useState<Supplier[]>(getMockSuppliers());\r\n\r\n  const filteredSuppliers = suppliers.filter(supplier => {\r\n    if (activeTab === 'all') return true;\r\n    return supplier.verificationStatus === activeTab;\r\n  });\r\n\r\n  const handleSupplierClick = (supplier: Supplier) => {\r\n    handleViewSupplier(supplier);\r\n  };\r\n\r\n  const handleViewSupplier = (supplier: Supplier) => {\r\n    setSelectedSupplier(supplier);\r\n    setIsSupplierDetailsModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteSupplier = (supplier: Supplier) => {\r\n    if (window.confirm(`Are you sure you want to delete ${supplier.name}?`)) {\r\n      setSuppliers(suppliers.filter(s => s.id !== supplier.id));\r\n    }\r\n  };\r\n\r\n  const handleAddSupplier = (supplierData: SupplierFormData) => {\r\n    setIsAddingSupplier(true);\r\n\r\n    // Simulate API call\r\n    setTimeout(() => {\r\n      // Create new supplier with form data\r\n      const newSupplier: Supplier = {\r\n        id: (suppliers.length + 1).toString(),\r\n        name: supplierData.name,\r\n        contactPerson: supplierData.contactPerson,\r\n        email: supplierData.email,\r\n        phone: supplierData.phone,\r\n        status: 'active',\r\n        verificationStatus: 'pending',\r\n        joinDate: new Date().toISOString().split('T')[0]!,\r\n        address: supplierData.address,\r\n        categories: supplierData.categories,\r\n        logo: supplierData.logo || '',\r\n        website: '' // Add empty website field for consistency\r\n      };\r\n\r\n      // Add to suppliers array\r\n      setSuppliers([...suppliers, newSupplier]);\r\n\r\n      // Reset state\r\n      setIsAddingSupplier(false);\r\n      setIsAddSupplierModalOpen(false);\r\n    }, 1500);\r\n  };\r\n\r\n  const handleVerifySupplier = (supplierId: string, newStatus: 'verified' | 'rejected') => {\r\n    setSuppliers(suppliers.map(supplier => {\r\n      if (supplier.id === supplierId) {\r\n        return {\r\n          ...supplier,\r\n          verificationStatus: newStatus,\r\n          joinDate: new Date().toISOString().split('T')[0]!\r\n        };\r\n      }\r\n      return supplier;\r\n    }));\r\n    setIsSupplierDetailsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-800\">Suppliers</h1>\r\n          <p className=\"mt-1 text-sm text-gray-500\">Manage your suppliers and verify applications</p>\r\n        </div>\r\n        <Button\r\n          icon={<BuildingOffice2Icon className=\"h-5 w-5\" />}\r\n          onClick={() => setIsAddSupplierModalOpen(true)}\r\n        >\r\n          Add Supplier\r\n        </Button>\r\n      </div>\r\n\r\n      <Card>\r\n        <div className=\"flex flex-wrap gap-3 mb-6\">\r\n          <Button\r\n            variant={activeTab === 'all' ? 'primary' : 'outline'}\r\n            size=\"sm\"\r\n            onClick={() => setActiveTab('all')}\r\n          >\r\n            All Suppliers\r\n          </Button>\r\n          <Button\r\n            variant={activeTab === 'pending' ? 'primary' : 'outline'}\r\n            size=\"sm\"\r\n            onClick={() => setActiveTab('pending')}\r\n          >\r\n            Pending Verification\r\n          </Button>\r\n          <Button\r\n            variant={activeTab === 'verified' ? 'primary' : 'outline'}\r\n            size=\"sm\"\r\n            onClick={() => setActiveTab('verified')}\r\n          >\r\n            Verified\r\n          </Button>\r\n          <Button\r\n            variant={activeTab === 'rejected' ? 'primary' : 'outline'}\r\n            size=\"sm\"\r\n            onClick={() => setActiveTab('rejected')}\r\n          >\r\n            Rejected\r\n          </Button>\r\n        </div>\r\n\r\n        <SupplierList\r\n          suppliers={filteredSuppliers}\r\n          onSupplierClick={handleSupplierClick}\r\n          onViewSupplier={handleViewSupplier}\r\n          onEditSupplier={(supplier) => console.log('Edit supplier:', supplier)}\r\n          onDeleteSupplier={handleDeleteSupplier}\r\n          title={`${activeTab.charAt(0).toUpperCase() + activeTab.slice(1)} Suppliers (${filteredSuppliers.length})`}\r\n        />\r\n      </Card>\r\n\r\n      {/* Add Supplier Modal */}\r\n      <Modal\r\n        isOpen={isAddSupplierModalOpen}\r\n        onClose={() => setIsAddSupplierModalOpen(false)}\r\n        title=\"Add New Supplier\"\r\n        size=\"lg\"\r\n      >\r\n        <AddSupplierForm\r\n          onSubmit={handleAddSupplier}\r\n          onCancel={() => setIsAddSupplierModalOpen(false)}\r\n          isLoading={isAddingSupplier}\r\n        />\r\n      </Modal>\r\n\r\n      {/* Supplier Details Modal */}\r\n      {selectedSupplier && (\r\n        <Modal\r\n          isOpen={isSupplierDetailsModalOpen}\r\n          onClose={() => setIsSupplierDetailsModalOpen(false)}\r\n          title=\"Supplier Details\"\r\n          size=\"lg\"\r\n          footer={\r\n            <>\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={() => setIsSupplierDetailsModalOpen(false)}\r\n              >\r\n                Close\r\n              </Button>\r\n              {selectedSupplier.verificationStatus === 'pending' && (\r\n                <>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => handleVerifySupplier(selectedSupplier.id, 'rejected')}\r\n                  >\r\n                    Reject\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"success\"\r\n                    onClick={() => handleVerifySupplier(selectedSupplier.id, 'verified')}\r\n                  >\r\n                    Verify\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </>\r\n          }\r\n        >\r\n          <SupplierDetails supplier={selectedSupplier} />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuppliersPage;","import * as React from \"react\";\nfunction BuildingOffice2Icon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 21h19.5m-18-18v18m10.5-18v18m6-13.5V21M6.75 6.75h.75m-.75 3h.75m-.75 3h.75m3-6h.75m-.75 3h.75m-.75 3h.75M6.75 21v-3.375c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21M3 3h12m-.75 4.5H21m-3.75 3.75h.008v.008h-.008v-.008Zm0 3h.008v.008h-.008v-.008Zm0 3h.008v.008h-.008v-.008Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(BuildingOffice2Icon);\nexport default ForwardRef;"],"names":["ClockIcon","_ref","svgRef","title","titleId","props","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","Modal","isOpen","onClose","children","size","footer","closeOnEsc","closeOnBackdropClick","showCloseButton","centered","className","bodyClassName","headerClassName","footerClassName","backdropClassName","testId","modalRef","useRef","useEffect","handleEscape","e","key","document","addEventListener","body","style","overflow","removeEventListener","current","focusableElements","querySelectorAll","length","firstElement","lastElement","handleTabKey","shiftKey","activeElement","focus","preventDefault","modalContent","_jsxs","Fragment","_jsx","onClick","undefined","xs","sm","md","lg","xl","full","stopPropagation","type","XMarkIcon","createPortal","memo","EnvelopeIcon","PhoneIcon","suppliers","onViewSupplier","onEditSupplier","onDeleteSupplier","onSupplierClick","columns","label","sortable","render","_value","supplier","Avatar","logo","src","alt","name","value","icon","CheckCircleIcon","XCircleIcon","charAt","toUpperCase","slice","_","EyeIcon","PencilIcon","TrashIcon","DataTable","data","onRowClick","pagination","verificationStatus","website","href","target","rel","contactPerson","email","phone","address","categories","map","category","index","joinDate","onSubmit","onCancel","isLoading","formData","setFormData","useState","errors","setErrors","handleChange","prev","validateFormData","validationErrors","validateForm","validationRules","required","newValidationErrors","keys","htmlFor","onChange","multiple","options","selectedCategories","i","_options$i","_options$i2","selected","push","Button","variant","disabled","loading","mapMockSupplierToSupplier","mockSupplier","companyName","status","verificationDate","Date","toISOString","split","city","state","zipCode","country","filter","Boolean","join","getMockSuppliers","mockSuppliers","SuppliersPage","activeTab","setActiveTab","isAddSupplierModalOpen","setIsAddSupplierModalOpen","isAddingSupplier","setIsAddingSupplier","selectedSupplier","setSelectedSupplier","isSupplierDetailsModalOpen","setIsSupplierDetailsModalOpen","setSuppliers","filteredSuppliers","handleViewSupplier","handleVerifySupplier","supplierId","newStatus","BuildingOffice2Icon","Card","SupplierList","console","log","window","confirm","s","AddSupplierForm","supplierData","setTimeout","newSupplier","toString","_Fragment","SupplierDetails"],"sourceRoot":""}